head	1.13;
access;
symbols
	Release-7-1-1:1.13.0.14
	Root_Release-7-1-1:1.13
	Root_Release_7-0-1:1.13
	Release_7-0-1:1.13.0.12
	Release_7-0-0:1.13.0.10
	Root_Release_7-0-0:1.13
	Release-6-2-2:1.13.0.8
	Release-6-1-2-3:1.13
	Root_Release-6-1-2-3:1.13
	Release-6-1-2-2:1.13.0.6
	Root_Release-6-1-2-2:1.13
	debian_version_6_1_2_1-1:1.13
	upstream_version_6_1_2_1:1.13
	Release-6-1-2-1_new:1.13.0.4
	Root_Release-6-1-2-1_new:1.13
	Release-6-1-2-1:1.13.0.2
	Root_Release-6-1-2-1:1.13
	upstream_version_6_1_2:1.12
	debian_version_6_1_2-1:1.12
	Release-6-1-2:1.12.0.6
	Root_Release-6-1-2:1.12
	debian_version_6_1_1-2:1.12
	debian_version_6_1_1-1:1.12
	upstream_version_6_1_1:1.12
	Release-6-1-1:1.12.0.4
	Root_Release-6-1-1:1.12
	Release-6-0-4:1.12.0.2
	Root_Release-6-0-4:1.12
	Release-6-0-3_NEW:1.11.0.18
	Root_Release-6-0-3_NEW:1.11
	Release-6-0-3:1.11.0.20
	Root_Release-6-0-3:1.11
	Release-6-0-0:1.11.0.16
	Root_Release-6-0-0:1.11
	Release-5-5-4-1:1.11.0.14
	Root_Release-5-5-4-1:1.11
	Release-5-5-4:1.11.0.12
	Root_Release-5-5-4:1.11
	Release-5-5-3:1.11.0.10
	ROOT_Release-5-5-3:1.11
	Release-5-5-2:1.11.0.8
	Root_Release-5-5-2:1.11
	debian_version_5_5_1-1:1.11
	Release-5-5-1:1.11.0.4
	upstream_version_5_5_1:1.11
	ROOT_Release-5-5-1:1.11
	debian_version_5_5-1:1.11
	upstream_version_5_5:1.11
	ROOT_Release-5-5:1.11
	Release-5-5:1.11.0.6
	debian_version_5_4_4_2-3:1.11
	Release-5-4-4-2-1:1.11.0.2
	debian_version_5_4_4_2-2:1.11
	debian_version_5_4_4_2-1:1.11
	upstream_version_5_4_4_2:1.11
	debian_version_5_4_4_1-1:1.10
	upstream_version_5_4_4_1:1.10
	debian_version_5_4_4-1:1.10
	upstream_version_5_4_4:1.10
	Release-5-4-4:1.10.0.24
	Root_Release-5-4-4:1.10
	debian_version_5_4_3_2-1:1.10
	upstream_version_5_4_3_2:1.10
	Release_5-4-3-2:1.10.0.20
	Root_Release_5-4-3-2:1.10
	upstream_version_5_4_3_1:1.10
	debian_version_5_4_3_1-1:1.10
	Release-5-4-3:1.10.0.18
	Root_Release-5-4-3:1.10
	Root_Release-5-4-1:1.10
	Release-5-4-1:1.10.0.16
	Root_Release-5-4:1.10
	Release-5-4:1.10.0.14
	upstream_version_5_3_4:1.10
	debian_version_5_3_4-1:1.10
	ROOT_Release-5-3-4:1.10
	Release-5-3-4:1.10.0.12
	ROOT_Release-5-3-3:1.10
	Release-5-3-3:1.10.0.8
	debian_version_5_3_2_1_2-1:1.10
	upstream_version_5_3_2_1_2:1.10
	debian_version_5_3_2_1_1-1:1.10
	debian_version_5_3_2_1_1:1.10
	upstream_version_5_3_2_1_1:1.10
	Root_Release-5-3-2-1:1.10
	Release-5-3-2-1:1.10
	ROOT_RELEASE-5-3-2-1:1.10
	RELEASE-5-3-2-1:1.10.0.10
	Release-5-3-2:1.10.0.6
	Root_Release-5-3-2:1.10
	Root_Release-5-3-1:1.10
	Release-5-3-1:1.10.0.4
	Release-5-2-3-1:1.10.0.2
	Root_Release-5-2-3-1:1.10
	Release-5-2-2-4:1.8.0.10
	Root_Release-5-2-2-4:1.8
	Release-5-2-2-1:1.8.0.8
	Root_Release-5-2-2-1:1.8
	upstream_version_5_2_2:1.8
	debian_version_5_2_2-1:1.8
	Release-5-2-2:1.8.0.6
	ROOT_Release-5-2-2:1.8
	ROOT_Release-5-2-1:1.8
	Release-5-2-1:1.8.0.4
	Release-5-2-0:1.8.0.2
	ROOT_Release-5-2-0:1.8
	ROOT_Release-5-1-2:1.7
	Release-5-1-2:1.7.0.10
	Version-5-1-1:1.7.0.8
	ROOT_Version-5-1-1:1.7
	debian_version_5_1_0-1:1.7
	upstream_version_5_1_0:1.7
	ROOT_Release-5-1-0:1.7
	Release-5-1-0:1.7.0.6
	ROOT_Release-5-0-0:1.7
	Release-5-0-0:1.7.0.4
	Release-4-3-3:1.7.0.2
	ROOT_Release-4-3-3:1.7
	upstream_version_4_3_2:1.6
	debian_version_4_3_2-1:1.6
	ROOT_Release-4-3-2:1.6
	Release-4-3-2:1.6.0.4
	Release-4-3-1:1.6.0.2
	ROOT_Release-4-3-1:1.6
	debian_version_4_3_0-1:1.5
	upstream_version_4_3_0:1.5
	ROOT_Release-4-3-0:1.5
	Release-4-3-0:1.5.0.2
	debian_version_3_2_1b-2:1.1
	debian_version_4_2_2-1:1.4
	upstream_version_4_2_2:1.4
	debian_version_3_2_1b-1:1.1
	upstream_version_3_2_1b:1.1
	Release-4-1-2:1.4.0.2
	Release-4-0-8:1.3.0.6
	debian_version_4_0_8a-1:1.3
	upstream_version_4_0_8a:1.3
	jostb-debian-ubuntu-patch:1.3.0.4
	debian_version_4_0_8-1:1.3
	upstream_version_4_0_8:1.3
	debian_version_4_0_7-1:1.3
	upstream_version_4_0_7:1.3
	debian_version_4_0_6-1:1.3
	upstream_version_4_0_6:1.3
	debian_version_4_0_2-1:1.3
	upstream_version_4_0_2:1.3
	Release-4-0-2_Root:1.3
	Release-4-0-2:1.3.0.2
	upstream_version_4_0_1:1.2
	debian_version_4_0_1-2:1.2
	Release-3-2-1:1.1.0.2;
locks; strict;
comment	@# @;


1.13
date	2010.04.28.20.56.30;	author jost_boekemeier;	state Exp;
branches;
next	1.12;

1.12
date	2010.03.06.11.12.45;	author jost_boekemeier;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.18.14.57.04;	author jost_boekemeier;	state Exp;
branches;
next	1.10;

1.10
date	2008.09.29.16.32.20;	author jost_boekemeier;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.28.21.56.52;	author jost_boekemeier;	state Exp;
branches;
next	1.8;

1.8
date	2008.02.10.15.38.20;	author jost_boekemeier;	state Exp;
branches;
next	1.7;

1.7
date	2007.12.28.13.56.41;	author jost_boekemeier;	state Exp;
branches;
next	1.6;

1.6
date	2007.12.02.18.05.07;	author jost_boekemeier;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.19.10.12.27;	author jost_boekemeier;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.13.19.51.47;	author jost_boekemeier;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.19.13.03.16;	author jost_boekemeier;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.09.20.28.06;	author andremachado;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.15.10.31.25;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Release-6-1-2-1
@
text
@Overview
--------

The PHP JSR 223 interface associates a managed and persistent PHP
executable with a JSR 223 ScriptEngine.

This document describes how to call PHP methods from Java using the
JSR 223 interface. For example it is possible to use PHP as a script
plugin for a Java report engine such as BIRT; for formula fields,
group selection formulas, etc. Please see the INSTALL.J2EE document
for details how to embed PHP into a pure J2EE application server or
how to call Java methods from PHP.

The PHP/Java Bridge can be installed with one copy operation:

* the "JavaBridge.jar" and the "php-script.jar" should be copied into
the J2SE java.ext.dirs directory.


Install PHP into J2SE
---------------------

* Install Java 1.6 or above. For older Java versions you'll need the
  script-api.jar contained in the JavaBridge.war file.

* Install PHP 5.1.4 or above into the operating system PATH. Or use
  the Java system property -Dphp.java.bridge.php_exec=... to direct
  Java to a specific PHP executable.

* Type: java -classpath JavaBridge.war TestInstallation

* Copy the created "JavaBridge.jar" and "php-script.jar" from the
  "ext" folder to the J2SE library path. On Windows the location
  depends on the version and vendor of the JDK (see java.ext.dirs from
  the above RESULT.html). On Linux the directory is:

  /usr/java/packages/lib/ext/


* Use the command "jrunscript" to evaluate PHP scripts from Java, for
  example:

    jrunscript -l php phpFile.php 

  or:

    jrunscript -J-Dphp.java.bridge.php_exec=/usr/bin/php-cgi -l php phpFile.php


* A convenience ScriptEngine is available which makes it easier to
  invoke PHP methods from Java. Example:

    ScriptEngineManager manager = new ScriptEngineManager();
    ScriptEngine e = manager.getEngineByName("php-invocable");

    e.eval("<?php class f {function a($p) {return ((int)(string)$p)+1;}}\n" +
                     "java_context()->setAttribute('f', 
                                  java_closure(new f()), 100); ?>");
    Invocable i = (Invocable)e;

    Object f = e.getContext().getAttribute("f", 100);
    System.out.println(i.invokeMethod(f, "a", new Object[] {new Integer(1)}));

    ((Closeable)e).close(); // release the continuation, flush output
    

* Another convenience ScriptEngine can be used to implement a
  REPL. Example:

  ScriptEngineManager manager = new ScriptEngineManager();
  ScriptEngine e = manager.getEngineByName("php-interactive");
  System.out.println(e.eval("$a=122"));
  System.out.println(e.eval("$a=$a+1;"));
  System.out.println(e.eval("echo $a;"));

* Please see the JSR 223 specification for details.

* Please report bugs/problems to the mailing list:

    php-java-bridge-users@@lists.sourceforge.net

@


1.12
log
@Release-6-0-4
@
text
@d26 3
a28 1
* Install PHP 5.1.4 or above.
@


1.11
log
@Release-5-4-4-2
@
text
@d24 1
a24 1
script-api.jar contained in the JavaBridge.war file.
d28 1
a28 2
* Download and extract the php-java-bridge*_j2ee.zip archive into a
folder and type: java -classpath JavaBridge.war TestInstallation
d31 3
a33 3
"ext" folder to the J2SE library path. On Windows the location depends
on the version and vendor of the JDK (see java.ext.dirs from the above
RESULT.html). On Linux the directory is:
d39 1
a39 1
example:
d49 1
a49 3
invoke PHP methods from Java. Example:

    System.setProperty("php.java.bridge.default_log_file", "");
@


1.10
log
@Release-5-2-3-1
@
text
@d65 1
a65 1
    e.eval ((Reader)null); // release the continuation, flush output
@


1.9
log
@Release-5-2-3
@
text
@d5 1
a5 1
executable or the current PHP web context with a JSR 223 ScriptEngine.
d28 1
a28 1
* Download and extract the php-java-bridge_j2ee*.zip archive into a
d57 1
a57 1
    e.eval("<?php class f {function a($p) {return java_values($p)+1;}}\n" +
a76 47

* Furthermore it is possible to run PHP scripts in servlets. The
  examples below use JSP to demonstrate the features (in JSP "this" is
  the Servlet, "application" is the ServletContext and "request",
  "response" the HttpServletRequest and HttpServletResponse objects.

  The web application needs a context listener declared in 
  WEB-INF/web.xml:

   <listener>
       <listener-class>php.java.servlet.ContextLoaderListener</listener-class>
   </listener>

  And the JavaBridge.jar, php-servlet.jar, php-script.jar, script-api.jar
  must be available in the WEB-INF/lib directory.

  Servlets can then access PHP scripts as follows:

  <%
    javax.script.ScriptEngine e = 
      php.java.script.servlet.EngineFactory.getPhpScriptEngine (this, 
                                                        application, 
                                                        request, response);
    e.getContext().setWriter (out);
    e.eval ("<?php phpinfo(); ?>");
    e.eval (new java.io.FileReader("otherScript.php"));
    ...
  %>

  The InvocablePhpScriptEngine can be accessed as follows:

  <%
    javax.script.ScriptEngine e = 
      php.java.script.servlet.EngineFactory.getInvocablePhpScriptEngine (this, 
                                                        application, 
                                                        request, response);
    e.getContext().setWriter (out);
    e.eval ("<?php function hello() {echo "hello";}; ?>");
    javax.script.Invocable i = (javax.script.Invocable) e;
    i.invokeFunction ("hello", new Object[]{});
    ...
    e.eval ((java.io.Reader)null);
  %>
   
  Note the terminating e.eval (...) above. It flushes the output
  generated by the previous invokeXXX function calls.

@


1.8
log
@Version-5-1-2
@
text
@d97 1
a97 1
      php.java.script.EngineFactory.getPhpScriptEngine (this, 
d110 1
a110 1
      php.java.script.EngineFactory.getInvocablePhpScriptEngine (this, 
@


1.7
log
@Release-4-3-3
@
text
@d4 3
d8 1
a8 1
JSR223 interface. For example it is possible to use PHP as a script
d16 1
a16 1
* the "JavaBridge.jar" and the "php-script.jar" must be copied into
@


1.6
log
@Release-4-3-1
@
text
@d25 2
a26 2
* Download and extract the PHP/Java Bridge binary download into a
folder and double-click on test.sh or test.bat. Check the RESULT.html.
d43 1
a43 1
    jrunscript -Dphp.java.bridge.php_exec=/usr/bin/php-cgi -l php phpFile.php
@


1.5
log
@Release-4-3-0
@
text
@d55 2
a56 1
                     "java_context()->setAttribute('f', java_closure(new f()), 100); ?>");
d62 2
d75 45
a119 10
* Furthermore it is possible to execute remote scripts running in a
  FastCGI or Apache/IIS server:

  ScriptEngineManager manager = new ScriptEngineManager();
  ScriptEngine e = manager.getEngineByName("php-invocable");
  Reader r = new php.java.script.URLReader(new URL("http://localhost:80/beanMethods.php"));
  e.eval(r);
  Invocable i = (Invocable)e;
  ...

@


1.4
log
@Release-4-1-0
@
text
@a60 2
    e.eval((Reader)null);

a69 1
  e.eval((Reader)null);
a80 1
  e.eval((Reader)null);
@


1.3
log
@Release-4-0-2
@
text
@d4 6
a9 6
This document describes how to call PHP methods from Java. For example
it is possible to use PHP as a script plugin for a Java report engine
such as BIRT; for formula fields, group selection formulas,
etc. Please see the INSTALL.J2EE document for details how to embed PHP
into a pure J2EE application server or how to call Java methods from
PHP.
@


1.2
log
@Files update 3.2.2 to 4.0.1. Extracted from the src.tar.gz downloaded from sf.net, uploaded by Jost Boekemeier. Update to repository by Andre Felipe Machado.
@
text
@d75 12
@


1.1
log
@Release-3-2-1
@
text
@d4 6
a9 4
Since Java 1.6 and PHP 5.1.4 it is possible to embed PHP into pure
Java J2SE applications. For example it is possible to use PHP as a
script plugin for a Java report engine such as BIRT; for formula
fields, group selection formulas, etc.
d11 1
a11 1
The PHP/Java Bridge can be installed with two copy operations:
d14 1
a14 4
the J2SE library path and

* the "java" folder containing the file "Java.php" must be copied into
PHP include path.
d23 1
a23 2
* Install PHP 5.1.4 or above. Or install the PHP engine written in pure
Java (called "Quercus").
d25 2
a26 2
* Download and extract "php-java-bridge_3.2.1_j2ee.zip" file into a
folder and double-click on test.sh or test.bat.
d30 2
a31 1
on the version and vendor of the JDK. On Linux the directory is:
a35 7
* Copy the created "java" folder into the PHP 5 include path. On Windows
the location depends on the version of the operating system ("winnt"
or "windows"). On Linux the directory is:

  /usr/share/pear/


d46 2
a47 2
* The optional Invocable interface is also supported. Invocable PHP
scripts must end with the line:
d49 1
a49 1
  java_context()->call(java_closure());
d51 2
a52 1
Example:
d54 8
a61 7
  ScriptEngineManager manager = new ScriptEngineManager();
  ScriptEngine e = manager.getEngineByName("php");
  str="<?function f() {return 'I am PHP';};java_context()->call(java_closure())?>";
  e.eval(str);          // evaluate and hold the above script
  i=(Invocable)e;
  System.out.println("PHP says: " . i->invokeFunction("f", new Object[]{}));
  e.eval((Reader)null); // release the allocated script
d64 2
a65 2
* The php-script.jar also exports an "interactive" php script engine.
It can be used to implement a REPL. Example:
@

