head	1.3;
access;
symbols
	upstream_version_5_3_4:1.2
	ROOT_Release-5-3-4:1.2
	Release-5-3-4:1.2.0.20
	ROOT_Release-5-3-3:1.2
	Release-5-3-3:1.2.0.16
	debian_version_5_3_2_1_2-1:1.2
	upstream_version_5_3_2_1_2:1.2
	debian_version_5_3_2_1_1-1:1.2
	debian_version_5_3_2_1_1:1.2
	upstream_version_5_3_2_1_1:1.2
	Root_Release-5-3-2-1:1.2
	Release-5-3-2-1:1.2
	ROOT_RELEASE-5-3-2-1:1.2
	RELEASE-5-3-2-1:1.2.0.18
	Release-5-3-2:1.2.0.14
	Root_Release-5-3-2:1.2
	Root_Release-5-3-1:1.2
	Release-5-3-1:1.2.0.12
	Release-5-2-3-1:1.2.0.10
	Root_Release-5-2-3-1:1.2
	Release-5-2-2-4:1.2.0.8
	Root_Release-5-2-2-4:1.2
	Release-5-2-2-1:1.2.0.6
	Root_Release-5-2-2-1:1.2
	upstream_version_5_2_2:1.2
	debian_version_5_2_2-1:1.2
	Release-5-2-2:1.2.0.4
	ROOT_Release-5-2-2:1.2
	ROOT_Release-5-2-1:1.2
	Release-5-2-1:1.2.0.2
	Release-5-2-0:1.1.0.18
	ROOT_Release-5-2-0:1.1
	ROOT_Release-5-1-2:1.1
	Release-5-1-2:1.1.0.16
	Version-5-1-1:1.1.0.14
	ROOT_Version-5-1-1:1.1
	debian_version_5_1_0-1:1.1
	upstream_version_5_1_0:1.1
	ROOT_Release-5-1-0:1.1
	Release-5-1-0:1.1.0.12
	ROOT_Release-5-0-0:1.1
	Release-5-0-0:1.1.0.10
	Release-4-3-3:1.1.0.8
	ROOT_Release-4-3-3:1.1
	upstream_version_4_3_2:1.1
	debian_version_4_3_2-1:1.1
	ROOT_Release-4-3-2:1.1
	Release-4-3-2:1.1.0.6
	Release-4-3-1:1.1.0.4
	ROOT_Release-4-3-1:1.1
	debian_version_4_3_0-1:1.1
	upstream_version_4_3_0:1.1
	ROOT_Release-4-3-0:1.1
	Release-4-3-0:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2008.12.02.19.16.01;	author jost_boekemeier;	state dead;
branches;
next	1.2;

1.2
date	2008.03.22.12.04.55;	author jost_boekemeier;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.30.16.11.29;	author jost_boekemeier;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<!-- template designed by Marco Von Ballmoos -->
			<title>Docs for page JavaProxy.inc</title>
			<link rel="stylesheet" href="../media/stylesheet.css" />
			<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'/>
		</head>
		<body>
			<div class="page-body">			
<h2 class="file-name">/JavaProxy.inc</h2>

<a name="sec-description"></a>
<div class="info-box">
	<div class="info-box-title">Description</div>
	<div class="nav-bar">
					<span class="disabled">Description</span> |
							<a href="#sec-classes">Classes</a>
			|							<a href="#sec-includes">Includes</a>
			|											<a href="#sec-functions">Functions</a>
			</div>
	<div class="info-box-body">	
		<!-- ========== Info from phpDoc block ========= -->
	<ul class="tags">
				<li><span class="field">filesource:</span> <a href="../__filesource/fsource_Java__JavaProxy.inc.html">Source Code for this file</a></li>
			</ul>
		
			</div>
</div>
		
	<a name="sec-classes"></a>	
	<div class="info-box">
		<div class="info-box-title">Classes</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
			<span class="disabled">Classes</span>
			|							<a href="#sec-includes">Includes</a>
				|																<a href="#sec-functions">Functions</a>
					</div>
		<div class="info-box-body">	
			<table cellpadding="2" cellspacing="0" class="class-table">
				<tr>
					<th class="class-table-header">Class</th>
					<th class="class-table-header">Description</th>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/java_JavaType.html">java_JavaType</a>
					</td>
					<td>
											implemented by JavaException and Java
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/Java.html">Java</a>
					</td>
					<td>
											The Java proxy class.
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/java_exception.html">java_exception</a>
					</td>
					<td>
											A decorator pattern which overrides all magic methods.
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/JavaException.html">JavaException</a>
					</td>
					<td>
											The java exception proxy
										</td>
				</tr>
							</table>
		</div>
	</div>

	<a name="sec-includes"></a>	
	<div class="info-box">
		<div class="info-box-title">Includes</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
							<a href="#sec-classes">Classes</a>
				|						<span class="disabled">Includes</span>
			|													<a href="#sec-functions">Functions</a>
					</div>
		<div class="info-box-body">	
			<a name="_${JAVA_BASE}/Client_inc"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="include-title">
			<span class="include-type">require_once</span>
			(<span class="include-name">"${JAVA_BASE}/Client.inc"</span>)
			(line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a41">41</a></span>)
		</span>
	</div>

	<!-- ========== Info from phpDoc block ========= -->
	
</div>
		</div>
	</div>
	
	
	
	<a name="sec-functions"></a>	
	<div class="info-box">
		<div class="info-box-title">Functions</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
							<a href="#sec-classes">Classes</a>
				|										<a href="#sec-includes">Includes</a>
				|												<span class="disabled">Functions</span>
		</div>
		<div class="info-box-body">	
			<a name="functionjava_begin_document" id="functionjava_begin_document"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_begin_document</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a457">457</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Enters stream mode (asynchronuous protocol).</p>
<p class="description"><p>Enters stream mode (asynchronuous protocol).
 The statements are sent to the back-end in one XML stream.
 Use this protocol mode when you have a large number of set operations and you don't expect an exception. Any exception raised during stream mode is reported when java_end_document() is called.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_begin_document
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_cast" id="functionjava_cast"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_cast</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a247">247</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Converts the java object obj into a PHP value.</p>
<p class="description"><p>Converts the java object obj into a PHP value.
 The second argument must be [s]tring, [b]oolean, [i]nteger, [f]loat or [d]ouble, [a]rray, [n]ull or [o]bject (which does nothing). This procedure  is for compatibility with the pure PHP implementation, in the C  implementation this procedure is called automatically for each type  cast or when settype() is called.   <br />  Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$str&nbsp;</span>=&nbsp;<span class="src-key">new&nbsp;</span><span class="src-id">java</span><span class="src-sym">(</span><span class="src-str">&quot;java.lang.String&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;12&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$str</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-sym">[</span><span class="src-id">o</span>(String):<span class="src-str">&quot;12&quot;</span><span class="src-sym">]</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$phpString&nbsp;</span>=&nbsp;<span class="src-str">&quot;</span><span class="src-str"><span class="src-var">$str</span></span><span class="src-str">&quot;</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$phpString</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-str">&quot;12&quot;</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$phpNumber&nbsp;</span>=&nbsp;(integer)<span class="src-var">$str</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$phpNumber</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-num">12</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$phpNumber2&nbsp;</span>=&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_cast">java_cast</a><span class="src-sym">(</span><span class="src-var">$str</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;integer&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$phpNumber2</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-num">12</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_cast
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>, <span class="var-type">$type</span>&nbsp;<span class="var-name">$type</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object</span>			</li>
					<li>
				<span class="var-type">$type</span>
				<span class="var-name">$type</span><span class="var-description">: A PHP type description, either [Ss]tring, [Bb]oolean, [Ll]ong or [Ii]nteger, [Dd]ouble or [Ff]loat, [Nn]ull, [Aa]rray, [Oo]bject.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_closure" id="functionjava_closure"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_closure</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a441">441</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Closes over the php environment and packages it up as a java class.</p>
<p class="description"><p>Closes over the php environment and packages it up as a java class.
 Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">toString</span><span class="src-sym">(</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span><span class="src-key">return&nbsp;</span><span class="src-str">&quot;helloWorld&quot;</span><span class="src-sym">;</span><span class="src-sym">}</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$object&nbsp;</span>=&nbsp;<span class="src-id">java_get_closure</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-str">&quot;</span><span class="src-str"><span class="src-id">Java</span>&nbsp;<span class="src-id">says</span>&nbsp;<span class="src-id">that</span>&nbsp;<span class="src-id">PHP</span>&nbsp;<span class="src-id">says</span>:&nbsp;<span class="src-var">$object</span>\n</span><span class="src-str">&quot;</span><span class="src-sym">;</span></div></li>
</ol></div>
 When a php instance is supplied as an argument, the environment will be used instead. When a string or key/value map is supplied as a second argument, the java procedure names are mapped to the php procedure names. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">hello</span><span class="src-sym">(</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span><span class="src-key">return&nbsp;</span><span class="src-str">&quot;hello&quot;</span><span class="src-sym">;</span><span class="src-sym">}</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;(string)<span class="src-id">java_get_closure</span><span class="src-sym">(</span><span class="src-id">null</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;hello&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 When an array of java interfaces is supplied as a third argument, the environment must implement these interfaces. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">class&nbsp;</span><span class="src-id">Listener&nbsp;</span><span class="src-sym">{</span></div></li>
<li><div class="src-line">&nbsp;&nbsp;&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">actionPerformed</span><span class="src-sym">(</span><span class="src-var">$actionEvent</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span></div></li>
<li><div class="src-line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div></li>
<li><div class="src-line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="src-sym">}</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-sym">}</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">getListener</span><span class="src-sym">(</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span></div></li>
<li><div class="src-line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="src-key">return&nbsp;</span><span class="src-id">java_get_closure</span><span class="src-sym">(</span><span class="src-key">new&nbsp;</span><span class="src-id">Listener</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">,&nbsp;</span><span class="src-id">null</span><span class="src-sym">,&nbsp;</span><span class="src-key">array</span><span class="src-sym">(</span><span class="src-key">new&nbsp;</span><a href="../Java/_JavaBridge.inc.html#functionJava">Java</a><span class="src-sym">(</span><span class="src-str">&quot;java.awt.event.ActionListener&quot;</span><span class="src-sym">)))</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-sym">}</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_closure
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_context" id="functionjava_context"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_context</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a379">379</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the jsr223 script context handle.</p>
<p class="description"><p>Returns the jsr223 script context handle.
 Example which closes over the current environment and passes it back to java: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">call</span><span class="src-sym">(</span><a href="../Java/_JavaProxy.inc.html#functionjava_closure">java_closure</a><span class="src-sym">(</span><span class="src-sym">))&nbsp;</span>||&nbsp;<span class="src-key">die&nbsp;</span><span class="src-str">&quot;Script&nbsp;should&nbsp;be&nbsp;called&nbsp;from&nbsp;java&quot;</span><span class="src-sym">;</span></div></li>
</ol></div>
 It is possible to access implicit web objects (the session, the application store etc.) from the context. Please see the JSR223 documentation for details. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">getHttpServletRequest</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">see:</span> #java_session()</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_context
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_end_document" id="functionjava_end_document"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_end_document</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a470">470</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Ends stream mode. stream mode raised an exception.</p>
<p class="description"><p>Ends stream mode. Fires a JavaException if any statement executed during stream mode raised an exception.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_end_document
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_inspect" id="functionjava_inspect"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_inspect</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a146">146</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the contents (public fields, public methods, public classes) of object as a string.</p>
<p class="description"><p>Returns the contents (public fields, public methods, public classes) of object as a string.
 Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;echo&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_inspect">java_inspect</a><span class="src-sym">(</span><span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_inspect
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_instanceof" id="functionjava_instanceof"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_instanceof</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a189">189</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Tests if object is an instance of clazz.</p>
<p class="description"><p>Tests if object is an instance of clazz.
 Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">return</span><span class="src-sym">(</span><span class="src-var">$o&nbsp;</span>instanceof&nbsp;<a href="../Java/_JavaBridge.inc.html#functionJava">Java</a>&nbsp;&amp;&amp;&nbsp;<span class="src-var">$c&nbsp;</span>instanceof&nbsp;<a href="../Java/_JavaBridge.inc.html#functionJava">Java</a>&nbsp;&amp;&amp;&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_instanceof">java_instanceof</a><span class="src-sym">(</span><span class="src-var">$o</span><span class="src-sym">,&nbsp;</span><span class="src-var">$c</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_instanceof
		</span>
					(<span class="var-type">$ob</span>&nbsp;<span class="var-name">$ob</span>, <span class="var-type">$clazz</span>&nbsp;<span class="var-name">$clazz</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$ob</span>
				<span class="var-name">$ob</span><span class="var-description">: A java object</span>			</li>
					<li>
				<span class="var-type">$clazz</span>
				<span class="var-name">$clazz</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_require" id="functionjava_require"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_require</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a277">277</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Set the library path.</p>
<p class="description"><p>Set the library path.
 Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_require">java_require</a><span class="src-sym">(</span><span class="src-str">&quot;foo.jar;bar.jar&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 The .jar files should be stored in /usr/share/java or extension_dir/lib one of its sub-directories or under the PHP include_path/LIBNAME/LIBNAME.jar. However, it is also possible to fetch .jar files from a remote server, for example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_require">java_require</a><span class="src-sym">(</span><span class="src-str">&quot;http://php-java-bridge.sf.net/kawa.jar;...&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 Note that the classloader isolates the loaded libraries: When you call java_require(&quot;foo.jar&quot;); java_require(&quot;bar.jar&quot;), the classes from foo cannot see the classes loaded from bar. If you get a NoClassDefFound error saying that one of your classes cannot access the library you have loaded, you must reset the back-end to clear the loader cache and load your classes and the library in one java_require() call.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_require
		</span>
					(<span class="var-type">$arg</span>&nbsp;<span class="var-name">$arg</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$arg</span>
				<span class="var-name">$arg</span><span class="var-description">: The list of Java libraries.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_reset" id="functionjava_reset"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_reset</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a121">121</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Only for internal use.</p>
<p class="description"><p>Only for internal use.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_reset
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_server_name" id="functionjava_server_name"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_server_name</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a357">357</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the name of the back-end or null, if the back-end is not running.</p>
<p class="description"><p>Returns the name of the back-end or null, if the back-end is not running.O
 Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$backend&nbsp;</span>=&nbsp;<span class="src-id">java_get_server_name</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-key">if</span><span class="src-sym">(</span><span class="src-sym">!</span><span class="src-var">$backend</span><span class="src-sym">)&nbsp;</span><span class="src-id">wakeup_administrator</span><span class="src-sym">(</span><span class="src-str">&quot;back-end&nbsp;not&nbsp;running&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-str">&quot;</span><span class="src-str"><span class="src-id">Connected</span>&nbsp;<span class="src-id">to</span>&nbsp;<span class="src-id">the</span>&nbsp;<span class="src-id">back</span>-<span class="src-id">end</span>:&nbsp;<span class="src-var">$backend</span>\n</span><span class="src-str">&quot;</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_server_name
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_session" id="functionjava_session"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_session</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a342">342</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Return a session handle.</p>
<p class="description"><p>Return a session handle.
 When java_session() is called without arguments, the session is shared with java. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-key">new&nbsp;</span><a href="../Java/_JavaBridge.inc.html#functionJava">Java</a><span class="src-sym">(</span><span class="src-str">&quot;java.lang.Object&quot;</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-sym">[</span>...<span class="src-sym">]</span></div></li>
</ol></div> The java components (jsp, servlets) can retrieve the value, for example with: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">getSession</span><span class="src-sym">(</span><span class="src-sym">)</span>.<span class="src-id">getAttribute</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 When java_get_session() is called with a session name, the session is not shared with java and no cookies are set. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-str">&quot;myPublicApplicationStore&quot;</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;value&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 When java_get_session() is called with a second argument set to true, a new session is allocated, the old session is destroyed if necessary. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-id">null</span><span class="src-sym">,&nbsp;</span><span class="src-id">true</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;val&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div>
 The optional third argument specifies the default lifetime of the session, it defaults to \code session.gc_maxlifetime \endcode. The value 0 means that the session never times out.</p></p>
	<ul class="tags">
				<li><span class="field">see:</span> #java_context()</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_session
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_set_file_encoding" id="functionjava_set_file_encoding"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_set_file_encoding</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a164">164</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Set the java file encoding, for example UTF-8 or ASCII.</p>
<p class="description"><p>Set the java file encoding, for example UTF-8 or ASCII.
 Needed because php does not support unicode. All string to byte array conversions use this encoding. Example: <div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_set_file_encoding">java_set_file_encoding</a><span class="src-sym">(</span><span class="src-str">&quot;ISO-8859-1&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_set_file_encoding
		</span>
					(<span class="var-type">$enc</span>&nbsp;<span class="var-name">$enc</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$enc</span>
				<span class="var-name">$enc</span><span class="var-description">: A valid file.encoding string. Please see your Java <div class="src-code"><ol><li><div class="src-line"><a href="http://www.php.net/file">file</a>.<span class="src-id">encoding</span></div></li>
</ol></div> documentation for a list of valid encodings.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_values" id="functionjava_values"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_values</span> (line <span class="line-number"><a href="../__filesource/fsource_Java__JavaProxy.inc.html#a114">114</a></span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Evaluates the object and fetches its content, if possible.</p>
<p class="description"><p>Evaluates the object and fetches its content, if possible.
 A java array, Map or Collection object is returned as a php array. An array, Map or Collection proxy is returned as a java array, Map or Collection object, and a null proxy is returned as null. All values of java types for which a primitive php type exists are returned as php values. Everything else is returned unevaluated. Please make sure that the values do not not exceed php's memory limit. Example:
 <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$str&nbsp;</span>=&nbsp;<span class="src-key">new&nbsp;</span><span class="src-id">java</span><span class="src-sym">(</span><span class="src-str">&quot;java.lang.String&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;hello&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$str</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-sym">[</span><span class="src-id">o</span>(String):<span class="src-str">&quot;hello&quot;</span><span class="src-sym">]</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_values">java_values</a><span class="src-sym">(</span><span class="src-var">$str</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-id">hello</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$chr&nbsp;</span>=&nbsp;<span class="src-var">$str</span><span class="src-sym">-&gt;</span><span class="src-id">toCharArray</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;echo&nbsp;<span class="src-var">$chr</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-sym">[</span><span class="src-id">o</span><span class="src-sym">(</span><span class="src-id">array_of</span>-<span class="src-id">C</span><span class="src-sym">)</span>:<span class="src-str">&quot;[C@@1b10d42&quot;</span><span class="src-sym">]</span></div></li>
<li><div class="src-line">&nbsp;<span class="src-var">$ar&nbsp;</span>=&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_values">java_values</a><span class="src-sym">(</span><span class="src-var">$chr</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;print&nbsp;<span class="src-var">$ar</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-key">Array</span></div></li>
<li><div class="src-line">&nbsp;print&nbsp;<span class="src-var">$ar</span><span class="src-sym">[</span><span class="src-num">0</span><span class="src-sym">]</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-sym">[</span><span class="src-id">o</span><span class="src-sym">(</span><span class="src-id">Character</span><span class="src-sym">)</span>:<span class="src-str">&quot;h&quot;</span><span class="src-sym">]</span></div></li>
<li><div class="src-line">&nbsp;print&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_values">java_values</a><span class="src-sym">(</span><span class="src-var">$ar</span><span class="src-sym">[</span><span class="src-num">0</span><span class="src-sym">]</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
<li><div class="src-line">&nbsp;=&gt;&nbsp;<span class="src-id">h</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_values
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
		</div>
	</div>
	
	<p class="notes" id="credit">
		Documentation generated on Sun, 16 Mar 2008 19:11:40 +0100 by <a href="http://www.phpdoc.org" target="_blank">phpDocumentor 1.4.0a2</a>
	</p>
	</div></body>
</html>@


1.2
log
@Release-5-2-1
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d1 159
a159 153
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<!-- template designed by Marco Von Ballmoos -->
			<title>Docs for page JavaProxy.inc</title>
			<link rel="stylesheet" href="../media/stylesheet.css" />
			<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'/>
		</head>
		<body>
			<div class="page-body">			
<h2 class="file-name">/JavaProxy.inc</h2>

<a name="sec-description"></a>
<div class="info-box">
	<div class="info-box-title">Description</div>
	<div class="nav-bar">
					<span class="disabled">Description</span> |
							<a href="#sec-classes">Classes</a>
			|							<a href="#sec-includes">Includes</a>
			|											<a href="#sec-functions">Functions</a>
			</div>
	<div class="info-box-body">	
		<!-- ========== Info from phpDoc block ========= -->
		
			</div>
</div>
		
	<a name="sec-classes"></a>	
	<div class="info-box">
		<div class="info-box-title">Classes</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
			<span class="disabled">Classes</span>
			|							<a href="#sec-includes">Includes</a>
				|																<a href="#sec-functions">Functions</a>
					</div>
		<div class="info-box-body">	
			<table cellpadding="2" cellspacing="0" class="class-table">
				<tr>
					<th class="class-table-header">Class</th>
					<th class="class-table-header">Description</th>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/java_JavaType.html">java_JavaType</a>
					</td>
					<td>
											implemented by JavaException and Java
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/Java.html">Java</a>
					</td>
					<td>
											The Java proxy class.
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/java_exception.html">java_exception</a>
					</td>
					<td>
											A decorator pattern which overrides all magic methods.
										</td>
				</tr>
								<tr>
					<td style="padding-right: 2em; vertical-align: top">
						<a href="../Java/JavaException.html">JavaException</a>
					</td>
					<td>
											The java exception proxy
										</td>
				</tr>
							</table>
		</div>
	</div>

	<a name="sec-includes"></a>	
	<div class="info-box">
		<div class="info-box-title">Includes</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
							<a href="#sec-classes">Classes</a>
				|						<span class="disabled">Includes</span>
			|													<a href="#sec-functions">Functions</a>
					</div>
		<div class="info-box-body">	
			<a name="_${JAVA_BASE}/Client_inc"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="include-title">
			<span class="include-type">require_once</span>
			(<span class="include-name">"${JAVA_BASE}/Client.inc"</span>)
			(line <span class="line-number">41</span>)
		</span>
	</div>

	<!-- ========== Info from phpDoc block ========= -->
	
</div>
		</div>
	</div>
	
	
	
	<a name="sec-functions"></a>	
	<div class="info-box">
		<div class="info-box-title">Functions</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
							<a href="#sec-classes">Classes</a>
				|										<a href="#sec-includes">Includes</a>
				|												<span class="disabled">Functions</span>
		</div>
		<div class="info-box-body">	
			<a name="functionjava_begin_document" id="functionjava_begin_document"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_begin_document</span> (line <span class="line-number">423</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Enters stream mode (asynchronuous protocol). The statements are  sent to the back-end in one XML stream.</p>
<p class="description"><p>Use this protocol  mode when you have a large number of set operations and you don't  expect an exception. Any exception raised during stream mode is  reported when java_end_document() is called.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_begin_document
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_cast" id="functionjava_cast"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_cast</span> (line <span class="line-number">230</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Converts the java object obj into a PHP object. The second argument</p>
<p class="description"><p>must be [s]tring, [b]oolean, [i]nteger, [f]loat or [d]ouble,  [a]rray, [n]ull or [o]bject (which does nothing).&lt;p&gt; This procedure  is for compatibility with the pure PHP implementation, in the C  implementation this procedure is called automatically for each type  cast or when settype() is called.</p><p><br />  Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$str&nbsp;</span>=&nbsp;<span class="src-key">new&nbsp;</span><span class="src-id">java</span><span class="src-sym">(</span><span class="src-str">&quot;java.lang.String&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;12&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
d171 35
a205 34
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_cast
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>, <span class="var-type">$type</span>&nbsp;<span class="var-name">$type</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object</span>			</li>
					<li>
				<span class="var-type">$type</span>
				<span class="var-name">$type</span><span class="var-description">: A PHP type description, either [Ss]tring, [Bb]oolean, [Ll]ong or [Ii]nteger, [Dd]ouble or [Ff]loat, [Nn]ull, [Aa]rray, [Oo]bject.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_closure" id="functionjava_closure"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_closure</span> (line <span class="line-number">409</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Closes over the php environment and packages it up as a java</p>
<p class="description"><p>class. Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">toString</span><span class="src-sym">(</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span><span class="src-key">return&nbsp;</span><span class="src-str">&quot;helloWorld&quot;</span><span class="src-sym">;</span><span class="src-sym">}</span><span class="src-sym">;</span></div></li>
d208 2
a209 1
</ol></div></p><p>When a php instance is supplied as an argument, the environment will be used  instead. When a string or key/value map is supplied as a second argument,  the java procedure names are mapped to the php procedure names. Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">function&nbsp;</span><span class="src-id">hello</span><span class="src-sym">(</span><span class="src-sym">)&nbsp;</span><span class="src-sym">{</span><span class="src-key">return&nbsp;</span><span class="src-str">&quot;hello&quot;</span><span class="src-sym">;</span><span class="src-sym">}</span><span class="src-sym">;</span></div></li>
d211 2
a212 1
</ol></div></p><p>When an array of java interfaces is supplied as a third argument,  the environment must implement these interfaces.  Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">class&nbsp;</span><span class="src-id">Listener&nbsp;</span><span class="src-sym">{</span></div></li>
d220 209
a428 199
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_closure
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_context" id="functionjava_context"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_context</span> (line <span class="line-number">349</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the jsr223 script context handle.</p>
<p class="description"><p>Example which closes over the current environment and passes it back to java:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">call</span><span class="src-sym">(</span><a href="../Java/_JavaProxy.inc.html#functionjava_closure">java_closure</a><span class="src-sym">(</span><span class="src-sym">))&nbsp;</span>||&nbsp;<span class="src-key">die&nbsp;</span><span class="src-str">&quot;Script&nbsp;should&nbsp;be&nbsp;called&nbsp;from&nbsp;java&quot;</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>It is possible to access implicit web objects (the session, the  application store etc.) from the context. Please see the JSR223  documentation for details. Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">getHttpServletRequest</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">see:</span> #java_session()</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_context
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_end_document" id="functionjava_end_document"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_end_document</span> (line <span class="line-number">437</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Ends stream mode. Fires a JavaException if any statement executed during  stream mode raised an exception.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_end_document
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_inspect" id="functionjava_inspect"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_inspect</span> (line <span class="line-number">151</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the contents (public fields, public methods, public  classes) of object as a string.</p>
<p class="description"><p>Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;echo&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_inspect">java_inspect</a><span class="src-sym">(</span><span class="src-id">java_get_context</span><span class="src-sym">(</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_inspect
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_instanceof" id="functionjava_instanceof"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_instanceof</span> (line <span class="line-number">191</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Tests if object is an instance of clazz.</p>
<p class="description"><p>Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-key">return</span><span class="src-sym">(</span><span class="src-var">$o&nbsp;</span>instanceof&nbsp;<a href="../Java/_JavaBridge.inc.html#functionJava">Java</a>&nbsp;&amp;&amp;&nbsp;<span class="src-var">$c&nbsp;</span>instanceof&nbsp;<a href="../Java/_JavaBridge.inc.html#functionJava">Java</a>&nbsp;&amp;&amp;&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_instanceof">java_instanceof</a><span class="src-sym">(</span><span class="src-var">$o</span><span class="src-sym">,&nbsp;</span><span class="src-var">$c</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_instanceof
		</span>
					(<span class="var-type">$ob</span>&nbsp;<span class="var-name">$ob</span>, <span class="var-type">$clazz</span>&nbsp;<span class="var-name">$clazz</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$ob</span>
				<span class="var-name">$ob</span><span class="var-description">: A java object</span>			</li>
					<li>
				<span class="var-type">$clazz</span>
				<span class="var-name">$clazz</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_require" id="functionjava_require"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_require</span> (line <span class="line-number">258</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Set the library path. Example:</p>
<p class="description"><p><div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_require">java_require</a><span class="src-sym">(</span><span class="src-str">&quot;foo.jar;bar.jar&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>The .jar files should be stored in /usr/share/java or  extension_dir/lib one of its sub-directories or under the PHP  include_path/LIBNAME/LIBNAME.jar. However, it is also possible to  fetch .jar files from a remote server, for example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_require">java_require</a><span class="src-sym">(</span><span class="src-str">&quot;http://php-java-bridge.sf.net/kawa.jar;...&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>Note that the classloader isolates the loaded libraries: When you  call java_require(&quot;foo.jar&quot;); java_require(&quot;bar.jar&quot;), the classes  from foo cannot see the classes loaded from bar. If you get a  NoClassDefFound error saying that one of your classes cannot  access the library you have loaded, you must reset the back-end to  clear the loader cache and load your classes and the library in one  java_require() call.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_require
		</span>
					(<span class="var-type">$arg</span>&nbsp;<span class="var-name">$arg</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$arg</span>
				<span class="var-name">$arg</span><span class="var-description">: The list of Java libraries.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_reset" id="functionjava_reset"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_reset</span> (line <span class="line-number">127</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Only for internal use.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_reset
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_server_name" id="functionjava_server_name"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_server_name</span> (line <span class="line-number">327</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the name of the back-end or null, if the back-end is not running. Example:</p>
<p class="description"><p><div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$backend&nbsp;</span>=&nbsp;<span class="src-id">java_get_server_name</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
d431 27
a457 26
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_server_name
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_session" id="functionjava_session"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_session</span> (line <span class="line-number">314</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Return a session handle.  When java_session() is called without  arguments, the session is shared with java.</p>
<p class="description"><p>Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-key">new&nbsp;</span><a href="../Java/_JavaBridge.inc.html#functionJava">Java</a><span class="src-sym">(</span><span class="src-str">&quot;java.lang.Object&quot;</span><span class="src-sym">))</span><span class="src-sym">;</span></div></li>
d459 68
a526 62
</ol></div>  The java components (jsp, servlets) can retrieve the value, for  example with:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">getSession</span><span class="src-sym">(</span><span class="src-sym">)</span>.<span class="src-id">getAttribute</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>When java_get_session() is called with a session name, the session  is not shared with java and no cookies are set. Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-str">&quot;myPublicApplicationStore&quot;</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;value&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>When java_get_session() is called with a second argument set to true,  a new session is allocated, the old session is destroyed if necessary.  Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-id">java_get_session</span><span class="src-sym">(</span><span class="src-id">null</span><span class="src-sym">,&nbsp;</span><span class="src-id">true</span><span class="src-sym">)</span><span class="src-sym">-&gt;</span><span class="src-id">put</span><span class="src-sym">(</span><span class="src-str">&quot;key&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;val&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p><p>The optional third argument specifies the default lifetime of the session, it defaults to \code session.gc_maxlifetime \endcode. The value 0 means that the session never times out.</p></p>
	<ul class="tags">
				<li><span class="field">see:</span> #java_context()</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_session
		</span>
				()
			</div>

		
	
</div>
<a name="functionjava_set_file_encoding" id="functionjava_set_file_encoding"><!-- --></a>
<div class="oddrow">
	
	<div>
		<span class="method-title">java_set_file_encoding</span> (line <span class="line-number">167</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Set the java file encoding, for example UTF-8 or ASCII. Needed</p>
<p class="description"><p>because php does not support unicode. All string to byte array  conversions use this encoding. Example:  <div class="src-code"><ol><li><div class="src-line">&nbsp;<a href="../Java/_JavaProxy.inc.html#functionjava_set_file_encoding">java_set_file_encoding</a><span class="src-sym">(</span><span class="src-str">&quot;ISO-8859-1&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_set_file_encoding
		</span>
					(<span class="var-type">$enc</span>&nbsp;<span class="var-name">$enc</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$enc</span>
				<span class="var-name">$enc</span><span class="var-description">: A valid file.encoding string. Please see your Java  <div class="src-code"><ol><li><div class="src-line"><a href="http://www.php.net/file">file</a>.<span class="src-id">encoding</span></div></li>
</ol></div> documentation for a list of valid  encodings.</span>			</li>
				</ul>
		
	
</div>
<a name="functionjava_values" id="functionjava_values"><!-- --></a>
<div class="evenrow">
	
	<div>
		<span class="method-title">java_values</span> (line <span class="line-number">120</span>)
	</div> 

	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Evaluates the object and fetches its content, if possible.</p>
<p class="description"><p>A java array, Map or Collection object is returned  as a php array. An array, Map or Collection proxy is returned as a java array, Map or Collection object, and a null proxy is returned as null. All values of java types for which a primitive php type exists are returned as php values. Everything else is returned unevaluated. Please make sure that the values do not not exceed  php's memory limit. Example:</p><p><div class="src-code"><ol><li><div class="src-line">&nbsp;<span class="src-var">$str&nbsp;</span>=&nbsp;<span class="src-key">new&nbsp;</span><span class="src-id">java</span><span class="src-sym">(</span><span class="src-str">&quot;java.lang.String&quot;</span><span class="src-sym">,&nbsp;</span><span class="src-str">&quot;hello&quot;</span><span class="src-sym">)</span><span class="src-sym">;</span></div></li>
d541 29
a569 29
</ol></div></p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			java_values
		</span>
					(<span class="var-type">$object</span>&nbsp;<span class="var-name">$object</span>)
			</div>

			<ul class="parameters">
					<li>
				<span class="var-type">$object</span>
				<span class="var-name">$object</span><span class="var-description">: A java object or type.</span>			</li>
				</ul>
		
	
</div>
		</div>
	</div>
	
	<p class="notes" id="credit">
		Documentation generated on Sun, 30 Sep 2007 10:33:26 +0200 by <a href="http://www.phpdoc.org" target="_blank">phpDocumentor 1.4.0a2</a>
	</p>
	</div></body>
</html>@

