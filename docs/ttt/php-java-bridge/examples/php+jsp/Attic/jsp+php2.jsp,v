head	1.10;
access;
symbols
	Release-7-1-1:1.9.0.2
	Root_Release-7-1-1:1.9
	Root_Release_7-0-1:1.8
	Release_7-0-1:1.8.0.6
	Release_7-0-0:1.8.0.4
	Root_Release_7-0-0:1.8
	Release-6-2-2:1.8.0.2
	Release-6-1-2-3:1.5
	Root_Release-6-1-2-3:1.5
	Release-6-1-2-2:1.5.0.32
	Root_Release-6-1-2-2:1.5
	debian_version_6_1_2_1-1:1.5
	upstream_version_6_1_2_1:1.5
	Release-6-1-2-1_new:1.5.0.30
	Root_Release-6-1-2-1_new:1.5
	Release-6-1-2-1:1.5.0.28
	Root_Release-6-1-2-1:1.5
	upstream_version_6_1_2:1.5
	debian_version_6_1_2-1:1.5
	Release-6-1-2:1.5.0.26
	Root_Release-6-1-2:1.5
	debian_version_6_1_1-2:1.5
	debian_version_6_1_1-1:1.5
	upstream_version_6_1_1:1.5
	Release-6-1-1:1.5.0.24
	Root_Release-6-1-1:1.5
	Release-6-0-4:1.5.0.22
	Root_Release-6-0-4:1.5
	Release-6-0-3_NEW:1.5.0.18
	Root_Release-6-0-3_NEW:1.5
	Release-6-0-3:1.5.0.20
	Root_Release-6-0-3:1.5
	Release-6-0-0:1.5.0.16
	Root_Release-6-0-0:1.5
	Release-5-5-4-1:1.5.0.14
	Root_Release-5-5-4-1:1.5
	Release-5-5-4:1.5.0.12
	Root_Release-5-5-4:1.5
	Release-5-5-3:1.5.0.10
	ROOT_Release-5-5-3:1.5
	Release-5-5-2:1.5.0.8
	Root_Release-5-5-2:1.5
	debian_version_5_5_1-1:1.5
	Release-5-5-1:1.5.0.4
	upstream_version_5_5_1:1.5
	ROOT_Release-5-5-1:1.5
	debian_version_5_5-1:1.5
	upstream_version_5_5:1.5
	ROOT_Release-5-5:1.5
	Release-5-5:1.5.0.6
	debian_version_5_4_4_2-3:1.5
	Release-5-4-4-2-1:1.5.0.2
	debian_version_5_4_4_2-2:1.5
	debian_version_5_4_4_2-1:1.5
	upstream_version_5_4_4_2:1.5
	debian_version_5_4_4_1-1:1.5
	upstream_version_5_4_4_1:1.5
	debian_version_5_4_4-1:1.4
	upstream_version_5_4_4:1.4
	Release-5-4-4:1.4.0.4
	Root_Release-5-4-4:1.4
	debian_version_5_4_3_2-1:1.3
	upstream_version_5_4_3_2:1.3
	Release_5-4-3-2:1.3.0.8
	Root_Release_5-4-3-2:1.3
	upstream_version_5_4_3_1:1.3
	debian_version_5_4_3_1-1:1.3
	Release-5-4-3:1.3.0.6
	Root_Release-5-4-3:1.3
	Root_Release-5-4-1:1.3
	Release-5-4-1:1.3.0.4
	Root_Release-5-4:1.3
	Release-5-4:1.3.0.2
	upstream_version_5_3_4:1.2
	debian_version_5_3_4-1:1.2
	ROOT_Release-5-3-4:1.2
	Release-5-3-4:1.2.0.2
	ROOT_Release-5-3-3:1.1
	Release-5-3-3:1.1.0.2;
locks; strict;
comment	@# @;


1.10
date	2017.04.14.05.48.52;	author jost_boekemeier;	state dead;
branches;
next	1.9;

1.9
date	2017.03.19.16.15.49;	author jost_boekemeier;	state Exp;
branches;
next	1.8;

1.8
date	2010.08.01.10.38.36;	author jost_boekemeier;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.17.11.54.20;	author jost_boekemeier;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.31.19.29.50;	author jost_boekemeier;	state dead;
branches;
next	1.5;

1.5
date	2009.03.15.15.33.21;	author jost_boekemeier;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.08.14.34.47;	author jost_boekemeier;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.09.12.55.03;	author jost_boekemeier;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.15.14.27.51;	author jost_boekemeier;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.25.17.34.28;	author jost_boekemeier;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2008.11.09.17.01.41;	author jost_boekemeier;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2008.11.15.14.22.31;	author jost_boekemeier;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Removed JavaProxy.php
@
text
@ 
<%-- <%@@page import="javax.script.*" %>
<%@@page import="java.net.*" %>
<%@@page import="php.java.script.URLReader"%>
 
<%!
private static final ScriptEngineManager scriptManager = new ScriptEngineManager();
%>
 
<%
  ScriptEngine instance = scriptManager.getEngineByName("php-invocable");
  try {
	  URI remotePhpApp = new URI(request.getScheme(), null, "127.0.0.1", request.getLocalPort(), "/JavaBridge/java/JavaProxy.php", null, null);
	  instance.eval(new URLReader(remotePhpApp.toURL()));
	  Object result = ((Invocable)instance).invokeFunction("phpversion", new Object[]{});
	  out.println ("PHP application called \"JavaBridge/java/JavaProxy.php\" responds to phpversion(): " + result);
  } catch (Exception ex) {
	  out.println("Could not evaluate script: "+ex);
  } finally {
	  // release the resources immediately
  	((java.io.Closeable)instance).close();
  }
%>
 --%> @


1.9
log
@Temporarily disabled non-working tests
@
text
@@


1.8
log
@Release-6-2-1
@
text
@d2 1
a2 1
<%@@page import="javax.script.*" %>
d24 1
a24 1
 @


1.7
log
@Release-6-2-1
@
text
@d1 1
a1 1

a3 1
<%@@page import="php.java.script.servlet.PhpCompiledHttpScriptContext" %>
d5 1
a5 1

d9 1
a9 1

a10 1
  // create a new copy of the compiled script
a12 2
	  // create a custom ScriptContext to connect the engine to the ContextLoaderListener's FastCGI runner 
	  instance.setContext(new PhpCompiledHttpScriptContext(instance.getContext(),this,application,request,response));
a16 1
	  // release the resources immediately
d20 1
d24 1
@


1.6
log
@*** empty log message ***
@
text
@d1 1
a1 1
<%@@page import="java.io.*" %>
d3 3
a5 1
<%@@page import="php.java.script.servlet.EngineFactory" %>
d8 1
a8 7
private static File script;
private static synchronized File getScript(String path) {
  if(script!=null) return script;
  return script=EngineFactory.getPhpScript(path, 
    new StringReader(
      "<?php function f($arg) {return 1 + java_values($arg); }; ?>"));
}
d10 1
d12 15
a26 16
ScriptEngine e = 
  EngineFactory.getInvocablePhpScriptEngine (this,
                               application, request, response, "http", 80);
try {
 e.getContext().setWriter (out);

 FileReader reader = EngineFactory.createPhpScriptFileReader(getScript(EngineFactory.getRealPath(application, request.getServletPath())+"._cache_.php"));
 e.eval (reader); reader.close();
 Object result=
  ((Invocable)e).invokeFunction("f", new Object[]{new Integer(2)});
 out.println("result from php::f(), printed from the servlet: " + result);
} catch (Exception ex) {
 out.println("Could not evaluate script on IIS/Apache port 80: "+ex);
} finally { // make sure to close() the file
 e.eval ((Reader)null); // in JDK 1.5 and above use ((Closeable)e).close() instead
}
@


1.5
log
@*** empty log message ***
@
text
@@


1.4
log
@Release-5-4-4
@
text
@d21 1
a21 1
 FileReader reader = EngineFactory.createPhpScriptFileReader(getScript(EngineFactory.getRealPath(application, request.getServletPath())));
@


1.3
log
@Backward compatibility with BEA WL 8.1
@
text
@d7 1
a7 1
private static File getScript(String path) {
a14 1
try {
d18 2
a19 1
e.getContext().setWriter (out);
d21 5
a25 6
FileReader reader = EngineFactory.createPhpScriptFileReader(getScript(EngineFactory.getRealPath(application, request.getServletPath())));
e.eval (reader); reader.close();
Object result=
((Invocable)e).invokeFunction("f", new Object[]{new Integer(2)});
e.eval ((Reader)null); // in JDK 1.5 and above use ((Closeable)e).close() instead
out.println("result from php::f(), printed from the servlet: " + result);
d27 3
a29 1
  out.println("Could not evaluate script on IIS/Apache port 80: "+ex);
@


1.2
log
@Release 5.3.3
@
text
@d21 1
a21 2
File script = getScript(application.getRealPath(request.getServletPath()));
FileReader reader = EngineFactory.createPhpScriptFileReader(script);
d25 1
a25 1
((Closeable)e).close ();         // flush the output generated by invokeXXX
@


1.1
log
@Apache/IIS and JSR 223 integration
@
text
@d11 1
a11 1
      "<?php function f($arg) {return 1 + (int)(string)$arg; }; ?>"));
d24 3
a26 2
Object result=((Invocable)e).invokeFunction("f", new Object[]{new Integer(2)});
e.eval ((Reader)null); // flush the output generated by invokeXXX
@


1.1.2.1
log
@Release 5.3.3
@
text
@d24 2
a25 3
Object result=
((Invocable)e).invokeFunction("f", new Object[]{new Integer(2)});
((Closeable)e).close ();         // flush the output generated by invokeXXX
@


1.1.2.2
log
@Release 5.3.3
@
text
@d11 1
a11 1
      "<?php function f($arg) {return 1 + java_values($arg); }; ?>"));
@


