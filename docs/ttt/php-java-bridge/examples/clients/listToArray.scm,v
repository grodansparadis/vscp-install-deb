head	1.5;
access;
symbols
	Release-7-1-1:1.5.0.52
	Root_Release-7-1-1:1.5
	Root_Release_7-0-1:1.5
	Release_7-0-1:1.5.0.50
	Release_7-0-0:1.5.0.48
	Root_Release_7-0-0:1.5
	Release-6-2-2:1.5.0.46
	Release-6-1-2-3:1.5
	Root_Release-6-1-2-3:1.5
	Release-6-1-2-2:1.5.0.44
	Root_Release-6-1-2-2:1.5
	debian_version_6_1_2_1-1:1.5
	upstream_version_6_1_2_1:1.5
	Release-6-1-2-1_new:1.5.0.42
	Root_Release-6-1-2-1_new:1.5
	Release-6-1-2-1:1.5.0.40
	Root_Release-6-1-2-1:1.5
	upstream_version_6_1_2:1.5
	debian_version_6_1_2-1:1.5
	Release-6-1-2:1.5.0.38
	Root_Release-6-1-2:1.5
	debian_version_6_1_1-2:1.5
	debian_version_6_1_1-1:1.5
	upstream_version_6_1_1:1.5
	Release-6-1-1:1.5.0.36
	Root_Release-6-1-1:1.5
	Release-6-0-4:1.5.0.34
	Root_Release-6-0-4:1.5
	Release-6-0-3_NEW:1.5.0.30
	Root_Release-6-0-3_NEW:1.5
	Release-6-0-3:1.5.0.32
	Root_Release-6-0-3:1.5
	Release-6-0-0:1.5.0.28
	Root_Release-6-0-0:1.5
	Release-5-5-4-1:1.5.0.26
	Root_Release-5-5-4-1:1.5
	Release-5-5-4:1.5.0.24
	Root_Release-5-5-4:1.5
	Release-5-5-3:1.5.0.22
	ROOT_Release-5-5-3:1.5
	Release-5-5-2:1.5.0.20
	Root_Release-5-5-2:1.5
	debian_version_5_5_1-1:1.5
	Release-5-5-1:1.5.0.16
	upstream_version_5_5_1:1.5
	ROOT_Release-5-5-1:1.5
	debian_version_5_5-1:1.5
	upstream_version_5_5:1.5
	ROOT_Release-5-5:1.5
	Release-5-5:1.5.0.18
	debian_version_5_4_4_2-3:1.5
	Release-5-4-4-2-1:1.5.0.12
	debian_version_5_4_4_2-2:1.5
	debian_version_5_4_4_2-1:1.5
	upstream_version_5_4_4_2:1.5
	debian_version_5_4_4_1-1:1.5
	upstream_version_5_4_4_1:1.5
	debian_version_5_4_4-1:1.5
	upstream_version_5_4_4:1.5
	Release-5-4-4:1.5.0.14
	Root_Release-5-4-4:1.5
	debian_version_5_4_3_2-1:1.5
	upstream_version_5_4_3_2:1.5
	Release_5-4-3-2:1.5.0.10
	Root_Release_5-4-3-2:1.5
	upstream_version_5_4_3_1:1.5
	debian_version_5_4_3_1-1:1.5
	Release-5-4-3:1.5.0.8
	Root_Release-5-4-3:1.5
	Root_Release-5-4-1:1.5
	Release-5-4-1:1.5.0.6
	Root_Release-5-4:1.5
	Release-5-4:1.5.0.4
	upstream_version_5_3_4:1.5
	debian_version_5_3_4-1:1.5
	ROOT_Release-5-3-4:1.5
	Release-5-3-4:1.5.0.2
	ROOT_Release-5-3-3:1.4
	Release-5-3-3:1.4.0.52
	debian_version_5_3_2_1_2-1:1.4
	upstream_version_5_3_2_1_2:1.4
	debian_version_5_3_2_1_1-1:1.4
	debian_version_5_3_2_1_1:1.4
	upstream_version_5_3_2_1_1:1.4
	Root_Release-5-3-2-1:1.4
	Release-5-3-2-1:1.4
	ROOT_RELEASE-5-3-2-1:1.4
	RELEASE-5-3-2-1:1.4.0.54
	Release-5-3-2:1.4.0.50
	Root_Release-5-3-2:1.4
	Root_Release-5-3-1:1.4
	Release-5-3-1:1.4.0.48
	Release-5-2-3-1:1.4.0.46
	Root_Release-5-2-3-1:1.4
	Release-5-2-2-4:1.4.0.44
	Root_Release-5-2-2-4:1.4
	Release-5-2-2-1:1.4.0.42
	Root_Release-5-2-2-1:1.4
	upstream_version_5_2_2:1.4
	debian_version_5_2_2-1:1.4
	Release-5-2-2:1.4.0.40
	ROOT_Release-5-2-2:1.4
	ROOT_Release-5-2-1:1.4
	Release-5-2-1:1.4.0.38
	Release-5-2-0:1.4.0.36
	ROOT_Release-5-2-0:1.4
	ROOT_Release-5-1-2:1.4
	Release-5-1-2:1.4.0.34
	Version-5-1-1:1.4.0.32
	ROOT_Version-5-1-1:1.4
	debian_version_5_1_0-1:1.4
	upstream_version_5_1_0:1.4
	ROOT_Release-5-1-0:1.4
	Release-5-1-0:1.4.0.30
	ROOT_Release-5-0-0:1.4
	Release-5-0-0:1.4.0.28
	Release-4-3-3:1.4.0.26
	ROOT_Release-4-3-3:1.4
	upstream_version_4_3_2:1.4
	debian_version_4_3_2-1:1.4
	ROOT_Release-4-3-2:1.4
	Release-4-3-2:1.4.0.24
	Release-4-3-1:1.4.0.22
	ROOT_Release-4-3-1:1.4
	debian_version_4_3_0-1:1.4
	upstream_version_4_3_0:1.4
	ROOT_Release-4-3-0:1.4
	Release-4-3-0:1.4.0.20
	debian_version_3_2_1b-2:1.4
	debian_version_4_2_2-1:1.4
	upstream_version_4_2_2:1.4
	debian_version_3_2_1b-1:1.4
	upstream_version_3_2_1b:1.4
	Release-4-1-2:1.4.0.18
	Release-4-0-8:1.4.0.16
	debian_version_4_0_8a-1:1.4
	upstream_version_4_0_8a:1.4
	jostb-debian-ubuntu-patch:1.4.0.14
	debian_version_4_0_8-1:1.4
	upstream_version_4_0_8:1.4
	debian_version_4_0_7-1:1.4
	upstream_version_4_0_7:1.4
	debian_version_4_0_6-1:1.4
	upstream_version_4_0_6:1.4
	debian_version_4_0_2-1:1.4
	upstream_version_4_0_2:1.4
	Release-4-0-2_Root:1.4
	Release-4-0-2:1.4.0.12
	upstream_version_4_0_1:1.4
	debian_version_4_0_1-2:1.4
	Release-3-2-1:1.4.0.10
	Release-3-1-8:1.4.0.8
	Release-3-0-8_root:1.4
	Release-3-0-8_Root:1.4
	Release-3-0-8:1.4.0.4
	Release-2-0-8:1.4.0.6
	Release-2-0-7_Root:1.4
	Release-2-0-7:1.4.0.2
	Release-2-0-6-branch:1.3.0.2;
locks; strict;
comment	@# @;


1.5
date	2008.11.27.21.00.26;	author jost_boekemeier;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.19.20.45.43;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.05.14.55.43;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.24.18.39.18;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.20.22.06.45;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Release 5.3.3.1
@
text
@
;; PHP/Java Bridge test client written in Chicken/SCHEME.
;; Run this example with: csi listToArray

(load-library 'tcp)
(load-library 'posix)

(define HOST "127.0.0.1")
(define PORT 9267)

(define-values (inp outp) (tcp-connect HOST PORT))
(define buf (make-string 65535))

;; read chars until the top-level <.*/> was received 
(define read-document(lambda (buf inp)
    (let* ((last #\  )
	   (level 0)
	   (quote #f)
	   (more
	    (lambda (c)
	      (let ((more-chars 
		     (lambda (c)
		       (cond 
			( [char=? #\/ c] [set! level (- level (if (char=? #\< last) 2 1))] )
			( [char=? #\< c] [set! level (+ 1 level)] ))
		       (set! last c)
		       (and (char=? #\> c) (= 0 level)))))

		(if quote 
		    (begin (if (char=? #\" c) (begin (set! quote #f) #f) #f)) 
		    (begin (if (char=? #\" c) (begin (set! quote #t) #f) (more-chars c))) )))))
      
      (do ((i 0 (+ 1 i)) (c (read-char inp) (read-char inp)))
	  ((more c) (begin (string-set! buf i c) (+ i 1)))
	(begin (string-set! buf i c))))))

;; real work starts here

;; header: prefer values, not base 64 encoded
(display (integer->char #o177) outp) 
(display (integer->char #o101) outp)

;; create a java.util.ArrayList, add 3 entries to it ...
(display "<C value=\"java.util.ArrayList\" p=\"I\"></C>" outp)
(read-document buf inp) ;discard received document
(display "<I value=\"1\" method=\"add\" p=\"I\"><String v=\"ENTRY 1\"/></I>" outp)
(read-document buf inp)
(display "<I value=\"1\" method=\"add\" p=\"I\"><String v=\"ENTRY 2\"/></I>" outp)
(read-document buf inp)
(display "<I value=\"1\" method=\"add\" p=\"I\"><String v=\"LAST ENTRY\"/></I>" outp)
(read-document buf inp)

;; ... and ask for the array
(display "<I value=\"1\" m=\"toArray\" p=\"Invoke\"></I>" outp)
(read-document buf inp)
(display "<I value=\"0\" m=\"getValues\" p=\"Invoke\"><Object v=\"2\"/></I>" outp)
(let ((count (read-document buf inp)))
  (display "Received:") (newline)
  ;; should have received an array of three values
  (display (substring buf 0 count))
  (newline))

(exit 0)

@


1.4
log
@Release-2.0.7-pre
@
text
@d38 5
a42 1
(write 2 outp) ; arrays as values  , see PROTOCOL.TXT
d44 1
a44 1
(display "<C value=\"java.util.ArrayList\" p=\"I\" id=\"0\"></C>" outp)
d46 1
a46 1
(display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"ENTRY 1\"/></I>" outp)
d48 1
a48 1
(display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"ENTRY 2\"/></I>" outp)
d50 1
a50 1
(display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"LAST ENTRY\"/></I>" outp)
d54 3
a56 1
(display "<I value=\"1\" m=\"toArray\" p=\"Invoke\" id=\"0\"></I>" outp)
d63 2
a64 1
(exit 0)@


1.3
log
@Release 2.0
@
text
@d9 1
a9 1
(define PORT 9167)
@


1.2
log
@Replaced Guile/SCHEME with Chicken/SCHEME example
@
text
@d14 1
a14 1
;; read a until the top-level /> was received				       
d38 2
a39 2
(write 2 outp)
  ;; create a java.util.ArrayList, add 3 entries to it ...
@


1.1
log
@PYTHON and GUILE/Scheme clients added
@
text
@a0 2
#!/usr/bin/guile -s
!#
d2 2
a3 2
;; PHP/Java Bridge test client written in GUILE/Scheme.
;; Run this example with: guile -s listToArray.scm
d5 2
a6 1
(use-modules (ice-9 rw))
d9 1
a9 1
(define PORT 9176)
d11 1
a12 4
(define (error-handler key . args) 
  (display "Please start the bridge, for example with java -jar JavaBridge.jar 9176 5 \"\"")
  (newline)
  (exit 1))
d14 22
a35 1
(let ((s (socket AF_INET SOCK_STREAM 0)))
d37 19
a55 4
  (let ((connect (lambda () (connect s AF_INET (inet-aton HOST) PORT)))) 
    (catch #t connect error-handler))

  (display (list->string '(#\02)) s)	; we want arrays as values, see PROTOCOL.TXT
d57 1
a57 18
  ;; create a java.util.ArrayList, add 3 entries to it ...
  (display "<C value=\"java.util.ArrayList\" p=\"I\" id=\"0\"></C>" s)
  (read-string!/partial buf s)
  (display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"ENTRY 1\"/></I>" s)
  (read-string!/partial buf s)
  (display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"ENTRY 2\"/></I>" s)
  (read-string!/partial buf s)
  (display "<I value=\"1\" method=\"add\" p=\"I\" id=\"0\"><String v=\"LAST ENTRY\"/></I>" s)
  (read-string!/partial buf s)

  ;; ... and ask for the array
  (display "<I value=\"1\" m=\"toArray\" p=\"Invoke\" id=\"0\"></I>" s)
  (let ((count (read-string!/partial buf s))) ; System: object=1

    (display "Received:") (newline)
    ;; should have received an array of three values
    (display (substring buf 0 count))
    (newline)))@

