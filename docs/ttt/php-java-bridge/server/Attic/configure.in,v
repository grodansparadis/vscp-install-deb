head	1.42;
access;
symbols
	Release-5-5-4-1:1.40.0.14
	Root_Release-5-5-4-1:1.40
	Release-5-5-4:1.40.0.12
	Root_Release-5-5-4:1.40
	Release-5-5-3:1.40.0.10
	ROOT_Release-5-5-3:1.40
	Release-5-5-2:1.40.0.8
	Root_Release-5-5-2:1.40
	debian_version_5_5_1-1:1.40
	Release-5-5-1:1.40.0.4
	upstream_version_5_5_1:1.40
	ROOT_Release-5-5-1:1.40
	debian_version_5_5-1:1.40
	upstream_version_5_5:1.40
	ROOT_Release-5-5:1.40
	Release-5-5:1.40.0.6
	debian_version_5_4_4_2-3:1.40
	Release-5-4-4-2-1:1.40.0.2
	debian_version_5_4_4_2-2:1.40
	debian_version_5_4_4_2-1:1.40
	upstream_version_5_4_4_2:1.40
	debian_version_5_4_4_1-1:1.39
	upstream_version_5_4_4_1:1.39
	debian_version_5_4_4-1:1.39
	upstream_version_5_4_4:1.39
	Release-5-4-4:1.39.0.6
	Root_Release-5-4-4:1.39
	debian_version_5_4_3_2-1:1.39
	upstream_version_5_4_3_2:1.39
	Release_5-4-3-2:1.39.0.2
	Root_Release_5-4-3-2:1.39
	upstream_version_5_4_3_1:1.38
	debian_version_5_4_3_1-1:1.38
	Release-5-4-3:1.38.0.8
	Root_Release-5-4-3:1.38
	Root_Release-5-4-1:1.38
	Release-5-4-1:1.38.0.6
	Root_Release-5-4:1.38
	Release-5-4:1.38.0.4
	upstream_version_5_3_4:1.38
	debian_version_5_3_4-1:1.38
	ROOT_Release-5-3-4:1.38
	Release-5-3-4:1.38.0.2
	ROOT_Release-5-3-3:1.37
	Release-5-3-3:1.37.0.34
	debian_version_5_3_2_1_2-1:1.37
	upstream_version_5_3_2_1_2:1.37
	debian_version_5_3_2_1_1-1:1.37
	debian_version_5_3_2_1_1:1.37
	upstream_version_5_3_2_1_1:1.37
	Root_Release-5-3-2-1:1.37
	Release-5-3-2-1:1.37
	ROOT_RELEASE-5-3-2-1:1.37
	RELEASE-5-3-2-1:1.37.0.36
	Release-5-3-2:1.37.0.32
	Root_Release-5-3-2:1.37
	Root_Release-5-3-1:1.37
	Release-5-3-1:1.37.0.30
	Release-5-2-3-1:1.37.0.28
	Root_Release-5-2-3-1:1.37
	Release-5-2-2-4:1.37.0.26
	Root_Release-5-2-2-4:1.37
	Release-5-2-2-1:1.37.0.24
	Root_Release-5-2-2-1:1.37
	upstream_version_5_2_2:1.37
	debian_version_5_2_2-1:1.37
	Release-5-2-2:1.37.0.22
	ROOT_Release-5-2-2:1.37
	ROOT_Release-5-2-1:1.37
	Release-5-2-1:1.37.0.20
	Release-5-2-0:1.37.0.18
	ROOT_Release-5-2-0:1.37
	ROOT_Release-5-1-2:1.37
	Release-5-1-2:1.37.0.16
	Version-5-1-1:1.37.0.14
	ROOT_Version-5-1-1:1.37
	debian_version_5_1_0-1:1.37
	upstream_version_5_1_0:1.37
	ROOT_Release-5-1-0:1.37
	Release-5-1-0:1.37.0.12
	ROOT_Release-5-0-0:1.37
	Release-5-0-0:1.37.0.10
	Release-4-3-3:1.37.0.8
	ROOT_Release-4-3-3:1.37
	upstream_version_4_3_2:1.37
	debian_version_4_3_2-1:1.37
	ROOT_Release-4-3-2:1.37
	Release-4-3-2:1.37.0.6
	Release-4-3-1:1.37.0.4
	ROOT_Release-4-3-1:1.37
	debian_version_4_3_0-1:1.37
	upstream_version_4_3_0:1.37
	ROOT_Release-4-3-0:1.37
	Release-4-3-0:1.37.0.2
	debian_version_3_2_1b-2:1.35
	debian_version_4_2_2-1:1.36
	upstream_version_4_2_2:1.36
	debian_version_3_2_1b-1:1.35
	upstream_version_3_2_1b:1.35
	Release-4-1-2:1.36.0.8
	Release-4-0-8:1.36.0.6
	debian_version_4_0_8a-1:1.36
	upstream_version_4_0_8a:1.36
	jostb-debian-ubuntu-patch:1.36.0.4
	debian_version_4_0_8-1:1.36
	upstream_version_4_0_8:1.36
	debian_version_4_0_7-1:1.36
	upstream_version_4_0_7:1.36
	debian_version_4_0_6-1:1.36
	upstream_version_4_0_6:1.36
	debian_version_4_0_2-1:1.36
	upstream_version_4_0_2:1.36
	Release-4-0-2_Root:1.36
	Release-4-0-2:1.36.0.2
	upstream_version_4_0_1:1.35
	debian_version_4_0_1-2:1.35
	Release-3-2-1:1.35.0.4
	Release-3-1-8:1.35.0.2
	Release-3-0-8_root:1.27.2.1
	Release-3-0-8_Root:1.30
	Release-3-0-8:1.27.0.2
	Release-2-0-8:1.17.0.6
	Release-2-0-7_Root:1.17
	Release-2-0-7:1.17.0.2
	Release-2-0-6-branch:1.14.0.2
	Version-1:1.12.0.6
	Version-2:1.12.0.4
	Release-2:1.12.0.2
	PHP-5:1.4.0.4
	Release-1-0-6:1.4.0.6;
locks; strict;
comment	@# @;


1.42
date	2010.02.18.17.25.32;	author jost_boekemeier;	state dead;
branches;
next	1.41;

1.41
date	2010.01.23.10.09.35;	author jost_boekemeier;	state Exp;
branches;
next	1.40;

1.40
date	2009.04.25.12.25.23;	author jost_boekemeier;	state Exp;
branches;
next	1.39;

1.39
date	2009.02.15.22.15.46;	author jost_boekemeier;	state Exp;
branches;
next	1.38;

1.38
date	2008.11.30.17.08.48;	author jost_boekemeier;	state Exp;
branches;
next	1.37;

1.37
date	2007.09.30.16.07.52;	author jost_boekemeier;	state Exp;
branches;
next	1.36;

1.36
date	2007.03.19.13.03.17;	author jost_boekemeier;	state Exp;
branches;
next	1.35;

1.35
date	2006.08.08.17.20.45;	author jost2345;	state Exp;
branches;
next	1.34;

1.34
date	2006.07.19.15.25.34;	author jost2345;	state Exp;
branches;
next	1.33;

1.33
date	2006.06.22.16.25.44;	author jost2345;	state Exp;
branches;
next	1.32;

1.32
date	2006.06.21.19.53.10;	author jost2345;	state Exp;
branches;
next	1.31;

1.31
date	2006.06.19.20.37.19;	author jost2345;	state Exp;
branches;
next	1.30;

1.30
date	2006.04.28.18.15.07;	author jost2345;	state Exp;
branches;
next	1.29;

1.29
date	2006.04.26.19.09.32;	author jost2345;	state Exp;
branches;
next	1.28;

1.28
date	2006.04.20.17.16.08;	author jost2345;	state Exp;
branches;
next	1.27;

1.27
date	2006.02.18.15.42.49;	author jost2345;	state Exp;
branches
	1.27.2.1;
next	1.26;

1.26
date	2006.02.13.18.34.22;	author jost2345;	state Exp;
branches;
next	1.25;

1.25
date	2006.02.03.17.41.37;	author jost2345;	state Exp;
branches;
next	1.24;

1.24
date	2006.01.30.19.39.54;	author jost2345;	state Exp;
branches;
next	1.23;

1.23
date	2006.01.15.21.05.38;	author jost2345;	state Exp;
branches;
next	1.22;

1.22
date	2005.12.18.18.17.52;	author jost2345;	state Exp;
branches;
next	1.21;

1.21
date	2005.12.08.18.42.16;	author jost2345;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.23.19.09.42;	author jost2345;	state Exp;
branches;
next	1.19;

1.19
date	2005.11.17.17.24.38;	author jost2345;	state Exp;
branches;
next	1.18;

1.18
date	2005.11.05.13.11.19;	author jost2345;	state Exp;
branches;
next	1.17;

1.17
date	2005.06.27.23.13.14;	author jost2345;	state Exp;
branches;
next	1.16;

1.16
date	2005.06.21.20.17.36;	author jost2345;	state Exp;
branches;
next	1.15;

1.15
date	2005.06.19.20.45.43;	author jost2345;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.15.19.10.32;	author jost2345;	state Exp;
branches;
next	1.13;

1.13
date	2005.02.13.21.43.29;	author jost2345;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.28.16.32.55;	author jost2345;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.04.19.24.40;	author jost2345;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.03.20.32.58;	author jost2345;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.03.19.50.45;	author jost2345;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.02.20.46.37;	author jost2345;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.02.14.02.10;	author jost2345;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.20.20.04.44;	author jost2345;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.12.09.57.26;	author jost2345;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.26.23.00.48;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.26.18.19.48;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.24.10.58.48;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.23.15.57.36;	author jost2345;	state Exp;
branches;
next	;

1.27.2.1
date	2006.04.23.19.09.08;	author jost2345;	state Exp;
branches;
next	1.27.2.2;

1.27.2.2
date	2006.05.15.19.02.13;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.42
log
@Release-6-0-0
@
text
@AC_INIT(
[PHP/Java Bridge], 
m4_bpatsubst(m4_include([../VERSION]),[
]), 
[php-java-bridge-users@@lists.sourceforge.net], 
[php-java-bridge])
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_LINKS(protocol.h:../protocol.h)

dnl autoconf >2.53
AC_PREREQ(2.53)
AC_CONFIG_SRCDIR(natcJavaBridge.c)

dnl automake >1.6.3
AM_INIT_AUTOMAKE([1.6.3])
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_PROG_CPP
AM_PROG_GCJ
AC_PROG_LIBTOOL
AC_STDC_HEADERS

AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME[[,JRE_HOME]]]]	
                          include java support. If JRE_HOME is specified, 
                          the run-time java location will be compiled into 
                          the binary. Otherwise the java executable will 
                          be searched using the PATH environment variable
			  Example: --with-java=/opt/jdk1.4,/usr/java/jre1.6], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(mono,  [  --with-mono[[=/path/to/mono/exe,[/path/to/dir-containing-ikvmc.exe+dlls]]] 
                          include mono support
                          Example: --with-mono=/opt/mono/bin/mono], PHP_MONO="$withval", PHP_MONO="no")
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	
                          directory which contains the shared java 
                          extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	
                          include java servlet support. JAR must be the 
                          location of j2ee.jar or servlet.jar; creates 
                          JavaBridge.war], SERVLET="$enableval", SERVLET="yes")
AC_ARG_ENABLE(script,  [  --enable-script[[=JAR]]	
                          include java script support. If you use a 
                          JDK < 1.6 JAR must be the location of 
                          script-api.jar; creates php-script.jar], SCRIPT="$enableval", SCRIPT="yes")

if test "$PHP_JAVA" != "no" || test "$PHP_MONO" != "no"  ; then

AC_CHECK_PROG(have_gcj, gcj, "yes", "no")
JAVA_FUNCTION_CHECKS
PTHREADS_CHECK
PTHREADS_ASSIGN_VARS
PTHREADS_FLAGS
JAVA_CHECK_BROKEN_STDIO_BUFFERING
JAVA_CHECK_ABSTRACT_NAMESPACE
JAVA_CHECK_STRUCT_UCRED
JAVA_CHECK_OPTION_FTARGET

AC_MSG_CHECKING(libtool)
# On the Mac libtool is called "glibtool"
glibtool --version 2>/dev/null | fgrep "(GNU libtool)" ||
  libtool --version | fgrep "(GNU libtool)" ||
  AC_MSG_ERROR([Need GNU libtool, please read the INSTALL document.])

JNI_LIBS="libnatcJavaBridge.la"
AM_CPPFLAGS="${AM_CPPFLAGS} -DEXTENSION_DIR=\"\\\"\$(EXTENSION_DIR)\\\"\""
if test "$PHP_JAVA" != "yes"; then
# --with-java=/opt/compiletime/jdk,/usr/runtime/jre
PHP_JRE="`echo $PHP_JAVA | LANG=C awk -F, '{print $2}'`"
PHP_JAVA_DIR="`echo $PHP_JAVA | LANG=C awk -F, '{print $1}'`"

JAVA_INCLUDES=`for i in \`find $PHP_JAVA_DIR/include -follow -type d -print\`; do echo -n "-I$i "; done`
AM_CPPFLAGS="${AM_CPPFLAGS} $JAVA_INCLUDES"
AC_CHECK_PROG(have_ar, ar, "yes", "no")
JAVA_CHECK_JNI
if test "$jb_cv_have_jni" = "no"; then 
   JNI_LIBS=""
fi
else
AC_CHECK_PROG(have_ar, ar, "yes", "no")
JAVA_CHECK_JNI
if test "$jb_cv_have_jni" = "no"; then 
   echo "FATAL: Native compilation not supported on this system."
   echo "Install a java SDK and run: ./configure --with-java=<JAVA_HOME>"
   exit 3
fi
fi


JAVA_BRIDGE_JAR=
MONO_BRIDGE_EXE=
TCP_SOCKETNAME="9267"
EXTENSION_DISPLAY_NAME="VMBridge"
VM_BINARIES=

if test "$PHP_JAVA" != "no"; then
  if test X$PHP_JRE != X || test $jb_cv_have_jni = no || test $have_gcj = no; then
   VM_BINARIES=""
  else
   VM_BINARIES="java"
  fi
fi
if test "$PHP_JAVA" != "yes" && test "$PHP_JAVA" != "no"; then
  JAVA_BRIDGE_JAR="JavaBridge.jar"
else
  SCRIPT="no"
  SERVLET="no"
fi

if test "$PHP_MONO" != "no"; then

   MONO_BRIDGE_EXE="MonoBridge.exe ICSharpCode.SharpZipLib.dll IKVM.AWT.WinForms.dll IKVM.GNU.Classpath.dll IKVM.Runtime.dll"
   VM_BINARIES="${VM_BINARIES} ${MONO_BRIDGE_EXE}"
   
   # --with-mono=/path/to/mono.exe,/path/to/ikvmc/dir
   PHP_MONO_BINARY="`echo $PHP_MONO | LANG=C awk -F, '{print $1}'`"
   PHP_MONO="`echo $PHP_MONO | LANG=C awk -F, '{print $2}'`"
   if test "X$PHP_MONO_BINARY" = "X" || test "$PHP_MONO_BINARY" = "yes"; then 
     PHP_MONO_BINARY="mono"; 
   fi
   if test "X${PHP_MONO}" = "X"; then PHP_MONO="../unsupported"; fi
   if ! test -f ${PHP_MONO}/ikvmc.exe; then 
     AC_MSG_ERROR([ikvmc.exe not found])
   fi
fi

# optional script, requires servlet
JAVA_BRIDGE_SCRIPT_JAR="php-script.jar"
if test "$SCRIPT" = "no"; then
  JAVA_BRIDGE_SCRIPT_JAR=""
  SCRIPT=""
else
  if test "$SERVLET" = "no"; then
  SERVLET="yes";
  fi
fi
if test "$SCRIPT" = "yes"; then
  SCRIPT="script-api.jar"
fi

# optional JavaBridge.war, requires servlet
JAVA_BRIDGE_SERVLET_JAR="php-servlet.jar"
JAVA_BRIDGE_WAR="JavaBridge.war"
if test "$SERVLET" = "no"; then
  JAVA_BRIDGE_WAR=
  JAVA_BRIDGE_SERVLET_JAR=""
fi

if test "$SERVLET" = "yes"; then
  SERVLET="../unsupported/servlet-api.jar"
  if test X$SERVLET = X; then 
   echo "servlet-api.jar not found, skipping servlet JavaBridge.war creation" >2
   SERVLET=
   JAVA_BRIDGE_WAR=
  fi
fi

SOURCE_VERSION="-source 1.4 -target 1.4"
if test "X${PHP_JRE}" != "X"; then SOURCE_VERSION=; fi

BACKEND_VERSION=`cat ../VERSION`
AC_CONFIG_FILES([php/java/bridge/global.properties])
AC_SUBST(SOURCE_VERSION)
AC_SUBST(AM_CPPFLAGS)
AC_SUBST(BACKEND_VERSION)
AC_SUBST(EXTENSION_DIR)
AC_SUBST(PHP_JAVA_DIR)
AC_SUBST(PHP_MONO_BINARY)
AC_SUBST(PHP_MONO)
AC_SUBST(TCP_SOCKETNAME)
AC_SUBST(EXTENSION_DISPLAY_NAME)
AC_SUBST(VM_BINARIES)
AC_SUBST(MONO_BRIDGE_EXE)
AC_SUBST(SERVLET)
AC_SUBST(JAVA_BRIDGE_WAR)
AC_SUBST(JAVA_BRIDGE_JAR)
AC_SUBST(JAVA_BRIDGE_SERVLET_JAR)
AC_SUBST(JAVA_FTARGET_FLAGS)

# jni
AC_SUBST(JNI_LIBS)

# optional script
AC_SUBST(SCRIPT)
AC_SUBST(JAVA_BRIDGE_SCRIPT_JAR)
AC_OUTPUT(Makefile)

dnl echo "-----------------------------------------------------------------"
dnl echo "The PHP/Java Bridge back-end will be compiled with:"
dnl if test "$PHP_MONO" != "no"; then
dnl echo "  MONO DIR: $PHP_MONO"
dnl echo "  Will use GNU gcc, gcj and ikvmc to compile back-end to CLR bytecode."
dnl else if test "$PHP_JAVA" = "yes"; then
dnl echo "  JAVA: --with-java not specified."
dnl echo "  Will use GNU gcc, gcj to compile back-end to native code."
dnl else
dnl echo "  JAVA (compile time)    : $PHP_JAVA_DIR"
dnl echo "  JAVA (run time)        : $PHP_JRE"
dnl jni_available="available"
dnl if test "$jb_cv_have_jni" = "no"; then 
dnl   jni_available="not available"
dnl fi
dnl echo "  LOCAL (secure) channel : $jni_available"
dnl echo ""
dnl echo "  The following additional jars will be created:"
dnl echo "  SERVLET                : $JAVA_BRIDGE_SERVLET_JAR"
dnl echo "  SCRIPT                 : $JAVA_BRIDGE_SCRIPT_JAR"
dnl fi
dnl fi
dnl echo "-----------------------------------------------------------------"
dnl echo ""

else

echo "install:" >Makefile

fi
@


1.41
log
@Release-5-5-5
@
text
@@


1.40
log
@Release-5.4.4.2
@
text
@d96 1
a96 1
   VM_BINARIES="RunJavaBridge"
d98 1
a98 1
   VM_BINARIES="java RunJavaBridge"
d111 1
a111 1
   VM_BINARIES="${VM_BINARIES} ${MONO_BRIDGE_EXE} RunMonoBridge"
d160 1
a160 1
AC_CONFIG_FILES([RunJavaBridge.c RunMonoBridge.c php/java/bridge/global.properties])
@


1.39
log
@eclipse birt integration
@
text
@d47 1
d55 1
a86 1
AC_CHECK_PROG(have_gcj, gcj, "yes", "no")
d176 1
@


1.38
log
@Release 5.3.4
@
text
@d101 1
a101 1
  JAVA_BRIDGE_JAR="javabridge.policy JavaBridge.jar"
@


1.37
log
@Release-4-3-0
@
text
@d72 1
a72 1
if test "$have_jni" = "no"; then 
d78 1
a78 1
if test "$have_jni" = "no"; then 
d94 1
a94 1
  if test X$PHP_JRE != X || test $have_jni = no || test $have_gcj = no; then
d196 1
a196 1
dnl if test "$have_jni" = "no"; then 
@


1.36
log
@Release-4-0-2
@
text
@a43 4
AC_ARG_ENABLE(faces,  [  --enable-faces[[=JAR]]	
                          include java server faces support. JAR must be 
                          the location of jsf-api.jar; creates 
                          php-faces.jar], FACES="$enableval", FACES="no")
d66 1
a66 1
PHP_JAVA="`echo $PHP_JAVA | LANG=C awk -F, '{print $1}'`"
d68 1
a68 1
JAVA_INCLUDES=`for i in \`find $PHP_JAVA/include -follow -type d -print\`; do echo -n "-I$i "; done`
d87 7
a93 9
TCP_SOCKETNAME="9167"
EXTENSION_DISPLAY_NAME="MonoBridge"
MONO_BRIDGE_EXE="MonoBridge.exe ICSharpCode.SharpZipLib.dll IKVM.AWT.WinForms.dll IKVM.GNU.Classpath.dll IKVM.Runtime.dll"
VM_BINARIES="${MONO_BRIDGE_EXE} RunMonoBridge"

if test "$PHP_MONO" = "no"; then
  MONO_BRIDGE_EXE=
  TCP_SOCKETNAME="9267"
  EXTENSION_DISPLAY_NAME="JavaBridge"
d95 1
a95 1
    VM_BINARIES="RunJavaBridge"
d97 1
a97 1
    VM_BINARIES="java RunJavaBridge"
a98 1
  MONO_BRIDGE_EXE=
d100 7
d108 4
d113 1
a113 1
   PHP_JAVA="`echo $PHP_MONO | LANG=C awk -F, '{print $1}'`"
d115 2
a116 2
   if test "X$PHP_JAVA" = "X" || test "$PHP_JAVA" = "yes"; then 
     PHP_JAVA="mono"; 
a123 17
# optional faces, requires script, servlet
JAVA_BRIDGE_FACES_JAR="php-faces.jar"
if test "$FACES" = "no"; then
  JAVA_BRIDGE_FACES_JAR=""
  FACES=""
else
  if test "$SCRIPT" = "no"; then
  SCRIPT="yes";
  fi
  if test "$SERVLET" = "no"; then
  SERVLET="yes";
  fi
fi
if test "$FACES" = "yes"; then
  FACES="../unsupported/jsf-api.jar"
fi

d164 2
a165 1
AC_SUBST(PHP_JAVA)
d173 1
a181 4
# optional faces
AC_SUBST(FACES)
AC_SUBST(JAVA_BRIDGE_FACES_JAR)
AM_CONDITIONAL([COND_GCJ], [test "$PHP_MONO" != "no" || test "$PHP_JAVA" = "yes"])
d184 24
a207 25
echo "-----------------------------------------------------------------"
echo "The PHP/Java Bridge back-end will be compiled with:"
if test "$PHP_MONO" != "no"; then
echo "  MONO DIR: $PHP_MONO"
echo "  Will use GNU gcc, gcj and ikvmc to compile back-end to CLR bytecode."
else if test "$PHP_JAVA" = "yes"; then
echo "  JAVA: --with-java not specified."
echo "  Will use GNU gcc, gcj to compile back-end to native code."
else
echo "  JAVA (compile time)    : $PHP_JAVA"
echo "  JAVA (run time)        : $PHP_JRE"
jni_available="available"
if test "$have_jni" = "no"; then 
  jni_available="not available"
fi
echo "  LOCAL (secure) channel : $jni_available"
echo ""
echo "  The following additional jars will be created:"
echo "  SERVLET                : $JAVA_BRIDGE_SERVLET_JAR"
echo "  SCRIPT                 : $JAVA_BRIDGE_SCRIPT_JAR"
echo "  JAVA SERVER FACES      : $JAVA_BRIDGE_FACES_JAR"
fi
fi
echo "-----------------------------------------------------------------"
echo ""
@


1.35
log
@Release-3-1-7
@
text
@d47 1
a47 1
                          php-faces.jar], FACES="$enableval", FACES="yes")
d124 1
@


1.34
log
@Release-3-1-6
@
text
@d30 1
a30 1
AC_ARG_WITH(mono,  [  --with-mono[[=/path/to/mono.exe]]
d37 3
a39 2
                          JAR must be j2ee.jar or servlet.jar which 
                          contains the servlet classes], SERVLET="$enableval", SERVLET="yes")
d41 3
a43 2
                          if you use JDK < 1.6 JAR must be script-api.jar 
                          which contains the jsr223 script api], SCRIPT="$enableval", SCRIPT="yes")
d45 3
a47 2
                          JAR must be jsf-api.jar which contains the java 
                          server faces api], FACES="$enableval", FACES="yes")
d89 2
d100 5
a104 1
  VM_BINARIES="java RunJavaBridge"
d111 3
a113 1
   if test "$PHP_JAVA" = "yes"; then PHP_JAVA="mono"; fi
@


1.33
log
@Release-3-1-2
@
text
@d157 1
a157 1
if test "X${PHP_JRE}" = X; then SOURCE_VERSION=; fi
@


1.32
log
@Release-3-1-2
@
text
@d156 3
d161 1
@


1.31
log
@Release-3-1-0
@
text
@d30 1
a30 1
AC_ARG_WITH(mono,  [  --with-mono[[=/path/to/ikvmc.exe]]
d32 1
a32 1
                          Example: --with-mono=$HOME/ikvmdlls/], PHP_MONO="$withval", PHP_MONO="no")
d57 4
a60 2
libtool --version | fgrep "(GNU libtool)" ||
   AC_MSG_ERROR([Need GNU libtool, please read the INSTALL document.])
@


1.30
log
@Release-3-1-0
@
text
@d32 1
a32 1
                          Example: --with-mono=$HOME/bin/ikvmc.exe], PHP_MONO="$withval", PHP_MONO="no")
d69 1
d75 1
d86 1
a86 1
MONO_BRIDGE_EXE=MonoBridge.exe
d96 9
a104 7
if test "$PHP_MONO" = "yes"; then
  PHP_MONO="`locate ikvmc.exe | head -1`"
  if test X$PHP_MONO = X; then 
   echo "ikvmc.exe not found, skipping mono JavaBridge.exe creation" >2
   PHP_MONO=
   MONO_BRIDGE_EXE=
  fi
d182 5
a186 2
echo "The PHP/Java Bridge backend will be compiled with:"
if test "$PHP_JAVA" = "yes"; then
d188 1
a188 4
echo "  Will use GNU gcc, gcj to compile backend to native code."
else if test "$PHP_MONO" != "no"; then
echo "  MONO: $PHP_MONO"
echo "  Will use GNU gcc, gcj and ikvmc to compile backend to CLR bytecode."
d192 5
a196 1
echo "  LOCAL (secure) channel : $have_jni"
@


1.29
log
@Release-3-1-0
@
text
@a54 1
CHECK_FAST_TCP_SOCKETS
a102 5
if test "$SERVLET" = "yes" && test "$have_fast_tcp_sockets" = "no"; then
  echo "Fast TCP sockets not available on this OS, switching off J2EE back-end."
  SERVLET="no";
fi

@


1.28
log
@3.1-branch
@
text
@d55 1
d104 5
a138 1

d146 1
@


1.27
log
@Release-3.0.7a
@
text
@d24 21
a44 6
AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME,JRE_HOME]]	Include java support], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(mono,  [  --with-mono[[=ikvmc.exe location]]             Include mono support], PHP_MONO="$withval", PHP_MONO="no")
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	Directory which contains the shared java extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	JAR must be j2ee.jar or servlet.jar which contains the servlet classes], SERVLET="$enableval", SERVLET="yes")
AC_ARG_ENABLE(script,  [  --enable-script[[=JAR]]	If you use JDK < 1.6 JAR must be script-api.jar which contains the jsr223 script api], SCRIPT="$enableval", SCRIPT="yes")
AC_ARG_ENABLE(faces,  [  --enable-faces[[=JAR]]	JAR must be jsf-api.jar which contains the java server faces api], FACES="$enableval", FACES="yes")
@


1.27.2.1
log
@Release-3-0-8-1
@
text
@d24 6
a29 21
AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME[[,JRE_HOME]]]]	
                          include java support. If JRE_HOME is specified, 
                          the run-time java location will be compiled into 
                          the binary. Otherwise the java executable will 
                          be searched using the PATH environment variable
			  Example: --with-java=/opt/jdk1.4,/usr/java/jre1.6], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(mono,  [  --with-mono[[=/path/to/ikvmc.exe]]
                          include mono support
                          Example: --with-mono=$HOME/bin/ikvmc.exe], PHP_MONO="$withval", PHP_MONO="no")
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	
                          directory which contains the shared java 
                          extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	
                          JAR must be j2ee.jar or servlet.jar which 
                          contains the servlet classes], SERVLET="$enableval", SERVLET="yes")
AC_ARG_ENABLE(script,  [  --enable-script[[=JAR]]	
                          if you use JDK < 1.6 JAR must be script-api.jar 
                          which contains the jsr223 script api], SCRIPT="$enableval", SCRIPT="yes")
AC_ARG_ENABLE(faces,  [  --enable-faces[[=JAR]]	
                          JAR must be jsf-api.jar which contains the java 
                          server faces api], FACES="$enableval", FACES="yes")
@


1.27.2.2
log
@Release-3-0-8-1
@
text
@d178 1
a178 1
echo "The PHP/Java Bridge back-end will be compiled with:"
d181 1
a181 1
echo "  Will use GNU gcc, gcj to compile back-end to native code."
d184 1
a184 1
echo "  Will use GNU gcc, gcj and ikvmc to compile back-end to CLR bytecode."
@


1.26
log
@Release-3.0.7
@
text
@d49 1
a50 2
PHP_JRE="`echo $PHP_JAVA | LANG=C awk -F, '{print $2}'`"
if test X$PHP_JRE = X; then PHP_JRE="$PHP_JAVA"; fi
@


1.25
log
@Release-3.0.7
@
text
@d24 1
a24 1
AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME]]	Include java support], PHP_JAVA="$withval", PHP_JAVA="yes")
d41 4
d48 5
d172 2
a173 1
echo "  JAVA                   : $PHP_JAVA"
@


1.24
log
@Release-3.0.7
@
text
@d31 1
d50 7
d154 26
@


1.23
log
@Release-3.0.6
@
text
@d40 1
d43 6
a48 1
AM_CPPFLAGS="${AM_CPPFLAGS} `for i in \`find $PHP_JAVA/include -follow -type d -print\`; do echo -n "-I$i "; done`"
d134 3
@


1.22
log
@Release-3.0.3
@
text
@d113 1
d116 1
@


1.21
log
@Release-3-0-2
@
text
@d79 1
a79 1
  FACES="../unsupported/myfaces-api.jar"
@


1.20
log
@Release-3.0.0pre1
@
text
@d86 1
d93 1
a93 1
  SCRIPT="../unsupported/script-api.jar"
@


1.19
log
@Version-3.0.0pre
@
text
@d27 1
a27 1
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	JAR must be j2ee.jar or servlet.jar which contains the servlet classes], SERVLET="$enableval", SERVLET="no")
d66 1
a66 1
# optional faces
d82 12
d95 3
d101 1
d104 1
a104 1
  SERVLET="`locate servlet-api.jar | head -1`"
a111 10

# optional script
JAVA_BRIDGE_SCRIPT_JAR="php-script.jar"
if test "$SCRIPT" = "no"; then
  JAVA_BRIDGE_SCRIPT_JAR=""
fi
if test "$SCRIPT" = "yes"; then
  SCRIPT="../unsupported/script-api.jar"
fi

d123 1
@


1.18
log
@Version-3.0(pre)
@
text
@d29 1
d66 17
d88 1
a88 1
  SERVLET="`locate j2ee.jar | head -1`"
d90 1
a90 1
   echo "j2ee.jar not found, skipping servlet JavaBridge.war creation" >2
d96 2
d117 2
d121 3
@


1.17
log
@compiles with jdk1.5 + gnu java
@
text
@d27 2
a28 1
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	JAR must be j2ee.jar or servlet.jar which contains the servlet classes], SERVLET="$enableval", SERVLET="yes")
d78 8
d97 2
@


1.16
log
@Release-2.0.7pre
@
text
@d45 2
a46 1
VM_BINARIES="MonoBridge.exe RunMonoBridge"
d53 1
a53 1

d85 1
d89 1
a89 4
case $host_os in cygwin* | mingw* | pw32*) test $enable_win32_dll = no ;; *) false;; esac
COND_WIN_NO_DLL=$?
AC_SUBST(COND_WIN_NO_DLL)
AC_OUTPUT(Makefile_unix Makefile_windows Makefile)
@


1.15
log
@Release-2.0.7-pre
@
text
@d43 2
d46 1
d49 2
d52 1
d76 1
a76 1
AC_CONFIG_FILES([RunJavaBridge.c RunMonoBridge.c])
d81 2
@


1.14
log
@Replaced JNI with XML protocol
@
text
@d25 4
a28 1
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	Diretory which contains the shared java extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
d43 28
a70 1
AC_CONFIG_FILES([RunJavaBridge.c])
d74 5
a78 1
AM_CONDITIONAL([COND_GCJ], [test "$PHP_JAVA" = "yes"])
@


1.13
log
@Replaced JNI with XML protocol
@
text
@d1 49
@


1.12
log
@Release-1.0.8
@
text
@a0 49
AC_INIT(
[PHP/Java Bridge], 
m4_bpatsubst(m4_include([../VERSION]),[
]), 
[php-java-bridge-users@@lists.sourceforge.net], 
[php-java-bridge])
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_LINKS(sio.h:../sio.h sio.c:../sio.c protocol.h:../protocol.h)

dnl autoconf >2.53
AC_PREREQ(2.53)
AC_CONFIG_SRCDIR(natcJavaBridge.c)

dnl automake >1.6.3
AM_INIT_AUTOMAKE([1.6.3])
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_PROG_CPP
AM_PROG_GCJ
AC_PROG_LIBTOOL
AC_STDC_HEADERS

AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME]]	Include java support], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	Diretory which contains the shared java extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")

JAVA_FUNCTION_CHECKS
PTHREADS_CHECK
PTHREADS_ASSIGN_VARS
PTHREADS_FLAGS
JAVA_CHECK_BROKEN_STDIO_BUFFERING
JAVA_CHECK_ABSTRACT_NAMESPACE
JAVA_CHECK_STRUCT_UCRED

AM_CPPFLAGS="${AM_CPPFLAGS} -DEXTENSION_DIR=\"\\\"\$(EXTENSION_DIR)\\\"\""
if test "$PHP_JAVA" != "yes"; then
AM_CPPFLAGS="${AM_CPPFLAGS} `for i in \`find $PHP_JAVA/include -follow -type d -print\`; do echo -n "-I$i "; done`"
fi

AC_CONFIG_FILES([RunJavaBridge.c])
AC_SUBST(AM_CPPFLAGS)
AC_SUBST(EXTENSION_DIR)
AC_SUBST(PHP_JAVA)
AM_CONDITIONAL([COND_GCJ], [test "$PHP_JAVA" = "yes"])
case $host_os in cygwin* | mingw* | pw32*) test $enable_win32_dll = no ;; *) false;; esac
COND_WIN_NO_DLL=$?
AC_SUBST(COND_WIN_NO_DLL)
AC_OUTPUT(Makefile_unix Makefile_windows Makefile)

@


1.11
log
@Release-1.0.8
@
text
@d24 2
a25 2
AC_ARG_WITH(java,  [--with-java[=JAVA_HOME] Include java support], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(extdir,  [--with-extdir[=DIR] Diretory which contains the shared java extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
d36 1
d38 1
d40 1
@


1.10
log
@Release-1.0.8
@
text
@d10 2
a11 2
dnl autoconf >2.57
AC_PREREQ(2.57)
@


1.9
log
@Release-1.0.8
@
text
@d35 2
a36 4
# find includes eg. -I/opt/jdk1.4/include -I/opt/jdk1.4/include/linux
if test "$PHP_JAVA" != "yes"; then
PHP_EVAL_INCLINE(`for i in \`find $PHP_JAVA/include -follow -type d -print\`; do echo -n "-I$i "; done`)
fi
a37 1
AM_CPPFLAGS="${AM_CPPFLAGS} -DEXTENSION_DIR=\"\\\"\$(EXTENSION_DIR)\\\"\""
@


1.8
log
@ZTS
@
text
@d37 1
a37 1
PHP_EVAL_INCLINE(`for i in \`find -follow $PHP_JAVA/include -type d -print\`; do echo -n "-I$i "; done`)
@


1.7
log
@ZTS
@
text
@d37 1
a37 1
PHP_EVAL_INCLINE(`for i in \`find $PHP_JAVA/include -type d -print\`; do echo -n "-I$i "; done`)
@


1.6
log
@use java security instead of dropping the process privileges
@
text
@d7 2
a17 2
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_LINKS(sio.h:../sio.h sio.c:../sio.c protocol.h:../protocol.h)
@


1.5
log
@secure mode
@
text
@d1 10
a10 1
AC_INIT(natcJavaBridge.c)
d12 2
a13 1
AM_INIT_AUTOMAKE(java_bridge, "`cat ../VERSION`")
d17 1
a25 13
AC_MSG_CHECKING(whether to enable secure mode)
AC_ARG_ENABLE(secure-mode,
[  --enable-secure-mode    Enable java secure mode],[
  if test "$enableval" = "yes" ; then
   
    AC_DEFINE(JAVA_SECURE_MODE, 1, [ Set to 1 if java threads should drop their privileges. Warning: Only Sun JDK1.4.2_02 and higher supports this. ])
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
a41 2
INCLUDES="$INCLUDES -I.. -I."
AC_SUBST(INCLUDES)
@


1.4
log
@*** empty log message ***
@
text
@d15 13
d34 2
@


1.3
log
@Split Makefile.am into two files
@
text
@d34 4
a37 3
AM_CONDITIONAL([COND_WIN_NO_DLL], [case $host_os in cygwin* | mingw* | pw32*) test $enable_win32_dll = no ;; *) false;; esac])

AC_OUTPUT(Makefile_unix Makefile_windows)
@


1.2
log
@Load libraries from /usr/share/java or from ext_dir/lib
@
text
@d36 1
a36 1
AC_OUTPUT(Makefile)
@


1.1
log
@Solaris and Win98 support
@
text
@d9 2
a10 1
AM_PROG_LIBTOOL
d14 1
a14 1
AC_ARG_WITH(extdir,  [--with-extdir[=DIR] Diretory which contains the shared java extension], EXT_DIR="$withval", EXT_DIR="`php-config --extension-dir`")
a24 3
else
AM_PROG_GCJ
# LIBTOOL="${LIBTOOL} --tag=CC"
d27 2
d31 1
a31 1
AC_SUBST(EXT_DIR)
d34 1
@

