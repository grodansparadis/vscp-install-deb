head	1.4;
access;
symbols
	Release-5-5-4-1:1.3.0.62
	Root_Release-5-5-4-1:1.3
	Release-5-5-4:1.3.0.60
	Root_Release-5-5-4:1.3
	Release-5-5-3:1.3.0.58
	ROOT_Release-5-5-3:1.3
	Release-5-5-2:1.3.0.56
	Root_Release-5-5-2:1.3
	debian_version_5_5_1-1:1.3
	Release-5-5-1:1.3.0.52
	upstream_version_5_5_1:1.3
	ROOT_Release-5-5-1:1.3
	debian_version_5_5-1:1.3
	upstream_version_5_5:1.3
	ROOT_Release-5-5:1.3
	Release-5-5:1.3.0.54
	debian_version_5_4_4_2-3:1.3
	Release-5-4-4-2-1:1.3.0.48
	debian_version_5_4_4_2-2:1.3
	debian_version_5_4_4_2-1:1.3
	upstream_version_5_4_4_2:1.3
	debian_version_5_4_4_1-1:1.3
	upstream_version_5_4_4_1:1.3
	debian_version_5_4_4-1:1.3
	upstream_version_5_4_4:1.3
	Release-5-4-4:1.3.0.50
	Root_Release-5-4-4:1.3
	debian_version_5_4_3_2-1:1.3
	upstream_version_5_4_3_2:1.3
	Release_5-4-3-2:1.3.0.46
	Root_Release_5-4-3-2:1.3
	upstream_version_5_4_3_1:1.3
	debian_version_5_4_3_1-1:1.3
	Release-5-4-3:1.3.0.44
	Root_Release-5-4-3:1.3
	Root_Release-5-4-1:1.3
	Release-5-4-1:1.3.0.42
	Root_Release-5-4:1.3
	Release-5-4:1.3.0.40
	upstream_version_5_3_4:1.3
	debian_version_5_3_4-1:1.3
	ROOT_Release-5-3-4:1.3
	Release-5-3-4:1.3.0.38
	ROOT_Release-5-3-3:1.3
	Release-5-3-3:1.3.0.34
	debian_version_5_3_2_1_2-1:1.3
	upstream_version_5_3_2_1_2:1.3
	debian_version_5_3_2_1_1-1:1.3
	debian_version_5_3_2_1_1:1.3
	upstream_version_5_3_2_1_1:1.3
	Root_Release-5-3-2-1:1.3
	Release-5-3-2-1:1.3
	ROOT_RELEASE-5-3-2-1:1.3
	RELEASE-5-3-2-1:1.3.0.36
	Release-5-3-2:1.3.0.32
	Root_Release-5-3-2:1.3
	Root_Release-5-3-1:1.3
	Release-5-3-1:1.3.0.30
	Release-5-2-3-1:1.3.0.28
	Root_Release-5-2-3-1:1.3
	Release-5-2-2-4:1.3.0.26
	Root_Release-5-2-2-4:1.3
	Release-5-2-2-1:1.3.0.24
	Root_Release-5-2-2-1:1.3
	upstream_version_5_2_2:1.3
	debian_version_5_2_2-1:1.3
	Release-5-2-2:1.3.0.22
	ROOT_Release-5-2-2:1.3
	ROOT_Release-5-2-1:1.3
	Release-5-2-1:1.3.0.20
	Release-5-2-0:1.3.0.18
	ROOT_Release-5-2-0:1.3
	ROOT_Release-5-1-2:1.3
	Release-5-1-2:1.3.0.16
	Version-5-1-1:1.3.0.14
	ROOT_Version-5-1-1:1.3
	debian_version_5_1_0-1:1.3
	upstream_version_5_1_0:1.3
	ROOT_Release-5-1-0:1.3
	Release-5-1-0:1.3.0.12
	ROOT_Release-5-0-0:1.3
	Release-5-0-0:1.3.0.10
	Release-4-3-3:1.3.0.8
	ROOT_Release-4-3-3:1.3
	upstream_version_4_3_2:1.3
	debian_version_4_3_2-1:1.3
	ROOT_Release-4-3-2:1.3
	Release-4-3-2:1.3.0.6
	Release-4-3-1:1.3.0.4
	ROOT_Release-4-3-1:1.3
	debian_version_4_3_0-1:1.3
	upstream_version_4_3_0:1.3
	ROOT_Release-4-3-0:1.3
	Release-4-3-0:1.3.0.2
	debian_version_3_2_1b-2:1.2
	debian_version_4_2_2-1:1.2
	upstream_version_4_2_2:1.2
	debian_version_3_2_1b-1:1.2
	upstream_version_3_2_1b:1.2
	Release-4-1-2:1.2.0.14
	Release-4-0-8:1.2.0.12
	debian_version_4_0_8a-1:1.2
	upstream_version_4_0_8a:1.2
	jostb-debian-ubuntu-patch:1.2.0.10
	debian_version_4_0_8-1:1.2
	upstream_version_4_0_8:1.2
	debian_version_4_0_7-1:1.2
	upstream_version_4_0_7:1.2
	debian_version_4_0_6-1:1.2
	upstream_version_4_0_6:1.2
	debian_version_4_0_2-1:1.2
	upstream_version_4_0_2:1.2
	Release-4-0-2_Root:1.2
	Release-4-0-2:1.2.0.8
	upstream_version_4_0_1:1.2
	debian_version_4_0_1-2:1.2
	Release-3-2-1:1.2.0.6
	Release-3-1-8:1.2.0.4
	Release-3-0-8_root:1.2
	Release-3-0-8_Root:1.2
	Release-3-0-8:1.2.0.2;
locks; strict;
comment	@# @;


1.4
date	2010.02.18.17.25.32;	author jost_boekemeier;	state dead;
branches;
next	1.3;

1.3
date	2007.09.30.16.07.52;	author jost_boekemeier;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.16.20.27.00;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.07.19.23.54;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Release-6-0-0
@
text
@<?php 

  /* 
   * Use the old style which works with PHP 4 and PHP 5. Note that we
   * cannot use java_autoload() and try/catch because PHP 4 doesn't
   * support these features.
   */
if(!extension_loaded("java")) {
  die("Please create and install the java.so or php_java.dll from the source download");
 }

/*
 * check if this is really the PHP/Java Bridge from sourceforge
 */
if(!function_exists("java_get_server_name")) {
  die("Fatal: The loaded java extension is not the PHP/Java Bridge");
 }


phpinfo();

$System = new JavaClass("java.lang.System");
$props = $System->getProperties();
$array = java_values($props);
foreach($array as $k=>$v) {
  echo "$k=>$v"; echo "<br>\n";
}
echo "<br>\n";
  
/* create a PHP class which implements the Java toString() method */
class MyClass {
  function toString() { return "hello PHP from Java!"; }
}
  
/* create a Java object from the PHP object */
$javaObject = java_closure(new MyClass());
echo "PHP says that Java says: "; echo $javaObject->toString();  echo "<br>\n";
echo "<br>\n";

?>
@


1.3
log
@Release-4-3-0
@
text
@@


1.2
log
@Release-3.0.8test1
@
text
@d1 9
a9 17
#!/usr/bin/php
<?php
if (!extension_loaded('java')) {
  if ((version_compare("5.0.0", phpversion(), "<=")) && (version_compare("5.0.4", phpversion(), ">"))) {
    echo "This PHP version does not support dl().\n";
    echo "Please add an extension=java.so or extension=php_java.dll entry to your php.ini file.\n";
    exit(1);
  }

  echo "Please permanently activate the extension. Loading java extension now...\n";
  if (!@@dl('java.so')&&!@@dl('php_java.dll')) {
    echo "Error: Either the java extension is not installed \n";
    echo "or it was compiled against an older or newer php version.\n";
    echo "See the HTTP (IIS or Apache) server log for details.\n";
    !dl('java.so')&&!dl('php_java.dll');
    exit(2);
  }
a10 1
if(@@java_get_server_name() != null) {
d12 6
a17 24
  phpinfo();
  print "\n\n";
  
  $v = new JavaClass("java.lang.System");
  $p = @@$v->getProperties();
  if($ex=java_last_exception_get()) {
    $trace = new Java("java.io.ByteArrayOutputStream");
    $ex->printStackTrace(new java("java.io.PrintStream", $trace));
    echo "Exception $ex occured:<br>\n" . $trace . "\n";
    exit(1);
  }
  $arr=java_values($p);
  foreach ($arr as $key => $value) {
    print $key . " -> " .  $value . "<br>\n";
  }
  echo "<br>\n";
  $Util = new JavaClass("php.java.bridge.Util");
  echo "JavaBridge backend version: {$Util->VERSION}<br>\n";
  echo "<br>\n";

 } else {
  
  phpinfo();
  print "\n\n";
a18 2
  /* java_get_server_name() == null means that the backend is not
   running */
d20 1
a20 2
  $ext_name="java.so";
  if(PHP_SHLIB_SUFFIX != "so") $ext_name="php_java.dll";
d22 17
a38 17
  echo "Error: The PHP/Java Bridge backend is not running.\n";
  echo "\n";
  echo "Please start it and/or check if the directory\n";
  echo "\n\t".ini_get("extension_dir")."\n\n";
  echo "contains \"$ext_name\" and \"JavaBridge.jar\".\n";
  echo "\n";
  echo " Check if the following values are correct:\n\n";
  echo "\tjava.java_home = ".ini_get("java.java_home")."\n";
  echo "\tjava.java = ".ini_get("java.java")."\n\n";
  echo "If you want to start the backend automatically, disable:\n\n";
  echo "\tjava.socketname = ".ini_get("java.socketname")."\n";
  echo "\tjava.hosts = ".ini_get("java.hosts")."\n";
  echo "\tjava.servlet = ".ini_get("java.servlet")."\n";
  echo "\n";
  echo "If that still doesn't work, please check the \"java command\" above and\n";
  echo "report this problem to:\n\n";
  echo "\tphp-java-bridge-users@@lists.sourceforge.net.\n";
a39 1
 }
@


1.1
log
@*** empty log message ***
@
text
@d37 3
@

