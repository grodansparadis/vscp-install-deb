head	1.10;
access;
symbols
	Release-3-1-8:1.9.0.6
	Release-3-0-8_root:1.9
	Release-3-0-8_Root:1.9
	Release-3-0-8:1.9.0.2
	Release-2-0-8:1.9.0.4
	Release-2-0-7_Root:1.8
	Release-2-0-7:1.8.0.2
	Release-2-0-6-branch:1.6.0.2
	Version-1:1.4.0.6
	Version-2:1.4.0.4
	Release-2:1.4.0.2;
locks; strict;
comment	@# @;


1.10
date	2006.12.09.09.37.26;	author jost2345;	state dead;
branches;
next	1.9;

1.9
date	2005.09.13.16.46.47;	author jost2345;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.03.20.13.31;	author jost2345;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.01.17.39.05;	author jost2345;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.16.17.50.38;	author jost2345;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.07.19.36.51;	author jost2345;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.05.11.26.30;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.03.16.56.07;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.31.16.18.46;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.28.16.32.52;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Release-3-2-1
@
text
@#################################
# php-java-bridge.te
# SELinux rules for the javabridge_t domain
#
# javabridge_exec_t is the type of the javabridge 
# executable "RunJavaBridge", see php-java-bridge.fc

daemon_domain(javabridge, `, nscd_client_domain');
# log_domain(javabridge);
tmp_domain(javabridge);

# -- base file read access ---------
# We can't use the base_file_read_access macro on FC3.
# The following is a copy of the FC4 macro:

# Read /.
allow javabridge_t root_t:dir r_dir_perms;
allow javabridge_t root_t:notdevfile_class_set r_file_perms;

# Read /usr.
allow javabridge_t usr_t:dir r_dir_perms;
allow javabridge_t usr_t:notdevfile_class_set r_file_perms;

# Read bin and sbin directories.
allow javabridge_t bin_t:dir r_dir_perms;
allow javabridge_t bin_t:notdevfile_class_set r_file_perms;
allow javabridge_t sbin_t:dir r_dir_perms;
allow javabridge_t sbin_t:notdevfile_class_set r_file_perms;
read_sysctl(javabridge_t)
# --- end base file read access ---

can_exec_any(javabridge_t)

general_domain_access(javabridge_t)
general_proc_read_access(javabridge_t)

# we currently have no log directory
allow javabridge_t var_log_t:dir { add_name write search };
allow javabridge_t var_log_t:file { create append write };

# Connect from httpd.
can_unix_connect(httpd_t, javabridge_t)

# Read locale data
read_locale(javabridge_t)

# Access random device
allow javabridge_t { urandom_device_t random_device_t }:chr_file r_file_perms;

# Read /etc
allow javabridge_t etc_runtime_t:{ file lnk_file } r_file_perms;


# Insane settings needed for sun java 1.5.  Comment this out, if you
# can.
allow javabridge_t javabridge_tmp_t:file { execute };
allow javabridge_t usr_t:file { execute };
allow javabridge_t locale_t:file { execute };
allow javabridge_t random_device_t:chr_file { append };
@


1.9
log
@2.0.8RC3 fixes PR1283154 and 1286139 and 1288025 (partially).
@
text
@@


1.8
log
@Release-2.0.7pre
@
text
@d38 2
a39 2
allow javabridge_t var_log_t:dir search;
allow javabridge_t var_log_t:file { append write };
@


1.7
log
@Release-2.0.7(pre)
@
text
@d8 1
a8 1
daemon_domain(javabridge);
d12 20
a31 1
base_file_read_access(javabridge_t)
d41 1
d43 17
a59 1
# can_unix_connect(unconfined_t, javabridge_t)
@


1.6
log
@Release-2.0.6 branch
@
text
@d12 2
a13 5
# connect for users and httpd
allow httpd_t javabridge_exec_t:file { getattr };
allow httpd_t javabridge_t:unix_stream_socket { connectto };
#allow user_t javabridge_t:unix_stream_socket { connectto };
allow unconfined_t javabridge_t:unix_stream_socket { connectto };
d15 2
a16 2
# FIXME: temp solution until the new load balancing code is in place
dontaudit httpd_t unconfined_t:sem { associate getattr unix_read unix_write };
d18 2
a19 7

# starting the bridge
allow javabridge_t bin_t:dir { search };
allow javabridge_t bin_t:file { execute execute_no_trans read };
allow javabridge_t javabridge_exec_t:file { execute_no_trans };
allow javabridge_t javabridge_t:file { getattr read };
allow javabridge_t javabridge_t:unix_stream_socket { accept bind connect create getattr getopt listen read setopt write };
a20 22
allow javabridge_t var_log_t:dir { search };

# java needs these for proc/self, /etc/java.
allow javabridge_t proc_t:file { getattr read };
allow javabridge_t etc_runtime_t:file { getattr read };
allow javabridge_t etc_t:file { getattr read };
allow javabridge_t javabridge_t:process { getsched };
allow javabridge_t ld_so_cache_t:file { execute };
allow javabridge_t locale_t:file { execute };
allow javabridge_t random_device_t:chr_file { getattr read append };
allow javabridge_t urandom_device_t:chr_file { getattr read };
# disallow TCP sockets
dontaudit javabridge_t javabridge_t:tcp_socket { create };



# lib/i386/client/classes.jsa
allow javabridge_t lib_t:file { execute getattr read };

# /usr/share/java, /usr/lib/rt.jar, ...
allow javabridge_t usr_t:file { execute getattr read };

d22 2
a23 3
# Sun JDK 1.5 creates /tmp/hsperfdata/data and executes it.
# Ugly ...
allow javabridge_t javabridge_tmp_t:file { execute };
@


1.5
log
@Release-2.0.1
@
text
@d18 4
@


1.4
log
@*** empty log message ***
@
text
@d34 6
@


1.3
log
@Release-1.0.8
@
text
@d32 2
@


1.2
log
@Release-1.0.8
@
text
@d15 2
a16 1
allow user_t javabridge_t:unix_stream_socket { connectto };
d25 1
d31 8
@


1.1
log
@Release-1.0.8
@
text
@d9 1
a9 1
log_domain(javabridge);
d12 6
d20 1
a20 6

allow javabridge_t { etc_t etc_runtime_t }:file { getattr read };

allow javabridge_t { initrc_tmp_t tmp_t }:dir { add_name getattr read remove_name search write };
allow javabridge_t { initrc_tmp_t tmp_t }:file { create execute read unlink write };

d22 2
d25 1
a25 4
allow javabridge_t javabridge_t:unix_stream_socket { accept getattr getopt bind connect create listen setopt read write };

# FIXME
allow javabridge_t ld_so_cache_t:file { execute };
d27 2
d30 3
a32 5
# FIXME allow httpd/php
allow user_t javabridge_t:unix_stream_socket { connectto };

# FIXME
# allow javabridge_t policy_src_t:dir { search };
@

