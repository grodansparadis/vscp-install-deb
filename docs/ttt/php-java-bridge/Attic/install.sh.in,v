head	1.14;
access;
symbols
	Release-5-5-4-1:1.12.0.24
	Root_Release-5-5-4-1:1.12
	Release-5-5-4:1.12.0.22
	Root_Release-5-5-4:1.12
	Release-5-5-3:1.12.0.20
	ROOT_Release-5-5-3:1.12
	Release-5-5-2:1.12.0.18
	Root_Release-5-5-2:1.12
	debian_version_5_5_1-1:1.12
	Release-5-5-1:1.12.0.14
	upstream_version_5_5_1:1.12
	ROOT_Release-5-5-1:1.12
	debian_version_5_5-1:1.12
	upstream_version_5_5:1.12
	ROOT_Release-5-5:1.12
	Release-5-5:1.12.0.16
	debian_version_5_4_4_2-3:1.12
	Release-5-4-4-2-1:1.12.0.10
	debian_version_5_4_4_2-2:1.12
	debian_version_5_4_4_2-1:1.12
	upstream_version_5_4_4_2:1.12
	debian_version_5_4_4_1-1:1.12
	upstream_version_5_4_4_1:1.12
	debian_version_5_4_4-1:1.12
	upstream_version_5_4_4:1.12
	Release-5-4-4:1.12.0.12
	Root_Release-5-4-4:1.12
	debian_version_5_4_3_2-1:1.12
	upstream_version_5_4_3_2:1.12
	Release_5-4-3-2:1.12.0.8
	Root_Release_5-4-3-2:1.12
	upstream_version_5_4_3_1:1.12
	debian_version_5_4_3_1-1:1.12
	Release-5-4-3:1.12.0.6
	Root_Release-5-4-3:1.12
	Root_Release-5-4-1:1.12
	Release-5-4-1:1.12.0.4
	Root_Release-5-4:1.12
	Release-5-4:1.12.0.2
	upstream_version_5_3_4:1.11
	debian_version_5_3_4-1:1.11
	ROOT_Release-5-3-4:1.11
	Release-5-3-4:1.11.0.14
	ROOT_Release-5-3-3:1.11
	Release-5-3-3:1.11.0.10
	debian_version_5_3_2_1_2-1:1.11
	upstream_version_5_3_2_1_2:1.11
	debian_version_5_3_2_1_1-1:1.11
	debian_version_5_3_2_1_1:1.11
	upstream_version_5_3_2_1_1:1.11
	Root_Release-5-3-2-1:1.11
	Release-5-3-2-1:1.11
	ROOT_RELEASE-5-3-2-1:1.11
	RELEASE-5-3-2-1:1.11.0.12
	Release-5-3-2:1.11.0.8
	Root_Release-5-3-2:1.11
	Root_Release-5-3-1:1.11
	Release-5-3-1:1.11.0.6
	Release-5-2-3-1:1.11.0.4
	Root_Release-5-2-3-1:1.11
	Release-5-2-2-4:1.11.0.2
	Root_Release-5-2-2-4:1.11
	Release-5-2-2-1:1.10.0.6
	Root_Release-5-2-2-1:1.10
	upstream_version_5_2_2:1.10
	debian_version_5_2_2-1:1.10
	Release-5-2-2:1.10.0.4
	ROOT_Release-5-2-2:1.10
	ROOT_Release-5-2-1:1.10
	Release-5-2-1:1.10.0.2
	Release-5-2-0:1.9.0.18
	ROOT_Release-5-2-0:1.9
	ROOT_Release-5-1-2:1.9
	Release-5-1-2:1.9.0.16
	Version-5-1-1:1.9.0.14
	ROOT_Version-5-1-1:1.9
	debian_version_5_1_0-1:1.9
	upstream_version_5_1_0:1.9
	ROOT_Release-5-1-0:1.9
	Release-5-1-0:1.9.0.12
	ROOT_Release-5-0-0:1.9
	Release-5-0-0:1.9.0.10
	Release-4-3-3:1.9.0.8
	ROOT_Release-4-3-3:1.9
	upstream_version_4_3_2:1.9
	debian_version_4_3_2-1:1.9
	ROOT_Release-4-3-2:1.9
	Release-4-3-2:1.9.0.6
	Release-4-3-1:1.9.0.4
	ROOT_Release-4-3-1:1.9
	debian_version_4_3_0-1:1.9
	upstream_version_4_3_0:1.9
	ROOT_Release-4-3-0:1.9
	Release-4-3-0:1.9.0.2
	debian_version_3_2_1b-2:1.7
	debian_version_4_2_2-1:1.8
	upstream_version_4_2_2:1.8
	debian_version_3_2_1b-1:1.7
	upstream_version_3_2_1b:1.7
	Release-4-1-2:1.8.0.2
	Release-4-0-8:1.7.0.8
	debian_version_4_0_8a-1:1.7
	upstream_version_4_0_8a:1.7
	jostb-debian-ubuntu-patch:1.7.0.6
	debian_version_4_0_8-1:1.7
	upstream_version_4_0_8:1.7
	debian_version_4_0_7-1:1.7
	upstream_version_4_0_7:1.7
	debian_version_4_0_6-1:1.7
	upstream_version_4_0_6:1.7
	debian_version_4_0_2-1:1.7
	upstream_version_4_0_2:1.7
	Release-4-0-2_Root:1.7
	Release-4-0-2:1.7.0.4
	upstream_version_4_0_1:1.7
	debian_version_4_0_1-2:1.7
	Release-3-2-1:1.7.0.2
	Release-3-1-8:1.6.0.2;
locks; strict;
comment	@# @;


1.14
date	2010.02.18.17.25.32;	author jost_boekemeier;	state dead;
branches;
next	1.13;

1.13
date	2010.01.25.16.45.14;	author jost_boekemeier;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.11.21.05.45;	author jost_boekemeier;	state Exp;
branches;
next	1.11;

1.11
date	2008.09.24.22.24.40;	author jost2345;	state Exp;
branches;
next	1.10;

1.10
date	2008.03.22.12.04.54;	author jost_boekemeier;	state Exp;
branches;
next	1.9;

1.9
date	2007.09.30.16.07.52;	author jost_boekemeier;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.13.19.51.47;	author jost_boekemeier;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.25.17.00.31;	author jost2345;	state Exp;
branches;
next	1.6;

1.6
date	2006.09.10.17.31.11;	author jost2345;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.27.14.40.11;	author jost2345;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.08.17.20.45;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.16.20.29.25;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.21.19.53.09;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.19.20.43.08;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Release-6-0-0
@
text
@#!/bin/sh
# Installation script for the PHP/Java Bridge module and its back-ends.

#set -x
v=""
if test "X$1" = "X--verbose" || test "X$1" = "X-v" ; then
v="-v"
fi

if ! test -d modules; then
  echo "Nothing to install. Do a phpize && configure && make first, bye."
  exit 10
fi

php=`php-config --php-binary`
if test $? != 0; then php="`which php`"; fi
if test $? != 0; then php="`which php-cgi`"; fi
if test $? != 0; then 
 for i in /usr/bin/php /usr/bin/php-cgi /usr/local/bin/php /usr/local/bin/php-cgi; do
  if test -f $i; then php=$i; break; fi
 done
fi

if test X$php = X; then echo "php not installed, bye."; exit 3; fi

echo '<?php phpinfo();?>' | ${php} >/tmp/phpinfo.$$
ini=`fgrep "Scan this dir for additional" /tmp/phpinfo.$$ | head -1 |
sed 's/<[TtRr][/a-z ="0-9]*>/ => /g' | 
sed 's/<[/a-z ="0-9]*>//g' | 
sed 's/^.*=> //' | sed 's/ *$//; s/^ *//'`
ext=`fgrep extension_dir /tmp/phpinfo.$$ | head -1 |
sed 's/<[TtRr][/a-z ="0-9]*>/ => /g' | 
sed 's/<[/a-z ="0-9]*>//g' | 
sed 's/^.*=> //' | sed 's/ *$//; s/^ *//'`
phpini=`fgrep "Configuration File (php.ini) Path" /tmp/phpinfo.$$ | head -1 |
sed 's/<[TtRr][/a-z ="0-9]*>/ => /g' | 
sed 's/<[/a-z ="0-9]*>//g' | 
sed 's/^.*=> //' | sed 's/ *$//; s/^ *//'`
phpinc=`fgrep "include_path" /tmp/phpinfo.$$ | head -1 |
sed 's/<[TtRr][/a-z ="0-9]*>/ => /g' | 
sed 's/<[/a-z ="0-9]*>//g' | 
sed 's/^.*=> //' | sed 's/ *$//; s/^ *//' |
LANG=C awk '{for(i=1; i<=(split($0, ar, "[;:]")); i++) if(substr(ar[i], 1) != "." && substr(ar[i], 1) != "..") print ar[i] }' |
head -1`

have_include_path=yes
if test X$phpinc = X; then
echo ""
echo "This php installation does not have a proper include_path,"
echo "will use /usr/share/pear instead."
phpinc="/usr/share/pear"
have_include_path=
fi

/bin/rm -f /tmp/phpinfo.$$
if test -d $phpini; then phpini="${phpini}/php.ini"; fi

# install generic ini
make install >install.log || exit 1
mod_dir=`/bin/cat install.log | sed -n '/Installing shared extensions:/s///p' | awk '{print $1}'`
if test X$v != X; then echo "installed in $mod_dir"; fi

overwrite="no"
if test X$ini = X; then
echo ""
echo "This php installation does not have a config-file-scan-dir,"
echo "java.ini not installed,"
echo "will use file $phpini instead."
if test -f ${phpini}; then
   echo -n "Overwrite existing php.ini file (yes/no): "; read overwrite;
else
   overwrite="yes"
fi
fi

if test -d "$ext"; then 
if test X$v != X; then echo "Using extension_dir: $ext"; fi
else
echo ""
echo "Warning: Your php installation is broken, the \"extension_dir\" does "
echo "not exist or is not a directory (see php.ini extension_dir setting)."
echo "Please correct this, for example type:"
echo "mkdir \"$ext\""
echo ""
fi

/bin/rm -f $ini 2>/dev/null
if test X$ini != X; then
 /bin/mkdir -p $ini
 /bin/cp $v java.ini $ini
 if test X$have_include_path=X; then
    echo "include_path=${phpinc}:." >>"$phpini"
 fi
else
  if test X$overwrite = "Xyes"; then
    if test -f $phpini; then
      /bin/rm $v -f "${phpini}.backup"
      /bin/mv $v "$phpini" "${phpini}.backup"
    fi
    echo "include_path=${phpinc}:." >"$phpini"
    /bin/cat java.ini >>"$phpini"
  fi
fi
mkdir -p $phpinc 2>/dev/null
cp $v -R server/META-INF/java $phpinc

if test @@COND_GCJ@@ = 1; then
jre=modules/java
else
jre=@@PHP_JAVA_BIN@@
sdk_home=@@PHP_JAVA_SDK@@
 if ! $jre -classpath modules/JavaBridge.jar php.java.bridge.JavaBridge --version >/dev/null; then
    echo "Default JRE: $jre is not usuable."
    echo "You have configured against ${sdk_home} but the installed JRE is:"
    echo ""
    echo "  `$jre -version|head -5`"
    echo ""
    echo "Please configure as follows:"
    echo "  ./configure --with-java=$sdk_home,$sdk_home"
    echo "to avoid this warning -- the jre version must be >= the jdk version.";
    echo "Ignoring $jre and using ${sdk_home}/bin/java instead."
    jre=${sdk_home}/bin/java
    echo "Please either use the above ./configure command or add" 
    echo "  java.java=$jre"
    echo "to your php .ini file."
 fi
fi

# devel
/bin/rm $v -f /usr/share/java/JavaBridge.jar /usr/share/java/script-api.jar /usr/share/java/php-script.jar /usr/java/packages/lib/ext/JavaBridge.jar /usr/java/packages/lib/ext/php-script.jar
if test -f modules/php-script.jar; then
    echo ""
    echo "Do you want to install the development files for jdk1.6?";
    echo -n "install development files (yes/no): "; read devel;
    if test "X$devel" != "Xno"; then
	/bin/mkdir -p /usr/share/java 2>/dev/null

	/bin/cp $v modules/JavaBridge.jar \
	      modules/php-script.jar \
	      modules/script-api.jar /usr/share/java
        chmod +x /usr/share/java/JavaBridge.jar

	/bin/mkdir -p /usr/java/packages/lib/ext 2>/dev/null

	/bin/rm -f /usr/java/packages/lib/ext/JavaBridge.jar \
	      /usr/java/packages/lib/ext/php-script.jar 2>/dev/null

	/bin/ln $v -s /usr/share/java/JavaBridge.jar \
	         /usr/share/java/php-script.jar /usr/java/packages/lib/ext

	echo "Installed in /usr/share/java"
	echo ""
        echo "The development files have been installed on this computer."
	echo "Type (e.g.) /usr/java/jdk1.6.0/bin/jrunscript -l php-interactive"
	echo "to start an interactive php session."
	echo ""
      fi
fi

check_document_root() {
    document_root="/var/www/html";
    if ! test -d /var/www/html; then
	document_root="/usr/local/var/www/html";
	echo ""
	echo "Enter the location of HTTP server document root (e.g.: /usr/local/htdocs)";
	echo -n "document root ($document_root): "; read document_root;
	if test X$document_root = X; then document_root="/usr/local/var/www/html";fi
	echo ""
	if ! test -d $document_root; then echo "$document_root is not directory"; exit 5; fi
    fi
}

install_sel_module() {
 (
	cd security/module; 
	/usr/bin/make -f /usr/share/selinux/devel/Makefile 
	/usr/sbin/semodule -i php-java-bridge.pp
	/usr/bin/chcon -t bin_t $ext/java
	if test X$javabridgeservice != X; then /usr/bin/chcon -t initrc_exec_t $javabridgeservice; fi
 )
       (cd security/module; /usr/bin/make; /usr/sbin/semodule -i php-java-bridge-tomcat.pp) >/dev/null
}

j2ee=no
# j2ee/servlet
/bin/rm $v -f ${ini}/java-servlet.ini 2>/dev/null
if test -f /etc/selinux/config && test -f /usr/sbin/semodule; then 
    /usr/sbin/semodule -r javabridge 2>/dev/null
    /usr/sbin/semodule -r javabridge_tomcat 2>/dev/null
fi
if test -f modules/JavaBridge.war; then
    echo ""
    echo "Do you want to start the Servlet/J2EE back-end as a service?";
    echo "If unsure, say yes";
    echo -n "install j2ee back-end (yes/no): "; read j2ee;
    if test "X$j2ee" != "Xno"; then
      webapps="`locate /webapps | fgrep tomcat | grep 'webapps$' | head -1`"
      echo ""
      echo "Enter the location of the autodeploy folder (e.g.: /opt/tomcat/webapps):";
      echo -n "autodeploy ($webapps): "; read webapps2;
      if test X$webapps2 != X; then webapps=$webapps2; fi
      /bin/rm $v -rf ${webapps}/JavaBridge.war ${webapps}/JavaBridge
      /bin/cp $v modules/JavaBridge.war $webapps;
      echo "Installed in $webapps.";
      check_document_root || exit 5
      if test -d ${document_root} && ! test -e ${document_root}/JavaBridge; then
        ln -s $webapps/JavaBridge ${document_root}/;
        echo "Installed in ${document_root}. "
      fi
      if test X$ini != X; then  
	  /bin/cp $v java.ini $ini; 
      else
	  if test X$overwrite = "Xyes"; then
	      /bin/cat java.ini >>"$phpini"; 
	  fi
      fi
      if test -f /etc/selinux/config && test -f /usr/sbin/semodule; then 
        if test X$v = X; then
            install_sel_module >/dev/null
	else
            install_sel_module;
	fi
      fi
      echo ""
      echo "The J2EE back-end has been desployed into the J2EE server. Now start the J2EE"
      echo "server and the web server, for example with the commands (Linux):"
      echo ""
      echo "    service tomcat5 restart"
      echo "    service httpd restart"
      echo ""
      echo " or (Unix):"
      echo ""
      echo "    JAVA_HOME=$sdk_home `dirname $webapps`/bin/catalina.sh stop"
      echo "    JAVA_HOME=$sdk_home `dirname $webapps`/bin/catalina.sh start"
      echo "    apachectl restart"
      echo ""
     
      echo "Browse to http://localhost:<PORT>/JavaBridge to see the test page from the"
      echo "J2EE server. PORT is 8080 for tomcat, 9080 for WebSphere and 8888 for Oracle."
      echo "Browse to http://localhost/JavaBridge to see the test page from the web server."
      echo ""
    fi
else
    install_sel_module;
fi

echo "PHP/Java Bridge installed."
if test -d /etc/selinux; then
if /usr/sbin/selinuxenabled; then
  if test -f /etc/selinux/config && test -f /usr/sbin/semodule; then
    echo "SEL Security: \"javabridge\" policy module installed."
  fi
else
  echo "You are running a SELinx system. Please install the policy sources"
  echo "or install the files from the RPM distribution download."
  echo "Please see the README document for details".
fi
fi

echo ""
echo "Now type \"${php} test.php\" to check the installation."
echo ""

exit 0
@


1.13
log
@Release-5-5-5
@
text
@@


1.12
log
@java autostart removed
@
text
@a177 1
	/usr/bin/chcon -t javabridge_exec_t $ext/RunJavaBridge
@


1.11
log
@*** empty log message ***
@
text
@d67 1
a67 1
echo "java.ini and java-servlet.ini not installed,"
d182 1
d195 1
a195 2
    echo "Say no, if you want to start the service automatically with Apache."
    echo "If unsure, say no";
d212 1
a212 1
	  /bin/cp $v java-servlet.ini $ini; 
d215 1
a215 1
	      /bin/cat java-servlet.ini >>"$phpini"; 
a220 1
	    (cd security/module; /usr/bin/make; /usr/sbin/semodule -i php-java-bridge-tomcat.pp) >/dev/null
a222 1
	    (cd security/module; /usr/bin/make; /usr/sbin/semodule -i php-java-bridge-tomcat.pp) 
@


1.10
log
@Release-5-2-1
@
text
@d50 2
a51 2
echo "will use /usr/share/java instead."
phpinc="/usr/share/java"
d100 1
a100 1
    echo "include_path=/usr/share/pear:." >"$phpini"
d104 1
@


1.9
log
@Release-4-3-0
@
text
@d45 10
d91 3
d104 1
d175 1
a175 1
	/usr/bin/make; 
@


1.8
log
@Release-4-1-0
@
text
@a144 12
# convert Java -> PHP
if test X$phpinc = X; then phpinc="/usr/share/pear"; fi
echo "";
echo "Generate PHP classes from standard Java classes and install them in"
echo "the ${phpinc} directory?"
echo -n "convert java libraries (yes/no): "; read convert;
if ! test "X$convert" = "Xno"; then
$jre -Djava.library.path=./modules -Djava.class.path=./modules/JavaBridge.jar -Djava.awt.headless=true -Dphp.java.bridge.base=./modules php.java.bridge.JavaBridge --convert ${phpinc} unsupported/lucene.jar:unsupported/itext.jar
/bin/cp server/META-INF/java/*.inc ${phpinc}/java
echo ""
fi

@


1.7
log
@Release-3-2-1
@
text
@d153 1
a153 1
/bin/cp java/*.php ${phpinc}/java
@


1.6
log
@Release-3-1-8
@
text
@d126 1
@


1.5
log
@Release-3-1-8rc
@
text
@d46 1
d61 2
d83 4
a86 2
    /bin/rm $v -f "${phpini}.backup"
    /bin/mv $v "$phpini" "${phpini}.backup"
@


1.4
log
@Release-3-1-7
@
text
@d82 2
a83 1
    /bin/cat java.ini >"$phpini"
d147 1
@


1.3
log
@Release-3-1-6
@
text
@d56 1
a56 1
echo "java.ini, java-standalone.ini and java-servlet.ini not installed,"
d145 1
a145 1
$jre -Djava.library.path=./modules -Djava.class.path=./modules/JavaBridge.jar -Djava.awt.headless=true -Dphp.java.bridge.base=./modules php.java.bridge.JavaBridge --convert ${phpinc} unsupported/lucene.jar
d162 11
d176 4
a182 3
    echo "This is the fastest and easiest service, only RedHat Enterprise"
    echo "or Fedora Linux users should say no here."
    echo "Say no, if you want to enable Security Enhanced Linux."
d209 1
d212 1
a234 93
fi


# standalone
/bin/rm $v -f ${ini}/java-standalone.ini 2>/dev/null
for i in /etc/init.d /etc/rc.d/init.d /etc/rc.d; do
    if test -f ${i}/php-java-bridge; then
	/bin/rm $v -f ${i}/php-java-bridge
	break;
    fi
done
install_sel_module() {
 (
	cd security/module; 
	/usr/bin/make; 
	/usr/sbin/semodule -i php-java-bridge.pp
	/usr/bin/chcon -t javabridge_exec_t $ext/RunJavaBridge
	/usr/bin/chcon -t sbin_t /usr/sbin/php-java-bridge
	if test X$javabridgeservice != X; then /usr/bin/chcon -t initrc_exec_t $javabridgeservice; fi
 )
}
if test -f modules/JavaBridge.jar && test "X$j2ee" = "Xno"; then
    echo ""
    echo "Do you want to start the standalone back-end from a service script?"
    echo "Non- RedHat Enterprise or Fedora Linux users probably want to say no here.";
    echo "Say no, if you want to start the service automatically with Apache."
    echo "Say no, if this operating system doesn't support SysV service scripts."
    echo "Say yes, if you want to enable Security Enhanced Linux."
    echo "If unsure, say no";
    echo -n "install service script (yes/no): "; read standalone;
    if test "X$standalone" = "Xyes"; then
	/bin/cp $v php-java-bridge /usr/sbin
	/bin/chmod +x /usr/sbin/php-java-bridge
	if test X$v != X; then echo "Installed /usr/sbin/php-java-bridge"; fi
	for i in /etc/init.d /etc/rc.d/init.d /etc/rc.d; do
	if test -d $i; then
	    /bin/cp $v php-java-bridge.service ${i}/php-java-bridge
	    /bin/chmod +x ${i}/php-java-bridge
	    javabridgeservice=${i}/php-java-bridge # used in install_sel_module
	    if test X$v != X; then echo "Installed service ${i}/php-java-bridge"; fi
	    break;
	fi
	done
	/sbin/chkconfig --add php-java-bridge &&
	/sbin/chkconfig php-java-bridge on
        echo -n "run the back-end with limited rights (yes/no): "; read limited;
        if test "X$limited" = "Xyes"; then
          echo -n "run the back-end as user (default: apache): "; read user;
	  if test X$user = X; then user="apache"; fi
          echo -n "run the back-end as group (default: apache): "; read group;
	  if test X$group = X; then group=$user; fi
          (/bin/chown $user:$group $ext/RunJavaBridge &&
           /bin/chmod 6111 $ext/RunJavaBridge) || /bin/rm -f $ext/RunJavaBridge
        else
	   /bin/chmod 111 $ext/RunJavaBridge || /bin/rm -f $ext/RunJavaBridge
        fi
	if test X$ini != X; then 
	    /bin/cat java-standalone.ini | sed 's|^;java\.java_home[\t =].*$|;java.java_home = |; s|^;java\.java[\t =].*$|java.java = '$jre'|' >${ini}/java-standalone.ini
	    if test X$v != X; then echo "Installed ${ini}/java-standalone.ini"; fi
	    
        else
           if test X$overwrite = "Xyes"; then
	       /bin/cat java-standalone.ini | sed 's|^;java\.java_home[\t =].*$|;java.java_home = |; s|^;java\.java[\t =].*$|java.java = '$jre'|' >"$phpini"
	   fi
	fi
	check_document_root || exit 5;
	if test -d ${document_root} && ! test -e ${document_root}/test.php; then
          /bin/cp $v test.php ${document_root}/test.php
	  if test X$v != X; then echo "Installed ${document_root}/test.php."; fi
	fi
        echo -n "start now? (yes/no): "; read restart;
	if test -f /etc/selinux/config && test -f /usr/sbin/semodule; then 
          if test X$v = X; then
	    install_sel_module >/dev/null
	  else
	    install_sel_module
	  fi
        fi
        if test "X${restart}" != "Xno"; then
            /sbin/service php-java-bridge restart
            /sbin/service httpd restart
        fi
	echo ""
	echo "The php-java-bridge service has been installed. It can be started with:"
	echo ""
	echo "    service php-java-bridge restart"
	echo "    service httpd restart"
	echo ""
        echo "Browse to http://localhost/test.php to see the test page."
	echo ""
    else
	/bin/rm $v -f /usr/sbin/php-java-bridge $ext/RunJavaBridge
    fi
d236 1
a236 1
    /bin/rm $v -f /usr/sbin/php-java-bridge $ext/RunJavaBridge
@


1.2
log
@Release-3-1-2
@
text
@d275 1
a275 1
          /bin/rm -f $ext/RunJavaBridge
@


1.1
log
@Release-3-1-0
@
text
@d92 6
a97 1
    echo "Default JRE: $jre is not usuable, please configure as follows:"
d102 3
@

