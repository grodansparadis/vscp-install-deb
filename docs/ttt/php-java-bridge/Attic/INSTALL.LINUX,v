head	1.22;
access;
symbols
	Release-5-5-4-1:1.21.0.24
	Root_Release-5-5-4-1:1.21
	Release-5-5-4:1.21.0.22
	Root_Release-5-5-4:1.21
	Release-5-5-3:1.21.0.20
	ROOT_Release-5-5-3:1.21
	Release-5-5-2:1.21.0.18
	Root_Release-5-5-2:1.21
	debian_version_5_5_1-1:1.21
	Release-5-5-1:1.21.0.14
	upstream_version_5_5_1:1.21
	ROOT_Release-5-5-1:1.21
	debian_version_5_5-1:1.21
	upstream_version_5_5:1.21
	ROOT_Release-5-5:1.21
	Release-5-5:1.21.0.16
	debian_version_5_4_4_2-3:1.21
	Release-5-4-4-2-1:1.21.0.10
	debian_version_5_4_4_2-2:1.21
	debian_version_5_4_4_2-1:1.21
	upstream_version_5_4_4_2:1.21
	debian_version_5_4_4_1-1:1.21
	upstream_version_5_4_4_1:1.21
	debian_version_5_4_4-1:1.21
	upstream_version_5_4_4:1.21
	Release-5-4-4:1.21.0.12
	Root_Release-5-4-4:1.21
	debian_version_5_4_3_2-1:1.21
	upstream_version_5_4_3_2:1.21
	Release_5-4-3-2:1.21.0.8
	Root_Release_5-4-3-2:1.21
	upstream_version_5_4_3_1:1.21
	debian_version_5_4_3_1-1:1.21
	Release-5-4-3:1.21.0.6
	Root_Release-5-4-3:1.21
	Root_Release-5-4-1:1.21
	Release-5-4-1:1.21.0.4
	Root_Release-5-4:1.21
	Release-5-4:1.21.0.2
	upstream_version_5_3_4:1.20
	debian_version_5_3_4-1:1.20
	ROOT_Release-5-3-4:1.20
	Release-5-3-4:1.20.0.14
	ROOT_Release-5-3-3:1.20
	Release-5-3-3:1.20.0.10
	debian_version_5_3_2_1_2-1:1.20
	upstream_version_5_3_2_1_2:1.20
	debian_version_5_3_2_1_1-1:1.20
	debian_version_5_3_2_1_1:1.20
	upstream_version_5_3_2_1_1:1.20
	Root_Release-5-3-2-1:1.20
	Release-5-3-2-1:1.20
	ROOT_RELEASE-5-3-2-1:1.20
	RELEASE-5-3-2-1:1.20.0.12
	Release-5-3-2:1.20.0.8
	Root_Release-5-3-2:1.20
	Root_Release-5-3-1:1.20
	Release-5-3-1:1.20.0.6
	Release-5-2-3-1:1.20.0.4
	Root_Release-5-2-3-1:1.20
	Release-5-2-2-4:1.20.0.2
	Root_Release-5-2-2-4:1.20
	Release-5-2-2-1:1.19.0.2
	Root_Release-5-2-2-1:1.19
	upstream_version_5_2_2:1.18
	debian_version_5_2_2-1:1.18
	Release-5-2-2:1.18.0.6
	ROOT_Release-5-2-2:1.18
	ROOT_Release-5-2-1:1.18
	Release-5-2-1:1.18.0.4
	Release-5-2-0:1.18.0.2
	ROOT_Release-5-2-0:1.18
	ROOT_Release-5-1-2:1.16
	Release-5-1-2:1.16.0.4
	Version-5-1-1:1.16.0.2
	ROOT_Version-5-1-1:1.16
	debian_version_5_1_0-1:1.15
	upstream_version_5_1_0:1.15
	ROOT_Release-5-1-0:1.15
	Release-5-1-0:1.15.0.6
	ROOT_Release-5-0-0:1.15
	Release-5-0-0:1.15.0.4
	Release-4-3-3:1.15.0.2
	ROOT_Release-4-3-3:1.15
	upstream_version_4_3_2:1.14
	debian_version_4_3_2-1:1.14
	ROOT_Release-4-3-2:1.14
	Release-4-3-2:1.14.0.12
	Release-4-3-1:1.14.0.10
	ROOT_Release-4-3-1:1.14
	debian_version_4_3_0-1:1.14
	upstream_version_4_3_0:1.14
	ROOT_Release-4-3-0:1.14
	Release-4-3-0:1.14.0.8
	debian_version_3_2_1b-2:1.12
	debian_version_4_2_2-1:1.14
	upstream_version_4_2_2:1.14
	debian_version_3_2_1b-1:1.12
	upstream_version_3_2_1b:1.12
	Release-4-1-2:1.14.0.6
	Release-4-0-8:1.14.0.4
	debian_version_4_0_8a-1:1.14
	upstream_version_4_0_8a:1.14
	jostb-debian-ubuntu-patch:1.14.0.2
	debian_version_4_0_8-1:1.14
	upstream_version_4_0_8:1.14
	debian_version_4_0_7-1:1.14
	upstream_version_4_0_7:1.14
	debian_version_4_0_6-1:1.14
	upstream_version_4_0_6:1.13
	debian_version_4_0_2-1:1.13
	upstream_version_4_0_2:1.13
	Release-4-0-2_Root:1.13
	Release-4-0-2:1.13.0.2
	upstream_version_4_0_1:1.13
	debian_version_4_0_1-2:1.13
	Release-3-2-1:1.12.0.2
	Release-3-1-8:1.11.0.2
	Release-3-0-8_root:1.4.2.1
	Release-3-0-8_Root:1.6
	Release-3-0-8:1.4.0.2;
locks; strict;
comment	@# @;


1.22
date	2010.02.18.17.25.32;	author jost_boekemeier;	state dead;
branches;
next	1.21;

1.21
date	2008.12.11.21.05.45;	author jost_boekemeier;	state Exp;
branches;
next	1.20;

1.20
date	2008.09.24.22.24.40;	author jost2345;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.20.15.00.57;	author jost_boekemeier;	state Exp;
branches;
next	1.18;

1.18
date	2008.02.14.13.43.03;	author andremachado;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.10.15.38.20;	author jost_boekemeier;	state Exp;
branches;
next	1.16;

1.16
date	2008.02.04.19.32.53;	author jost_boekemeier;	state Exp;
branches;
next	1.15;

1.15
date	2007.12.28.13.56.41;	author jost_boekemeier;	state Exp;
branches;
next	1.14;

1.14
date	2007.03.26.17.15.36;	author andremachado;	state Exp;
branches;
next	1.13;

1.13
date	2007.03.09.20.28.06;	author andremachado;	state Exp;
branches;
next	1.12;

1.12
date	2006.12.09.09.35.01;	author jost2345;	state Exp;
branches;
next	1.11;

1.11
date	2006.09.05.20.40.32;	author jost2345;	state Exp;
branches;
next	1.10;

1.10
date	2006.08.08.17.20.45;	author jost2345;	state Exp;
branches;
next	1.9;

1.9
date	2006.07.16.20.29.25;	author jost2345;	state Exp;
branches;
next	1.8;

1.8
date	2006.07.02.20.28.42;	author jost2345;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.19.20.37.14;	author jost2345;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.30.17.01.55;	author jost2345;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.12.17.46.45;	author jost2345;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.07.18.59.27;	author jost2345;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.02.03.17.41.36;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.09.00.01.08;	author jost2345;	state dead;
branches;
next	1.1;

1.1
date	2005.12.08.18.46.02;	author jost2345;	state Exp;
branches;
next	;

1.4.2.1
date	2006.04.23.19.09.08;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Release-6-0-0
@
text
@Overview
--------

This document describes how to install the PHP/Java Bridge Linux
packages. 


Installation on RedHat, Fedora, CentOS ...
------------------------------------------

* Download and install the PHP/Java Bridge.

    rpm -i php-java-bridge-x.y.z-1-i386.rpm


* Restart the Tomcat back end and the HTTP server.


* To rebuild the RPM files, download the php-java-bridge*.tar.gz
  archive and type (as root):

    rpmbuild -tb php-java-bridge*.tar.gz


Installation on Debian, Ubuntu, ...
-----------------------------------

* Debian 3.1 Sarge based Linux distributions currently (Feb 2007) don't 
  support Security Enhanced Linux. 
  A compiled, native back end is not available; the
  Debian port of the PHP/Java Bridge needs Java and a servlet container
  to start a Java VM.

* As of Debian GNU / Linux 4.0 Etch and newer versions, SE Linux is 
  supported and deactivated by default.
  See http://wiki.debian.org/SELinux
  The pre-compiled php-java-bridge Debian package uses the libraries.

* As of Ubuntu Breezy updated (february 2007) SE Linux should be available.
  See https://wiki.ubuntu.com/SELinux

* The php-java-bridge_x.y.z-1_i386.deb Debian package installs as
  modules, places the .war file at the tomcat5 deploy dir, places many
  code examples at the docs directory and was created for Debian Etch
  4.0, with tomcat5, sun-java5, php 5.2.x. It can be installed with e.g.:

    dpkg -i php-java-bridge_x.y.z-w_i386.deb    

* To rebuild the Debian package in your specific version / distribution:
  The Debian GNU / Linux package was compiled in a pure Debian Etch 4.0 machine.
  It *may* work on Ubuntu or other Debian derivatives or versions,
  but it is highly recommended to recompile from source deb
  package files at these distributions.

  For package compilation from source deb package files, presuming you have
  Debian development toolchain already installed:
  1- create a ~/compilation directory
  2- download the debian source package files into the directory.
  3- cd ~/compilation
  4- dpkg-source -x php-java-bridge_x.y.z-w.dsc
  5- cd php-java-bridge-x.y.z
  6- debuild --linda --lintian -rfakeroot -uc -us
  7- cd ~/compilation
  8- su -c "dpkg -i php-java-bridge_x.y.z-w_i386.deb"


Support
-------

* Please report bugs/problems to the mailing list:

    php-java-bridge-users@@lists.sourceforge.net

@


1.21
log
@java autostart removed
@
text
@@


1.20
log
@*** empty log message ***
@
text
@a3 3
The "java.so" file contained in the Linux binary packages starts a
Java VM as a sub process of the HTTP server.

d11 1
a11 7
* Check if the Java libraries you're interested in are available as
  native binaries. If not, you need to install Java and the J2EE
  component, see the INSTALL.J2EE or INSTALL.J2SE document and the 
  Security Enhanced Linux secion in the README.

* Download and install the PHP/Java Bridge base and the libraries. For
  example:
a13 2
    rpm -i lucene4php-x.y.z-1.i386.rpm
    rpm -i itext4php-x.y.z-1.i386.rpm
a14 1
* Each native library contains at least one PHP example in
d16 1
a16 1
    /usr/share/doc/<libname>/example.
@


1.19
log
@Release-5-2-2-1
@
text
@a3 1

d8 1
a8 8
packages. The Linux RPM files contain a compiled, native version of
the PHP/Java Bridge which doesn't need any Java installed on the
system. Furthermore the RPM files contain Security Enhanced Linux
contexts.

If you want to use a Java VM and you don't want to use Security
Enhanced Linux protection, read the INSTALL.J2EE or INSTALL.J2SE
or INSTALL.STANDALONE documents.
d40 5
a44 2
* You must read the README.Debian and debian/changelog for updated
  information about Debian packages and compilation options.
d51 1
a51 7
* Debian 3.1 Sarge based Linux distributions as of Feb 2007 don't 
  support Security Enhanced Linux. 
  A compiled, native back end is not available; the
  Debian port of the PHP/Java Bridge needs Java and a servlet container
  to start a Java VM.

* As of Ubuntu Breezy updated at february 2007, SE Linux should be available.
d57 1
a57 1
  4.0, with tomcat5, sun-java6, php 5.2.x. It can be installed with e.g.:
a59 2
    
* The C code implementation is deprecated since php-java-bridge version 5.x.
@


1.18
log
@Updated Debian info. C implementation deprecated.
@
text
@d4 3
a6 5
The Linux binary associates a HTTP Server with a managed and
persistent Java VM or an external J2EE server. The "java.so" file
contained in the Linux binary packages is the PHP "Java.inc" compiled
to native code. It supports the Zend and the standard PHP extension
mechanism.
@


1.17
log
@Version-5-1-2
@
text
@d50 2
a51 5
* Debian 3.1 Sarge based Linux distributions currently (Feb 2007) don't 
  support Security Enhanced Linux. 
  A compiled, native back end is not available; the
  Debian port of the PHP/Java Bridge needs Java and a servlet container
  to start a Java VM.
d58 7
a64 1
* As of Ubuntu Breezy updated (february 2007) SE Linux should be available.
d70 1
a70 1
  4.0, with tomcat5, sun-java5, php 5.2.x. It can be installed with e.g.:
d73 2
@


1.16
log
@Version-5-1-1
@
text
@d4 6
d20 1
d41 1
a41 1
* To rebuild the RPM files download the php-java-bridge*.tar.gz
@


1.15
log
@Release-4-3-3
@
text
@d34 6
@


1.14
log
@SE Linux Debian info. Added instructions for package rebuilding.
@
text
@d12 1
a12 1
documents.
@


1.13
log
@Files update 3.2.2 to 4.0.1. Extracted from the src.tar.gz downloaded from sf.net, uploaded by Jost Boekemeier. Update to repository by Andre Felipe Machado.
@
text
@d37 4
a40 3
* Debian based Linux distributions currently don't support Security
  Enhanced Linux. A compiled, native back end is not available; the
  debian port of the PHP/Java Bridge needs Java and a servlet container
d43 8
d56 1
a56 5
    dpkg -i php-java-bridge_x.y.z-1_i386.deb    

* Use the command:
  
    sh debian/rules binary
d58 16
a73 2
  in the php-java-bridge-x.y.z directory from the source download to
  re-create the debian binary package.
@


1.12
log
@Release-3-2-1
@
text
@d4 9
a12 1
On Linux Java libraries can be:
d14 2
a15 11
* compiled into native code and be called directly or

* they can be installed into a Java application server and be accessed
  via RPC, as usual.


Installing the PHP/Java Bridge native Component
-----------------------------------------------

NOTE: The Linux RPM files are for RedHat Linux and compabile
distributions (WhiteBox, Fedora, ...).
d19 2
a20 1
  component, see below.
a32 3
* Please report bugs/problems to the mailing list:

    php-java-bridge-users@@lists.sourceforge.net
d34 2
d37 9
a45 14
Installing the PHP/Java Bridge J2EE Component
---------------------------------------------

* Download and install a J2EE application server or servlet engine,
  for example Apache Tomcat:

    rpm -i tomcat5-5.0.30-5jpp_6fc.i386.rpm

* Download and install the PHP/Java Bridge base:

    rpm -i php-java-bridge-x.y.z-1-i386.rpm

* Either download and install the precompiled PHP/Java Bridge component
  for tomcat:
d47 1
a47 1
    rpm -i php-java-bridge-tomcat-x.y.z-1.i386.rpm
d49 1
a49 10
  This creates a file /etc/php.d/java-servlet.ini which contains the
  following settings:

     [java]
     java.hosts     = 127.0.0.1:8080
     java.servlet   = On

  Or install the J2EE component "JavaBridge.war" manually: disable
  Security Enhanced Linux (if enabled), deploy the JavaBridge.war into
  your J2EE server, example for Tomcat:
d51 1
a51 2
    setenforce Permissive
    cp JavaBridge.war /usr/share/tomcat5/webapps
d53 2
a54 1
  Create the file /etc/php.d/java-servlet.ini with the following content:
a55 42
     [java]
     java.hosts     = 127.0.0.1:8080 ;or 8888 for Oracle, 9080 for WebSphere
     java.servlet   = On

* If the HTTP document root should be shared with the J2EE or
  servlet webapps directory, change /etc/php.d/java-servlet.ini; set
  java.servlet to User:

     java.hosts     = 127.0.0.1:8080; or 8888 for Oracle, 9080 for WebSphere
     java.servlet   = User

   and change the DocumentRoot and Directory setting in the Apache httpd
   configuration file /etc/httpd/conf/httpd.conf. Old lines are marked
   with a -, added lines with a +:

    # DocumentRoot: The directory out of which you will serve your
    # documents. By default, all requests are taken from this directory, but
    # symbolic links and aliases may be used to point to other locations.
    #
  - DocumentRoot "/var/www/html"
  + DocumentRoot "/usr/share/tomcat5/webapps"
  [...]
    # This should be changed to whatever you set DocumentRoot to.
    #
  - <Directory "/var/www/html">
  + <Directory "/usr/share/tomcat5/webapps">

  The above example assumes that the shared webapps directory is
  /usr/share/tomcat5/webapps. Change it accordingly.

* Restart the HTTP server and the J2EE back-end, for example:

    service tomcat5 restart
    service httpd restart

* Visit http://localhost:<port>/JavaBridge and click on test.php.
  The <port> is 8888 (Oracle), 9080 (WebSphere) or 8080 (Tomcat/Geronimo).

* If the HTTP document root is shared with the J2EE or servlet webapps
  directory, browse to http://your.host.com/JavaBridge and click on
  test.php. Otherwise copy test.php to the document root of the web 
  server (/var/www/html) and browse to http://your.host.com/test.php.
d57 2
a58 2
* Copy your java libraries (.jar files) into the extension_dir/lib [1]
  directory and your native shared libraries into extension_dir [1].
a63 32
---
[1] The extension_dir is the PHP extension directory, usually
/usr/lib/php/modules. It can be set in the php .ini file [2] with
(example): extension_dir="/usr/local/lib/php/modules".

[2] The php .ini file is the global PHP configuration file. It
consists of a main file /etc/php.ini and several module specific files
located in /etc/php.d/. The two relevant files are /etc/php.d/java.ini
and /etc/php.d/java-servlet.ini.


Known Linux Issues 
------------------

* Only the precompiled php-java-bridge-tomcat-x.y.z-1.i386.rpm contains 
  Security Enhanced Linux contexts. When the J2EE component "JavaBridge.war"
  has been installed manually, Security Enhanced Linux must be switched off
  or the SEL modules must be installed separately, see the README.

* On Linux the default Java VM is GNU Java. If you want to use the SUN
  or IBM Java VM, set the JAVA_HOME option in /etc/tomcat5/tomcat5.conf.

* The precompiled php-java-bridge*.rpm binaries are 32 bit binaries
  for the x86 architecture. It is possible to build sparc, powerpc or
  64 bit binaries with the following command: 

    rpmbuild --rebuild php-java-bridge-x.y.z-1.src.rpm

  or, if you have downloaded the source archive:

    rpmbuild -tb php-java-bridge_x.y.z.tar.gz

@


1.11
log
@Release-3-1-8rc3
@
text
@d151 1
a151 1
    rpmbuild -tb php-java-bridge_x.y.z.tar.bz2
@


1.10
log
@Release-3-1-7
@
text
@d1 11
d15 3
d137 2
a138 6
  has been installed manually, one can extract the permissions
  from the audit log or with the command: audit2allow -ld and add the
  rules to the base php-java-bridge-x.y.z-1-i386.rpm, see
  /usr/share/doc/php-java-bridge-3.1.7/security/README (Fedora Core 4 or
  below) or /usr/share/doc/php-java-bridge-3.1.7/security/module/README
  (Fedora Core 5 or above).
@


1.9
log
@Release-3-1-6
@
text
@d1 2
a2 2
Installing the PHP/Java Bridge on Linux
---------------------------------------
d4 3
a6 3
On RedHat Enterprise Linux ("RHEL") or Fedora Linux ("FC") download
and install the java, PHP, httpd and php-java-bridge RPM files. You
need to download the following PHP/Java Bridge RPM files:
d8 2
a9 3
  For PHP 4 (>= 4.3.2): php-java-bridge-x.y.z-1.RHEL.i386.rpm
  For PHP 5.0.x       : php-java-bridge-x.y.z-1.FC4.i386.rpm
  For PHP >= 5.1.1    : php-java-bridge-x.y.z-1.FC5.i386.rpm
d11 3
a13 3
------------------------------------------------------------------------
On other Linux variants please either create a binary RPM distribution
from the source RPM, for example with the command:
d15 1
a15 1
   rpmbuild --rebuild php-java-bridge*src.rpm
d17 1
a17 1
or, if you have downloaded the source tarball, use the commands:
d19 1
a19 4
   tar xjf php-java-bridge_*.tar.bz2
   cp php-java-bridge-*/php-java-bridge.spec /usr/src/redhat/SPECS
   cp php-java-bridge_*.tar.bz2 /usr/src/redhat/SOURCES
   rpmbuild -bb /usr/src/redhat/SPECS/php-java-bridge.spec
d21 1
a21 3
or follow the instructions from the generic INSTALL.J2EE document
instead.
------------------------------------------------------------------------
a22 1
Install the RPM files, for example with:
d24 2
a25 4
    rpm -i j2re-1_4_2_09-linux-i586.rpm
    rpm -i httpd-2.y.z-p.i386.rpm
    rpm -i php-x.y.z-p.i386.rpm
    rpm -i php-java-bridge-x.y.z-p.i386.rpm
d27 2
a28 1
Either install the tomcat back-end:
d30 1
a30 2
    rpm -i tomcat5-x.y.z-p.i386.rpm
    rpm -i php-java-bridge-tomcat-x.y.z-p.i386.rpm
d32 1
a32 1
Or install the standalone back-end:
d34 1
a34 1
    rpm -i php-java-bridge-standalone-x.y.z-p.i386.rpm
d36 2
a37 1
Or deploy the J2EE back-end:
d39 1
a39 3
    Copy the JavaBridge.war to the autodeploy folder of your J2EE
    server and edit the java.hosts and java.servlet options in
    /etc/php.d/java.ini, see the INSTALL.J2EE document for details.
d41 2
a42 3
If Security Enhanced Linux is enabled, the above commands should have
provided instructions how to install the php-java-bridge.te and
php-java-bridge.fc policy files.
d44 3
d48 6
a53 2
J2EE/Servlet back-end
----------------------
d55 1
a55 3
If you have installed the tomcat or J2EE back-end, check the PHP .ini
settings. If the Apache document root should not be shared with the
J2EE or servlet webapps directory, set java.servlet to On, example:
d57 3
a59 2
  java.hosts=127.0.0.1:8080; or 8888 for Oracle, 9080 for WebSphere
  java.servlet=On
d61 3
a63 2
If the Apache document root should be shared with the J2EE or servlet webapps
directory, set java.servlet to User:
d65 2
a66 2
  java.hosts=127.0.0.1:8080; or 8888 for Oracle, 9080 for WebSphere
  java.servlet=User
d68 3
a70 3
and change the DocumentRoot and Directory setting in the Apache httpd
configuration file /etc/httpd/conf/httpd.conf. Old lines marked with 
a -, added lines with a +:
d84 2
a85 2
The above example assumes that the shared webapps directory is
/usr/share/tomcat5/webapps. Change it accordingly.
d87 1
a88 2
Re-start the tomcat or J2EE back-end and the Apache HTTP server, for example with:
    
d92 2
a93 1
and browse to;
d95 4
a98 2
    http://localhost:8080/JavaBridge/test.php 
    http://yourHost/JavaBridge/test.php
d100 2
d103 1
a103 2
Standalone back-end
-------------------
d105 1
a105 4
If you have installed the standalone back-end, re-start the back-end
and apache, copy the test.php from the documentation folder
(/usr/share/doc/php-java-bridge-[version]) to the web server document
root (/var/www/html) and check:
d107 4
a110 1
    http://yourHost/test.php
d112 4
a116 2
Custom Libraries
----------------
d118 2
a119 3
You can install your java libraries (.jar files) in extension_dir/lib
(see output of phpinfo) or in the J2EE back-end's WEB-INF/lib folder
or in /usr/share/java/ext or /usr/share/java.
d121 8
a128 3
All java libraries located in extension_dir/lib, /usr/share/java/ext
and WEB-INF/lib (for the J2EE/servlet back-end) are automatically
loaded whenever the JVM starts.
d130 2
a131 4
Impure java libraries (=libraries which use the java native interface)
must be stored in /usr/share/java/ext or extension_dir/lib. Shared
libraries required by the impure java libraries must be stored in the
java.library.path, which is usually the PHP extension_dir.
d133 3
a135 5
Java libraries which should be loaded or re-loaded on demand can be
stored in a sub-directory of /usr/share/java or in a sub-directory of
extension_dir/lib. They can be linked into the PHP files at run-time
using the command java_require("library1.jar;library2.jar;..."), see
the README for details.
d137 1
d139 1
a139 2
Optional: Translating Java to PHP classes
-----------------------------------------
d141 1
a141 1
PHP classes can be created from Java libraries with the command:
a142 6
   java -jar JavaBridge.jar --convert /usr/share/pear JAVALIBRARY.jar

The PHP classes are installed in /usr/share/pear/JAVALIBRARY

Please see the README and http://php-java-bridge.sourceforge.net
for further information.
@


1.8
log
@Release-3-1-4
@
text
@d61 1
a61 1
J2EE or servlet webapps directory set java.servlet to On, example:
@


1.7
log
@Release-3-1-0
@
text
@d25 1
a25 1
or follow the instructions in the generic INSTALL.J2EE document
d55 43
a97 4
If you have installed the tomcat or J2EE back-end, re-start the back-end
and apache and check if the apache htdocs directory is shared with the
tomcat webapps directory. If not, symlink or copy
/usr/share/tomcat5/webapps/JavaBridge to /var/www/html/JavaBridge. Visit:
d102 6
a107 2
If you have installed the standalone back-end, re-start the back-end and
apache, copy the test.php from the documentation folder
d113 26
a138 6
Then install your java libraries (.jar files) in /usr/share/java or
/usr/share/java/ext or in extension_dir/lib (see output of phpinfo) or
in the J2EE back-end's WEB-INF/lib and your PHP and web-pages in the
web server document root (/var/www/html or
/usr/share/tomcat5/webapps/JavaBridge) or one of their
sub-directories. 
@


1.6
log
@Release-3-1-0
@
text
@d4 24
a27 6
On RedHat Enterprise Linux ("RHEL") or Fedora Linux ("FC")
download and install the java, PHP, httpd and php-java-bridge RPM
files. On other Linux variants please either create a binary RPM
distribution from the source RPM (with: rpmbuild --rebuild
php-java-bridge*src.rpm) or follow the instructions in the generic
INSTALL.J2EE document instead.
d31 1
a31 1
    rpm -i jre-x.y.z-p.i386.rpm
d70 12
a81 5
Then install your java libraries (.jar files) in /usr/share/java or in
java.libpath/lib (see output of phpinfo) or in the J2EE back-end's
WEB-INF/lib and your PHP and web-pages in the web server document root
(/var/www/html or /usr/share/tomcat5/webapps/JavaBridge) or one of
their sub-directories.
@


1.5
log
@Release-3.0.8
@
text
@d4 1
a4 1
On RedHat Enterprise Linux[1] ("RHEL") or Fedora Linux ("FC")
d13 4
a16 4
    rpm -i jdk-1_5_0-linux-i586.rpm
    rpm -i httpd-2.0.54-10.i386.rpm
    rpm -i php-5.0.4-10.i386.rpm
    rpm -i php-java-bridge-x.y.z-1.i386.rpm
d20 2
a21 2
    rpm -i tomcat5-5.0.30-5jpp_6fc.i386.rpm
    rpm -i php-java-bridge-tomcat-x.y.z-1.i386.rpm
d25 1
a25 1
    rpm -i php-java-bridge-standalone-x.y.z-1.i386.rpm
d53 4
a56 4
java.libpath/lib (see output of phpinfo) and your PHP and web-pages in
the web server document root (/var/www/html or
/usr/share/tomcat5/webapps/JavaBridge) or one of their
sub-directories.
d58 2
a59 2
[1] On RHEL3 do not use the RPM from CD#9 but download a JRE >= 1.4.2 from
Sun or IBM instead.
@


1.4
log
@Release-3.0.8pre2
@
text
@d4 2
a5 2
On RedHat Enterprise Linux[1] ("RHEL") or Fedora Linux ("FC4")
download and install the java, php, httpd and php-java-bridge RPM
d18 1
a18 1
Either install the tomcat backend:
d23 1
a23 1
Or install the standalone backend:
d27 1
a27 1
Or deploy the J2EE backend:
d37 4
a40 2
If you have installed the tomcat or J2EE backend, re-start the backend
and apache and check:
d45 1
a45 1
If you have installed the standalone backend, re-start the backend and
d53 1
a53 1
java.libpath/lib (see output of phpinfo) and your php and web-pages in
@


1.4.2.1
log
@Release-3-0-8-1
@
text
@d4 2
a5 2
On RedHat Enterprise Linux[1] ("RHEL") or Fedora Linux ("FC")
download and install the java, PHP, httpd and php-java-bridge RPM
d18 1
a18 1
Either install the tomcat back-end:
d23 1
a23 1
Or install the standalone back-end:
d27 1
a27 1
Or deploy the J2EE back-end:
d37 2
a38 4
If you have installed the tomcat or J2EE back-end, re-start the back-end
and apache and check if the apache htdocs directory is shared with the
tomcat webapps directory. If not, symlink or copy
/usr/share/tomcat5/webapps/JavaBridge to /var/www/html/JavaBridge. Visit:
d43 1
a43 1
If you have installed the standalone back-end, re-start the back-end and
d51 1
a51 1
java.libpath/lib (see output of phpinfo) and your PHP and web-pages in
@


1.3
log
@Release-3.0.7
@
text
@d18 1
a18 1
Either install the tomcat/j2ee backend:
d25 7
a31 1
    rpm -i php-java-bridge-standalone-x.y.z-1.noarch.rpm
d37 2
a38 2
If you have installed the tomcat backend, re-start the backend and
apache and check:
@


1.2
log
@Release-3.0.5
@
text
@d1 2
a2 2
Installation on RedHat Linux (RHEL, Fedora, ...)
-------------------------------------------------
d4 6
a9 2
* Install a J2RE, for example with the command:
  rpm -i IBMJava2-JRE-1.4.1-8.i386.rpm
d11 1
a11 2
* Install PHP, for example with the command: 
  rpm -i php-4.3.2-8.ent.i386.rpm
d13 4
a16 2
* Install the web-server, for example with the command:
  rpm -i httpd-2.0.46-25.ent.i386.rpm
d18 1
a18 2
* Install the php-java-bridge, for example with the command:
  rpm -i php-java-bridge-X.Y.Z-1.i386.rpm
d20 2
a21 3
* If you have SECURITY ENHANCED LINUX, the above command should have
  provided instructions how to install the php-java-bridge.te and
  php-java-bridge.fc policy files.
d23 1
a23 2
Start the web-server with the command: service httpd restart.
Start the bridge with the command: service php-java-bridge restart
d25 1
a25 2
Create a simple php file in /var/www/html, for example with
the command: echo "<?php phpinfo(); ?>" >/var/www/html/phpinfo.php.
d27 3
a29 3
Browse to http://localhost/phpinfo.php and search for the 
output of the php java bridge module (the entry should be: 
"java.support: Enabled").
d31 2
a32 3
Then install your your java libraries (.jar files) in /usr/share/java
or in java.libpath/lib (see output of phpinfo) and your php and
web-pages in /var/www/html or one of their sub-directories.
d34 2
d37 4
a40 2
Installation on a generic Linux distribution
--------------------------------------------
d42 1
a42 1
* Install a J2RE >= 1.4.0, for example Sun JDK 1.5.0
d44 5
a48 1
* Download and extract php-java-bridge_*-linux-php5.tgz into a folder.
d50 2
a51 68
* Double-click on test.sh
  Open the file result.html with a browser.  Search for the "java
  status" entry, it should be "java status: running", and examine the
  java properties at the bottom of the page. Search for the
  "extension_dir", it should be "./ext" for this test.


If the above test succeeded, install the php.ini, the java.so,
libnatcJavaBridge.so and your java libraries (.jar files):

* Copy or add the contents of the ./php.ini file to the php.ini in the
  linux system directory (usually /etc/php.ini or
  /usr/local/lib/php.ini) and edit it so that the "extension_dir" points
  to your PHP 5 extension directory. Copy the java.so,
  libnatcJavaBridge.so and JavaBridge.jar from the ext folder into the
  extension_dir and copy your java libraries (.jar files) into
  extension_dir/lib.

* If you don't have a servlet engine, enable the java.socketname
  option in your php.ini file and copy php-java-bridge to /usr/sbin,
  make it executable: chmod +x /usr/sbin/php-java-bridge and start the
  standalone backend once: /usr/sbin/php-java-bridge. Then copy the
  test.php into your web-server document root and browse to:

    http://localhost/test.php

* If there are problems, edit your php.ini and set the java.log_level
  to 3 or a higher log level and examine the log file of the servlet
  engine or "/var/log/php-java-bridge.log".

  If your php.ini does not have a java.log_level entry, the bridge
  uses the log level supplied when it was started.  For example the
  following command starts the backend with debug output enabled:

    java -Djava.awt.headless=true -jar JavaBridge.jar INET:9267 4 JavaBridge.log

 * Please report bugs/problems to the mailing list:

    php-java-bridge-users@@lists.sourceforge.net


Known Linux Issues 
-------------------

* All modern Linux installations have Security Enhanced Linux enabled,
  please see the README and the SEL documentation from the NSA for
  details. -- During development you can set it to permissive using
  the command: setenforce permissive. Violations are reported via the
  /var/log/audit/audit.log.

* Until a bug in the GNU JVM is fixed please use IBM, SUN or Blackdown java
  instead. You can check the java version using the command: java -version.
  All java versions <= "gij (GNU libgcj) version 4.0.0" may create
  incorrect bytecode:

    public abstract class bug {
        protected void kill() {System.out.println("okay");}
        protected abstract void init();
        public static bug getBug() {return new bug(){protected void init() {kill();}};}
        public static void main(String s[]) { bug.getBug().init(); }
    }

    $ gcj -C bug.java
    $ java bug   # => NullPointerException

  The above code will produce a null pointer exception because kill()
  is not called via "invokevirtual" but referenced through "this", which
  is not available in the above context.
@


1.1
log
@Version-3.0.2
@
text
@@

