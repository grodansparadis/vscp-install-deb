head	1.12;
access;
symbols
	Release-4-3-3:1.11.0.16
	ROOT_Release-4-3-3:1.11
	upstream_version_4_3_2:1.11
	debian_version_4_3_2-1:1.11
	ROOT_Release-4-3-2:1.11
	Release-4-3-2:1.11.0.14
	Release-4-3-1:1.11.0.12
	ROOT_Release-4-3-1:1.11
	debian_version_4_3_0-1:1.11
	upstream_version_4_3_0:1.11
	ROOT_Release-4-3-0:1.11
	Release-4-3-0:1.11.0.10
	debian_version_3_2_1b-2:1.10
	debian_version_4_2_2-1:1.11
	upstream_version_4_2_2:1.11
	debian_version_3_2_1b-1:1.10
	upstream_version_3_2_1b:1.10
	Release-4-1-2:1.11.0.8
	Release-4-0-8:1.11.0.6
	debian_version_4_0_8a-1:1.11
	upstream_version_4_0_8a:1.11
	jostb-debian-ubuntu-patch:1.11.0.4
	debian_version_4_0_8-1:1.11
	upstream_version_4_0_8:1.11
	debian_version_4_0_7-1:1.11
	upstream_version_4_0_7:1.11
	debian_version_4_0_6-1:1.11
	upstream_version_4_0_6:1.11
	debian_version_4_0_2-1:1.11
	upstream_version_4_0_2:1.11
	Release-4-0-2_Root:1.11
	Release-4-0-2:1.11.0.2
	upstream_version_4_0_1:1.11
	debian_version_4_0_1-2:1.11
	Release-3-2-1:1.10.0.4
	Release-3-1-8:1.10.0.2
	Version-1:1.4.0.6
	Version-2:1.4.0.4
	Release-2:1.4.0.2
	PHP-5:1.3.0.4
	Release-1-0-6:1.3.0.6;
locks; strict;
comment	@ * @;


1.12
date	2008.01.06.21.07.56;	author jost_boekemeier;	state dead;
branches;
next	1.11;

1.11
date	2007.03.09.20.28.07;	author andremachado;	state Exp;
branches;
next	1.10;

1.10
date	2006.09.10.17.31.11;	author jost2345;	state Exp;
branches;
next	1.9;

1.9
date	2006.09.05.20.40.32;	author jost2345;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.21.17.41.52;	author jost2345;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.08.17.20.45;	author jost2345;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.08.17.05.53;	author jost2345;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.20.12.19.44;	author jost2345;	state dead;
branches;
next	1.4;

1.4
date	2004.11.11.18.36.00;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.23.15.57.36;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.18.15.39.09;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.12.17.07.16;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Release-5-0-0
@
text
@/*-*- mode: C; tab-width:4 -*-*/

/* -- proxyenv IO decorator which can buffer the output.

  Copyright (C) 2003-2007 Jost Boekemeier

  This file is part of the PHP/Java Bridge.

  The PHP/Java Bridge ("the library") is free software; you can
  redistribute it and/or modify it under the terms of the GNU General
  Public License as published by the Free Software Foundation; either
  version 2, or (at your option) any later version.

  The library is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with the PHP/Java Bridge; see the file COPYING.  If not, write to the
  Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
  02111-1307 USA.

  Linking this file statically or dynamically with other modules is
  making a combined work based on this library.  Thus, the terms and
  conditions of the GNU General Public License cover the whole
  combination.

  As a special exception, the copyright holders of this library give you
  permission to link this library with independent modules to produce an
  executable, regardless of the license terms of these independent
  modules, and to copy and distribute the resulting executable under
  terms of your choice, provided that you also meet, for each linked
  independent module, the terms and conditions of the license of that
  module.  An independent module is a module which is not derived from
  or based on this library.  If you modify this library, you may extend
  this exception to your version of the library, but you are not
  obligated to do so.  If you do not wish to do so, delete this
  exception statement from your version. */

#ifndef JAVA_SIO_H
#define JAVA_SIO_H

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <unistd.h>
#include "java_bridge.h"

#define ASYNC_SEND_SIZE 8192

extern ssize_t EXT_GLOBAL(sfwrite)(const void *ptr, size_t length, SFILE *stream);
extern SFILE* EXT_GLOBAL(sfdopen)(proxyenv*env);
extern int EXT_GLOBAL(sfclose)(SFILE *stream);

#endif
@


1.11
log
@Files update 3.2.2 to 4.0.1. Extracted from the src.tar.gz downloaded from sf.net, uploaded by Jost Boekemeier. Update to repository by Andre Felipe Machado.
@
text
@@


1.10
log
@Release-3-1-8
@
text
@d5 1
a5 1
  Copyright (C) 2006 Jost Boekemeier
@


1.9
log
@Release-3-1-8rc3
@
text
@d3 1
a3 1
/**\file -- proxyenv IO decorator which can buffer the output.
@


1.8
log
@Release-3-1-8devel1
@
text
@d3 1
a3 1
/**\file -- proxyenv IO decorator which buffers the output.
@


1.7
log
@Release-3-1-7
@
text
@d3 37
a39 3
/**\file 
 * Proxyenv IO decorator which buffers the output.
 */
@


1.6
log
@Release-3-1-7
@
text
@d1 8
a8 2
#ifndef SIO_H
#define SIO_H
d14 8
a21 30
#ifdef HAVE_BROKEN_STDIO
				/* Workaround for broken stdio
				   implementations on Solaris and
				   Windows */
typedef struct {
  short eof:1;
  short err:1;
  int file;
} SFILE;

extern size_t sfwrite(const  void  *ptr,  size_t  size,  size_t  nmemb,  SFILE *stream);
extern size_t sfread(void  *ptr,  size_t  size,  size_t  nmemb,  SFILE *stream);
extern SFILE* sfdopen(int fd, char*flags);
extern int sfclose(SFILE *stream);
#define SFREAD sfread
#define SFWRITE sfwrite
#define SFDOPEN sfdopen
#define SFCLOSE sfclose
#define SFEOF(peer) (peer->eof) 
#define SFERROR(peer) (peer->err)
#else
				/* Linux, BSD, ... */
#define SFILE FILE
#define SFWRITE fwrite
#define SFREAD  fread
#define SFDOPEN fdopen
#define SFCLOSE fclose
#define SFEOF   feof
#define SFERROR ferror
#endif
@


1.5
log
@Release-2.0-beta
@
text
@@


1.4
log
@win32/mingw
@
text
@@


1.3
log
@Solaris and Win98 support
@
text
@d8 4
a11 4
#ifdef HAVE_BROKEN_STDIO		/* MacOS X and all Solaris versions */

#include <stdio.h>

@


1.2
log
@threads check
@
text
@d4 1
d6 1
@


1.1
log
@Added support for Slowlaris' broken stdio:
SFREAD SFWRITE SFDOPEN SFCLOSE SFEOF SFERROR: Use these instead of the stdio
versions.  On Solaris these functions access the raw socket, which is slow
but at least it works
@
text
@d6 1
a6 1
#ifdef HAS_BROKEN_STDIO		/* MacOS X and all Solaris versions */
@

