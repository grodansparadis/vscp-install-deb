head	1.6;
access;
symbols
	sparc-64-test:1.5.0.2
	V-2004-08-28:1.1.1.1
	PHP-JAVA-BRIDGE:1.1.1;
locks; strict;
comment	@ * @;
expand	@k@;


1.6
date	2004.10.23.15.57.36;	author jost2345;	state dead;
branches;
next	1.5;

1.5
date	2004.10.09.11.35.17;	author jost2345;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.04.16.29.08;	author jost2345;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.30.17.30.44;	author jost2345;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.29.15.24.30;	author jost2345;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.28.06.04.56;	author jost2345;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.08.28.06.04.56;	author jost2345;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Solaris and Win98 support
@
text
@/*-*- mode: C; tab-width:4 -*-*/

/* mkstemp */
#include <stdlib.h>

/* time */
#include <time.h>

/* assert */
#include <assert.h>

#include "protocol.h"
#include "php_java.h"

#ifndef CFG_CLASSPATH
#define CFG_CLASSPATH "/opt/j2sdkee1.2.1/lib/classes"
#endif
#ifndef CFG_LD_LIBRARY_PATH
#define CFG_LD_LIBRARY_PATH "/usr/local/lib"
#endif
#ifndef CFG_JAVA
#define CFG_JAVA "/opt/jdk1.4/bin/java"
#endif
#ifndef CFG_JAVA_HOME
#define CFG_JAVA_HOME "/opt/jdk1.4"
#endif
#ifndef BRIDGE_VERSION
#define BRIDGE_VERSION "<unknown>"
#endif

const char * const java_bridge_version = BRIDGE_VERSION;

#ifdef CFG_JAVA_SOCKET_ANON
static void init_socket(struct cfg*cfg) {
  static const char * const bridge="@@java-bridge-";
  size_t len = strlen(bridge)+ sizeof(uid_t)*2+ sizeof(time_t)*2; //assuming byte=8bit

  char *sockname=malloc(len+1);
  assert(sockname); if(!sockname) exit(6);

  snprintf(sockname, len+1, "%s%lx%lx", bridge, 
		   (unsigned long)getuid(),(unsigned long)time(0));
  cfg->sockname=sockname;
}
#else
static void init_socket(struct cfg*cfg) {
	int n;
	char*s=SOCKNAME;
	char *sockname=malloc(strlen(s+1));
	assert(sockname); if(!sockname) exit(6);
	strcpy(sockname, s);
	n = mkstemp(sockname);
	assert(n); if(!n) exit(6);
	cfg->sockname=sockname;
}
#endif
void java_init_cfg(struct cfg *cfg) {
  if(!(java_ini_updated&U_SOCKNAME)) {
	init_socket(cfg);
  }
  if(!(java_ini_updated&U_CLASSPATH)) cfg->classpath=strdup(CFG_CLASSPATH);
  if(!(java_ini_updated&U_LIBRARY_PATH)) cfg->ld_library_path=strdup(CFG_LD_LIBRARY_PATH);
  if(!(java_ini_updated&U_JAVA)) cfg->java=strdup(CFG_JAVA);
  if(!(java_ini_updated&U_JAVA_HOME)) cfg->java_home=strdup(CFG_JAVA_HOME);
  if(!(java_ini_updated&U_LOGLEVEL)) cfg->logLevel=strdup("0");
  if(!(java_ini_updated&U_LOGFILE)) cfg->logFile=strdup("");
}

void java_destroy_cfg(int java_ini_updated, struct cfg*cfg) {
  if((java_ini_updated&U_SOCKNAME)) free(cfg->sockname);
  if((java_ini_updated&U_CLASSPATH)) free(cfg->classpath);
  if((java_ini_updated&U_LIBRARY_PATH)) free(cfg->ld_library_path);
  if((java_ini_updated&U_JAVA)) free(cfg->java);
  if((java_ini_updated&U_JAVA_HOME)) free(cfg->java_home);
  if((java_ini_updated&U_LOGLEVEL)) free(cfg->logLevel);
  if((java_ini_updated&U_LOGFILE)) free(cfg->logFile);
}
@


1.5
log
@more expressive error messages
@
text
@@


1.4
log
@anon socket: use abstract namespace
@
text
@d68 10
@


1.3
log
@bugfixes for apache 1.3.x
@
text
@d6 3
d27 5
d33 14
a46 2
void java_init_cfg(struct cfg *cfg) {
  if(!(java_ini_updated&U_SOCKNAME)) {
d50 1
a50 1
	assert(sockname);
d53 1
a53 1
	assert(n);
d55 5
@


1.2
log
@update to 1.0.0
@
text
@d26 2
a27 2
  int n;
  if(!cfg->sockname) {
d36 6
a41 9
  if(!cfg->classpath) cfg->classpath=strdup(CFG_CLASSPATH);
  if(!cfg->ld_library_path) cfg->ld_library_path=strdup(CFG_LD_LIBRARY_PATH);
  if(!cfg->java) cfg->java=strdup(CFG_JAVA);
  if(!cfg->java_home) cfg->java_home=strdup(CFG_JAVA_HOME);
  if(!cfg->logLevel) cfg->logLevel=strdup("0");
  if(!cfg->logFile) cfg->logFile=strdup("");

  cfg->saddr.sun_family = AF_UNIX;
  strcpy(cfg->saddr.sun_path, cfg->sockname);
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
  if(!cfg->logLevel) cfg->logLevel=strdup("5");
@


1.1.1.1
log
@Initial
@
text
@@
