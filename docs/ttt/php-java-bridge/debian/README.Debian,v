head	1.19;
access;
symbols
	Release-7-1-1:1.19.0.10
	Root_Release-7-1-1:1.19
	Root_Release_7-0-1:1.19
	Release_7-0-1:1.19.0.8
	Release_7-0-0:1.19.0.6
	Root_Release_7-0-0:1.19
	Release-6-2-2:1.19.0.4
	Release-6-1-2-3:1.19
	Root_Release-6-1-2-3:1.19
	Release-6-1-2-2:1.19.0.2
	Root_Release-6-1-2-2:1.19
	debian_version_6_1_2_1-1:1.19
	upstream_version_6_1_2_1:1.18
	Release-6-1-2-1_new:1.18.0.6
	Root_Release-6-1-2-1_new:1.18
	Release-6-1-2-1:1.18.0.4
	Root_Release-6-1-2-1:1.18
	upstream_version_6_1_2:1.18
	debian_version_6_1_2-1:1.18
	Release-6-1-2:1.18.0.2
	Root_Release-6-1-2:1.18
	debian_version_6_1_1-2:1.18
	debian_version_6_1_1-1:1.18
	upstream_version_6_1_1:1.17
	Release-6-1-1:1.17.0.10
	Root_Release-6-1-1:1.17
	Release-6-0-4:1.17.0.8
	Root_Release-6-0-4:1.17
	Release-6-0-3_NEW:1.17.0.4
	Root_Release-6-0-3_NEW:1.17
	Release-6-0-3:1.17.0.6
	Root_Release-6-0-3:1.17
	Release-6-0-0:1.17.0.2
	Root_Release-6-0-0:1.17
	Release-5-5-4-1:1.16.0.10
	Root_Release-5-5-4-1:1.16
	Release-5-5-4:1.16.0.8
	Root_Release-5-5-4:1.16
	Release-5-5-3:1.16.0.6
	ROOT_Release-5-5-3:1.16
	Release-5-5-2:1.16.0.4
	Root_Release-5-5-2:1.16
	debian_version_5_5_1-1:1.16
	Release-5-5-1:1.16.0.2
	upstream_version_5_5_1:1.16
	ROOT_Release-5-5-1:1.16
	debian_version_5_5-1:1.16
	upstream_version_5_5:1.14
	ROOT_Release-5-5:1.14
	Release-5-5:1.14.0.2
	debian_version_5_4_4_2-3:1.13
	Release-5-4-4-2-1:1.13.0.2
	debian_version_5_4_4_2-2:1.13
	debian_version_5_4_4_2-1:1.12
	upstream_version_5_4_4_2:1.13
	debian_version_5_4_4_1-1:1.12
	upstream_version_5_4_4_1:1.12
	debian_version_5_4_4-1:1.11
	upstream_version_5_4_4:1.11
	Release-5-4-4:1.11.0.28
	Root_Release-5-4-4:1.11
	debian_version_5_4_3_2-1:1.11
	upstream_version_5_4_3_2:1.11
	Release_5-4-3-2:1.11.0.24
	Root_Release_5-4-3-2:1.11
	upstream_version_5_4_3_1:1.11
	debian_version_5_4_3_1-1:1.11
	Release-5-4-3:1.11.0.22
	Root_Release-5-4-3:1.11
	Root_Release-5-4-1:1.11
	Release-5-4-1:1.11.0.20
	Root_Release-5-4:1.11
	Release-5-4:1.11.0.18
	upstream_version_5_3_4:1.11
	debian_version_5_3_4-1:1.11
	ROOT_Release-5-3-4:1.11
	Release-5-3-4:1.11.0.16
	ROOT_Release-5-3-3:1.11
	Release-5-3-3:1.11.0.12
	debian_version_5_3_2_1_2-1:1.11
	upstream_version_5_3_2_1_2:1.11
	debian_version_5_3_2_1_1-1:1.11
	debian_version_5_3_2_1_1:1.11
	upstream_version_5_3_2_1_1:1.11
	Root_Release-5-3-2-1:1.11
	Release-5-3-2-1:1.11
	ROOT_RELEASE-5-3-2-1:1.11
	RELEASE-5-3-2-1:1.11.0.14
	Release-5-3-2:1.11.0.10
	Root_Release-5-3-2:1.11
	Root_Release-5-3-1:1.11
	Release-5-3-1:1.11.0.8
	Release-5-2-3-1:1.11.0.6
	Root_Release-5-2-3-1:1.11
	Release-5-2-2-4:1.11.0.4
	Root_Release-5-2-2-4:1.11
	Release-5-2-2-1:1.11.0.2
	Root_Release-5-2-2-1:1.11
	upstream_version_5_2_2:1.10
	debian_version_5_2_2-1:1.11
	Release-5-2-2:1.10.0.6
	ROOT_Release-5-2-2:1.10
	ROOT_Release-5-2-1:1.10
	Release-5-2-1:1.10.0.4
	Release-5-2-0:1.10.0.2
	ROOT_Release-5-2-0:1.10
	debian_version_5_1_0-1:1.10
	ROOT_Release-5-1-2:1.9
	Release-5-1-2:1.9.0.4
	Version-5-1-1:1.9.0.2
	ROOT_Version-5-1-1:1.9
	debian_version_4_3_2-1:1.7
	debian_version_4_3_0-1:1.6
	upstream_version_4_3_0:1.6
	ROOT_Release-4-3-0:1.6
	Release-4-3-0:1.6.0.8
	debian_version_3_2_1b-2:1.1.2.1
	debian_version_4_2_2-1:1.6
	upstream_version_4_2_2:1.6
	debian_version_3_2_1b-1:1.1.2.1
	upstream_version_3_2_1b:1.1
	Release-4-1-2:1.6.0.6
	Release-4-0-8:1.6.0.4
	debian_version_4_0_8a-1:1.6
	upstream_version_4_0_8a:1.6
	jostb-debian-ubuntu-patch:1.6.0.2
	debian_version_4_0_8-1:1.6
	upstream_version_4_0_8:1.4
	debian_version_4_0_7-1:1.4
	upstream_version_4_0_7:1.4
	debian_version_4_0_6-1:1.4
	upstream_version_4_0_6:1.4
	debian_version_4_0_2-1:1.4
	upstream_version_4_0_2:1.2
	Release-4-0-2_Root:1.2
	Release-4-0-2:1.2.0.2
	upstream_version_4_0_1:1.1
	debian_version_4_0_1-2:1.1
	Release-3-2-1:1.1.0.2;
locks; strict;
comment	@# @;


1.19
date	2010.05.04.19.55.26;	author andremachado;	state Exp;
branches;
next	1.18;

1.18
date	2010.04.06.17.06.08;	author andremachado;	state Exp;
branches;
next	1.17;

1.17
date	2010.01.26.17.59.26;	author andremachado;	state Exp;
branches;
next	1.16;

1.16
date	2009.08.13.18.52.10;	author andremachado;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.07.18.20.44;	author andremachado;	state Exp;
branches;
next	1.14;

1.14
date	2009.07.28.13.46.35;	author andremachado;	state Exp;
branches;
next	1.13;

1.13
date	2009.07.01.17.19.34;	author andremachado;	state Exp;
branches;
next	1.12;

1.12
date	2009.03.30.14.22.01;	author andremachado;	state Exp;
branches;
next	1.11;

1.11
date	2008.05.06.17.12.35;	author andremachado;	state Exp;
branches;
next	1.10;

1.10
date	2008.02.14.11.42.03;	author andremachado;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.30.11.41.44;	author andremachado;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.25.14.52.09;	author andremachado;	state Exp;
branches;
next	1.7;

1.7
date	2007.12.20.12.38.55;	author andremachado;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.09.13.02.08;	author andremachado;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.09.12.56.40;	author andremachado;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.23.19.03.57;	author andremachado;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.23.17.56.55;	author andremachado;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.22.12.58.05;	author andremachado;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.05.12.54.25;	author andremachado;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2007.08.03.18.41.39;	author andremachado;	state Exp;
branches;
next	;


desc
@@


1.19
log
@New upstream version. Small corrections at Readme and SE Linux Tomcat Debian patch.
@
text
@php-java-bridge for Debian
--------------------------

This Debian package was compiled for installing php5 C modules, j2ee server, 
docs and development files using separated packages.
Also, it must use Sun Java 6 and Tomcat 5.5, as of today.
You must use the J2EE version, because C implementation was removed from 
distribution and source tree. 
This file release do not include C implementation binary.
This version is not compatible with php 4.x.
Compilation against GCJ is possible, but some tweaks must be done. Read the 
other document files.
This version needs debhelper >= 7.4.11~bpo50+1 for build.
This version uses ant build environment, and only SELinux still use make.
This package uses an EXPERIMENTAL and TOO permissive Tomcat 5.5 security policy.
Only suitable for security benign development environments.
Java security is not actually enough for blocking malicious code from php.
The production quality solution should be using Security Enhanced Linux 
policies. 
Read more at the "devel" package, 
"/usr/share/doc/php-java-bridge-devel/examples/security" directory.
This version includes minimal SE Linux rules for starting Tomcat 5.5 and 
php-java-bridge.
Please, contribute improved rules to the project.
This version needs PhpDocumentor in order to build. It is not packaged for
Debian yet. You must install php-pear, dh-make, dh-make-pear packages and then 
execute, logged as root and if your Apache document root is at /var/www:

# pear channel-update "pear.php.net"
# pear config-set data_dir /var/www/pear

Then OR you could install PhpDocumentor using pear:

# pear  install --alldeps PhpDocumentor

OR you could create debian packages for it and its dependencies (XML_Beautifier,
 XML_Parser, XML_Util) logged as regular user (you may cd to individual 
directories for each):

$ dh-make-pear  --depends php-xml-beautifier, php5-cli PhpDocumentor
$ dh-make-pear  --depends php-xml-util, php-xml-parser XML_Beautifier
$ dh-make-pear XML_Util
$ dh-make-pear XML_Parser

Then enter at each respective pear module source directory as regular user:

$ debuild -uc -us

These commands will build rough debian packages for the pear modules.
You may need to adjust dependency field at each debian/control files, and 
maintainer field, at least. 
Install these pear module debian packages in order to compile php-java-bridge 
debian packages.

After having all these pear dependencies satisfied, use the command as regular 
user:

$ debuild -rfakeroot -uc -us

at a directory you downloaded the .dsc, .changes, .diff.gz, orig.tar.gz files
and given you already have all devscripts tool chain Debian packages installed.


1. Creating and Building Debian package directly from CVS
Most steps are only needed if you will commit a new version to the repository.
If you want only to build an already commited version, you will need only create
 a local working area (checkout module) as anonymous cvs user and then jump to 
the step "building the package".

1.1 Creating package 

1.1.1 Create your local project area (checkout module to your local CVS area).
See http://sourceforge.net/cvs/?group_id=117793
The commands below are suitable for cvs commiters. Use your sourceforge cvs 
username. 
If you are only building the package, use anonymous cvs checkout as instructed 
in the URL. 

$ mkdir ~/projects
$ cd ~/projects
$ export CVS_RSH=ssh
$ cvs -d:ext:your_sourcefoge_cvs_username@@php-java-bridge.cvs.sourceforge.net:/cvsroot/php-java-bridge checkout php-java-bridge

Now you should have your own local area (checked out module) in 
~/projects/php-java-bridge
If you are only building the package, jump to the step 2.

1.1.1.1 If you are trying to merge a downloaded and then expanded src.tgz into 
the cvs tree, use the command below, adapting it to the suitable version.

$ cp --recursive --update --verbose --archive \
--preserve php-java-bridge-5.2.2/*  --target-directory=php-java-bridge

1.1.2 Commit the (eventual) changes to the repository. Ideally, you will not to 
do this, if step 1.1.1.1 is not needed.

1.1.3 Create an upstream tag. The formating is VERY strict. Adapt to the 
suitable version.

$ cd ~/projects/php-java-bridge
$ cvs -f tag 'upstream_version_6_1_2_1' '.'

1.1.4 Create or edit the Debian php-java-bridge specific patches.

$ cd ~/projects/php-java-bridge
$ dpatch-edit-patch patch 10_MakefileFrag_patch

Copy around from a personal template or edit the  Makefile.frag into the 
./debian directory.
Exit dpatch shell. 
All your modifications were being recorded and will result in the defined patch 
file name into the ./debian/patches directory.

1.1.5 Modify the Debian changelog in the correct way. It is very important to 
follow the strict formating, as the Debian changelog is actualy used as one of 
the package control files.

$ debchange -v 6.1.2.1-1

1.1.6 Modify some other */debian files, if needed.

1.1.7 Commit all changes.

1.1.8 Create the Debian version tag. The formating is very strict. Adapt to the 
suitable version.

$ cd ~/projects/php-java-bridge
$ cvs -f tag 'debian_version_6_1_2_1-1' '.'


2. Building the package from cvs tree.
If you are only building the package, you could use the anonymous cvs pserver 
login and checkout as explained in previous item.

$ mkdir ~/compilation_tmp
$ cd ~/projects/php-java-bridge

Hint: You need to specify the absolute path to the temporary scratchpad working 
area instead of ~/.

$ cvs-buildpackage  -rfakeroot -uc -us -R. -W/home/andremachado/compilation_tmp

The generated files will result at the specified temporary scratchpad working 
area.

3. Different port on Debian systems
The Tomcat php-java-bridge deployment could be tested at 
http://localhost:8180/JavaBridge
with or without SE Linux packaged rules installed.
The port is configured 8180 in order to avoid conflict with Apache.

 -- Andre Felipe Machado <andre.machado@@serpro.gov.br>  Tue, 04 May 2010 16:55:22 -0300
@


1.18
log
@New ant build system. C binary deprecated and removed. Dependency on newer debhelper. SERPRO sponsoring Debian package maintainer work.
@
text
@d101 1
a101 1
$ cvs -f tag 'upstream_version_6_1_1' '.'
d118 1
a118 1
$ debchange -v 6.1.1-1
d128 1
a128 1
$ cvs -f tag 'debian_version_6_1_1-1' '.'
d152 1
a152 1
 -- Andre Felipe Machado <andre.machado@@serpro.gov.br>  Tue, 06 Apr 2010 13:53:02 -0300
@


1.17
log
@New version. Improved readme.debian.
@
text
@d7 3
a9 4
You do not need C implementation and php J2EE server versions simultaneously.
You must use the J2EE version as soon you could, as C implementation is obsolete
and unmaintained. This file release do not include C implementation binary.
It could still be built from package source, for those who want.
d13 2
d101 1
a101 1
$ cvs -f tag 'upstream_version_5_2_2' '.'
d118 1
a118 1
$ debchange -v 5.2.2-1
d128 1
a128 1
$ cvs -f tag 'debian_version_5_2_2-1' '.'
d152 1
a152 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Tue, 26 Jan 2010 15:47:03 -0300
@


1.16
log
@explaining how build pear modules debian packages or manually installing pear modules.
@
text
@d145 5
d151 1
a151 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Thu, 13 Aug 2009 15:26:12 -0300
@


1.15
log
@build dependency on PhpDocumentor.
@
text
@d9 2
a10 3
and unmaintained. This is the last release that it will be compiled and 
uploaded.
It will still be built from sources, for those who want.
a11 4
Use the command 
debuild -rfakeroot -uc -us
at a directory you downloaded the .dsc, .changes, .diff.gz, orig.tar.gz files
and given you already have all devscripts tool chain Debian packages installed.
d25 4
a28 2
Debian yet, so you must install pear package and then execute, logged as root 
and if your Apache document root is at /var/www:
d30 3
d35 27
d78 4
a81 4
mkdir ~/projects
cd ~/projects
export CVS_RSH=ssh
cvs -d:ext:your_sourcefoge_cvs_username@@php-java-bridge.cvs.sourceforge.net:/cvsroot/php-java-bridge checkout php-java-bridge
d90 2
a91 1
cp --recursive --update --verbose --archive --preserve php-java-bridge-5.2.2/*  --target-directory=php-java-bridge
d98 3
a100 2
cd ~/projects/php-java-bridge
cvs -f tag 'upstream_version_5_2_2' '.'
a102 1
cd ~/projects/php-java-bridge
d104 2
a105 1
dpatch-edit-patch patch 10_MakefileFrag_patch
d116 2
a117 1
debchange -v 5.2.2-1
d125 3
a127 2
cd ~/projects/php-java-bridge
cvs -f tag 'debian_version_5_2_2-1' '.'
d133 3
a135 2
mkdir ~/compilation_tmp
cd ~/projects/php-java-bridge
d140 1
a140 1
cvs-buildpackage  -rfakeroot -uc -us -R. -W/home/andremachado/compilation_tmp
d146 1
a146 6





 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Thu, 06 Aug 2009 10:35:10 -0300
@


1.14
log
@updated info for using as release notes too.
@
text
@d29 6
d119 1
a119 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Thu, 28 Jul 2009 10:35:10 -0300
@


1.13
log
@Warning about included Tomcat 5.5 security policy.
@
text
@d4 2
a5 1
This Debian package was compiled for installing php5 C modules, j2ee server, docs and development files using separated packages.
d8 4
d15 4
a18 1
Compilation against GCJ is possible, but some tweaks must be done. Read the other document files.
d22 2
a23 1
The production quality solution should be using Security Enhanced Linux policies. 
d26 3
a28 2
As of today, you have to edit and compile SE Linux rules yourself.
Please, contribute improved rules.
d32 3
a34 1
If you want only to build an already commited version, you will need only create a local working area (checkout module) as anonymous cvs user and then jump to the step "building the package".
d40 4
a43 2
The commands below are suitable for cvs commiters. Use your sourceforge cvs username. 
If you are only building the package, use anonymous cvs checkout as instructed in the URL. 
d50 2
a51 1
Now you should have your own local area (checked out module) in ~/projects/php-java-bridge
d54 2
a55 1
1.1.1.1 If you are trying to merge a downloaded and then expanded src.tgz into the cvs tree, use the command below, adapting it to the suitable version.
d59 2
a60 1
1.1.2 Commit the (eventual) changes to the repository. Ideally, you will not to do this, if step 1.1.1.1 is not needed.
d62 2
a63 1
1.1.3 Create an upstream tag. The formating is VERY strict. Adapt to the suitable version.
d72 2
a73 1
Copy around from a personal template or edit the  Makefile.frag into the ./debian directory.
d75 2
a76 1
All your modifications were being recorded and will result in the defined patch file name into the ./debian/patches directory.
d78 3
a80 1
1.1.5 Modify the Debian changelog in the correct way. It is very important to follow the strict formating, as the Debian changelog is actualy used as one of the package control files.
d87 2
a88 1
1.1.8 Create the Debian version tag. The formating is very strict. Adapt to the suitable version.
d94 2
a95 1
If you are only building the package, you could use the anonymous cvs pserver login and checkout as explained in previous item.
d99 2
a100 1
Hint: You need to specify the absolute path to the temporary scratchpad working area instead of ~/.
d104 2
a105 1
The generated files will result at the specified temporary scratchpad working area.
d113 1
a113 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Thu, 26 Mar 2009 10:31:33 -0300
@


1.12
log
@Dependencies and scripts corrections for Tomcat 5.5 in Lenny.
@
text
@d11 8
a18 1

@


1.11
log
@new upstream version
@
text
@d5 1
a5 1
Also, it must use Sun Java 6, as of today.
d34 1
a34 1
cp --recursive --update --verbose --archive --preserve php-java-bridge-5.1.0/*  --target-directory=php-java-bridge
d38 1
a38 1
1.1.3 Create an upstream tag. The formating is very strict. Adapt to the suitable version.
d80 1
a80 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Tue, 06 May 2008 12:02:33 -0300
@


1.10
log
@Dropped php 4.x support.
@
text
@d40 1
a40 1
cvs -f tag 'upstream_version_5_1_0' '.'
d52 1
a52 1
debchange -v 5.1.0-1
d60 1
a60 1
cvs -f tag 'debian_version_5_1_0-1' '.'
d80 1
a80 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Wed, 30 Jan 2008 09:35:26 -0300
@


1.9
log
@modified directory names for more clear understanding
@
text
@d7 1
a7 1
If you use php4, you will have to adjust the /debian/control for your needs and rebuild binary packages.
@


1.8
log
@updated instructions to Java 6 and to most recent bridge code version.
@
text
@d19 1
a19 1
1.1.1 Create your local project area (checkout module). 
d24 2
a25 2
mkdir ~/compilation
cd ~/compilation
d29 1
a29 1
Now you should have your own local area (checked out module) in ~/compilation/php-java-bridge
d39 1
a39 1
cd ~/compilation/php-java-bridge
d43 1
a43 1
cd ~/compilation/php-java-bridge
d59 1
a59 1
cd ~/compilation/php-java-bridge
d66 1
a66 1
cd ~/compilation/php-java-bridge
d80 1
a80 1
 -- Andre Felipe Machado <andremachado@@techforce.com.br>  Thu, 20 Dec 2007 10:35:26 -0300
@


1.7
log
@fixed a typo
@
text
@d5 1
a5 1
Also, it must use Sun Java 5, as of today.
d34 1
a34 1
cp --recursive --update --verbose --archive --preserve php-java-bridge-4.0.8/*  --target-directory=php-java-bridge
d40 1
a40 1
cvs -f tag 'upstream_version_4_0_8' '.'
d52 1
a52 1
debchange -v 4.0.8-1
d60 1
a60 1
cvs -f tag 'debian_version_4_0_8-1' '.'
@


1.6
log
@New debian 4.0.8-1 package version
@
text
@d6 1
a6 1
You do not need C implemantation and php J2EE server versions simultaneously.
d80 1
a80 1
 -- Andre Felipe Machado <af-machado@@uol.com.br>  Tue, 09 Apr 2007 09:25:26 -0300
@


1.5
log
@New debian 4.0.8-1 package version
@
text
@a71 3

(Untested: cvs-buildpackage --linda --lintian -rfakeroot -uc -us )

@


1.4
log
@additional explanation where to find the compiled package.
@
text
@d4 1
a4 1
This Debian package was compiled for installing modules, not a complete install.
d6 4
d34 1
a34 1
cp --recursive --update --verbose --archive --preserve php-java-bridge-4.0.2/*  --target-directory=php-java-bridge
d40 1
a40 1
cvs -f tag 'upstream_version_4_0_2' '.'
d52 1
a52 1
debchange -v 4.0.2-1
d60 1
a60 1
cvs -f tag 'debian_version_4_0_2-1' '.'
d83 1
a83 1
 -- Andre Felipe Machado <af-machado@@uol.com.br>  Tue, 20 Mar 2007 08:25:26 -0300
@


1.3
log
@Some minor corrections and some typo corrections.
@
text
@d71 1
a71 1

@


1.2
log
@Updated for Debian specific package creation and building instructions.
@
text
@d34 1
a34 2
1.1.3 Create a upstream tag. The formating is very strict. Adapt to the suitable version.
Create tag: upstream_version_4_0_2 
d64 1
a64 1
Hint: You may need to specify the absolute path to the temporary scratchpad working area instead of ~/.
@


1.1
log
@initial version
@
text
@a6 1
The Makefile.frag must be copied over the original one at the php-java-bridge source directory.
d9 72
a80 1
 -- Andre Felipe Machado <af-machado@@uol.com.br>  Tue, 04 Dec 2006 08:19:32 -0200
@


1.1.2.1
log
@new Debian packaging, splitting binaries
@
text
@d4 1
a4 1
This Debian package was compiled for installing php5 C modules, j2ee server, docs and development files using separated packages.
a5 4
You do not need C implemantation and php J2EE server versions simultaneously.
If you use php4, you will have to adjust the /debian/control for your needs and rebuild binary packages.
Use the command 
debuild -rfakeroot -uc -us
d7 1
d10 1
a10 68
1. Creating and Building Debian package directly from CVS
Most steps are only needed if you will commit a new version to the repository.
If you want only to build an already commited version, you will need only create a local working area (checkout module) as anonymous cvs user and then jump to the step "building the package".

1.1 Creating package 

1.1.1 Create your local project area (checkout module). 
See http://sourceforge.net/cvs/?group_id=117793
The commands below are suitable for cvs commiters. Use your sourceforge cvs username. 
If you are only building the package, use anonymous cvs checkout as instructed in the URL. 

mkdir ~/compilation
cd ~/compilation
export CVS_RSH=ssh
cvs -d:ext:your_sourcefoge_cvs_username@@php-java-bridge.cvs.sourceforge.net:/cvsroot/php-java-bridge checkout php-java-bridge

Now you should have your own local area (checked out module) in ~/compilation/php-java-bridge
If you are only building the package, jump to the step 2.

1.1.1.1 If you are trying to merge a downloaded and then expanded src.tgz into the cvs tree, use the command below, adapting it to the suitable version.

cp --recursive --update --verbose --archive --preserve php-java-bridge-4.0.8/*  --target-directory=php-java-bridge

1.1.2 Commit the (eventual) changes to the repository. Ideally, you will not to do this, if step 1.1.1.1 is not needed.

1.1.3 Create an upstream tag. The formating is very strict. Adapt to the suitable version.
cd ~/compilation/php-java-bridge
cvs -f tag 'upstream_version_4_0_8' '.'

1.1.4 Create or edit the Debian php-java-bridge specific patches.
cd ~/compilation/php-java-bridge

dpatch-edit-patch patch 10_MakefileFrag_patch

Copy around from a personal template or edit the  Makefile.frag into the ./debian directory.
Exit dpatch shell. 
All your modifications were being recorded and will result in the defined patch file name into the ./debian/patches directory.

1.1.5 Modify the Debian changelog in the correct way. It is very important to follow the strict formating, as the Debian changelog is actualy used as one of the package control files.
debchange -v 4.0.8-1

1.1.6 Modify some other */debian files, if needed.

1.1.7 Commit all changes.

1.1.8 Create the Debian version tag. The formating is very strict. Adapt to the suitable version.
cd ~/compilation/php-java-bridge
cvs -f tag 'debian_version_4_0_8-1' '.'


2. Building the package from cvs tree.
If you are only building the package, you could use the anonymous cvs pserver login and checkout as explained in previous item.
mkdir ~/compilation_tmp
cd ~/compilation/php-java-bridge

Hint: You need to specify the absolute path to the temporary scratchpad working area instead of ~/.

cvs-buildpackage  -rfakeroot -uc -us -R. -W/home/andremachado/compilation_tmp

The generated files will result at the specified temporary scratchpad working area.







 -- Andre Felipe Machado <af-machado@@uol.com.br>  Tue, 09 Apr 2007 09:25:26 -0300
@


